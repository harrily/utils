2019-12-04

1-、需IT自动系统直接链接导出：供应商的付款账期天数...？此后业务是否需要实现自动/半自动？  √
		--、eas查找对应字段即可。
2-、手都完善的这些，有没有一种标准，或者规律，可供以后自动生成。
3-、CD-价格确认（周建-业务）   
4-、给特称提供科目余额的其他维度.  √
	时间修改
	柱状图颜色
	布局 ： fineBI激活码：71704542-eb6d6ab18-a51d-54045fb1233a
5-、给到茂泉：  √
	Eas采购相关表：
		CT_LS_Match  // 表数据一直在更新，现在导入是全量抽取，怎么结局数据实时性？
		T_BD_Material
		T_BD_Supplier
		T_IM_PurInWarehsBill
		T_IM_PurInWarehsEntry
		T_ORG_Storage
		T_SM_PurOrder
	-、数据有空格  // 去掉长度精度
	-、数值字段，默认为0的却显示为null // 去掉长度精度
	-、eas.ods_eas_new_eas75_t_bd_supplier 删除2019-09-24分区的数据。
6-、11.20之前给到世民/特称，表结构和维度图  √
7-、代办：
	1、eas新增excel梳理，以及其他手动输入字段逻辑梳理
	2、eas数据表抽取（by kettle） 
		/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL/day=${sys_day}/f
8、
	1)、数据更新，新增怎么个方案？
	2)、定时任务怎么执行？
9、hive的set参数优化方案
10、为什么hivesql的join多表之后，会产生大量的中间数据（1G → 100G）
11、优化CD金额为负数。  √
	1)、以前的逻辑优化
	2)、观察mid2数据规律join的时候加上过滤条件。
12、unknown优化 
13、优化物料名称查询 -- 物料降价记录表。  √
14、采购求CD可以存在问题： √
	1)、同一物料，相同年月对应不同的单价？
	2)、同一物料，相同年月两条相同数据或者两条不同单价数据？
	3)、同一物料，相同月份对应不同的采购员/供应商?
			-、根据采购员/供应商分组，计算对应的cd金额。
15、每个图标新增，字段bu，bg    √

16、物料名称去掉逗号  √
17、厂区和物料名称单独维护表√
18、单价单位    √
	-、根据币别  判断是否为美元。
19、采购员优化。 √
20、账期金额，存在CD金额比总金额多的情况。  √

21、设备的导出EXCEL，更新base表
22、
	-、恢复 hadoop fs -rmr hdfs://mycluster/apps/hive/warehouse/dwservice.db/dws_cd_by_material_cut_price_month3/*
	-、regexp_replace 未替换 "^" ？？？        √
		select regexp_replace(material_name,'\\^','') as A,material_name from  dwmiddle.dwb_purchase_combine_mid_report_eas_final3 
where material_code= '180-QP220150-0000'


23、-、去掉“/”数据
	-、确认磁材 ，深圳结构件，东莞结构件的数据。√
	-、磁材数据显示有问题。   √
	
24、导出EXCEL。  
	-、磁材，结构件  暂时屏蔽
	-、汇总导出的是yifie的数据
25、row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#') 
STORED AS orc tblproperties('orc.compression' = 'snappy')

26、
	1-、存在是币别为美元的情况，对应的汇率却为1？
			目前解决方案：取当前月报对应月份系统中的有效汇率替换，转化为统一币别计算CD。
	2-、未税单价的有效位数不一致，是否统一位数？  6位 展示2位
				冲压	4位
	3-、存在amout为负数的情况
	：查看所属BG,反馈给对应负责人	

	
	1-、新的逻辑 ： 
		-、stand_price 要设置为数值，且数字要保留6位。  √
		-、在计算CD之前统一转化为人民币。（存在为USD且汇率为1的情况） √
		-、去掉设备BG。 √
		-、物料单价，计算取6位，展示取2位小数。 √
		-、原始数据的币别要和price对应。统一用RMB，还是美元？ √
			-、统一使用RMB
		-、CNC转大写，yifei的nurmonth改为date  
		-、为什么(regexp_replace( material_name,'"',''),"'",""),'\\^','')，未转化过来。
		-、要增量抽取数据 
		-、phoenix安装4.14版本[安装phoenix-4.9 已解决分页问题。]   √
			-、数据迁移
			-、安装4.14版本phoenix
				-、注意修改phoenix端口，不与当前的phoenix冲突。
				
		-、生成最终基础报表（换算成RMB，币别也为人民币）
		-、确认物料名称中，CD全为0的数据。
		
		-、内部交易相关：
				1. CNC,冲压,显示模组BG内部交易部分不纳入采购金额；
					显示模组-内部交易公司：帝晶大洋田第二分厂；帝晶光电；帝晶光电（深圳）；帝晶科技；帝晶科技（OEM事业部)；赣州帝晶；香港帝晶（友达）
				2. 组装BG-内部交易金额纳入采购金额；
				3. 模切BG-内部交易按公司与物料类别区分,需要提供区分的规则？
			
			-、内部公司的CD不计入（CNC,冲压,显示模组BG的内部交易部分不纳入采购金额；）
				-、根据company表筛选 + 模糊筛选
				-、模切单独规则：
					关于模切的内部交易有如下规则：
					1.成品之外的原材料--不纳入采购金额；
						question：
							1、当前模切一级分类中包含[原材料,成品,主材料,辅助材料,半成品],是否就是除了成品这一类别外，其他都不纳入采购金额？
							2、不纳入采购金额，是否纳入CD。
					2.自己生产的成品--不算采购金额，但是算CD金额；
						question：
							1、怎么定义是自产成品？
					3.调拨的材料--不算采购金额，也不算CD金额；[其中调拨材料部分，就是不是自己生产的，例如：成都领益需要一卷材料，找东莞领益购买，东莞领益发现东台有，就直接从东台调货发往成都。这个就属于调拨]
						question：
							1、调拨材料怎么区分，是根据供应商是自家公司进行区分？
					4.美金采购部分，我们都是与TLG（算是子公司）购买，我们不算与TLG的采购金额，但是我们算TLG与原厂商的采购金额。也就是TLG是个中间公司，所以我们只需要算一遍采购金额。
							-、供应商是 TLG INVESTMENT (HK) LIMITED   01.05.03  剔除掉。
					
			
				整理1：
					1.成品之外的原材料--不纳入采购金额；
						1、内部交易中，1.半成品，成品都要算；2.调拨材料模切这块只有原材料调拨，也就是原材料/主材/辅材这三个会调拨，这三个的规则就是不算采购金额也不算采购CD
					2.自己生产的成品和调拨的材料 不能区分（根据现有的规则，不需要区分）
					3.供应商是 TLG INVESTMENT (HK) LIMITED   01.05.03  剔除掉。
					
					
					数据拉取规则：
						以采购入库单为主，关联其他表单
					内部交易规则：
						当前模切一级分类中，除了半成品，成品，其他都要剔除内部交易。
						内部交易是按照供应商是自家公司区分。
					
					
		2019-12-27沟通；	
		-、物料一级分类中为空的值，本来就属于一级分类,如果为null,则直接拿二级分类作为一级分类。  √
		-、内部交易区分:参考【整理1】  √
		-、先根据新的规则  √
			-、 580：冲压，
				581：CNC，
				583：模切 ，
				587：模切 
		-、再根据人员区分其余5W+   
		-、UAT，日期改为2019-12  【给茂泉提示使用新的报表的数据 report】  √
		-、material_name 包含有 '\'   √
			: regexp_replace(material_name,'\\\\',''),
			
		-、磁材数据异常：
			1、日期异常，0000-00-00，0.000
			2、单位异常，,1,10,100,1000,10000,14159.29,32707.96,6.64,74955.75,9690.27,BOX,CM,CT,G,JHR,JUA,KAN,KG,L,LIN,M,M2,M3,PAA,PAK,SET,ST,TO
		
		-、相同物料名称，且物料id为null，怎么处理，当前是以物料名称分组，取第一条code。
27、执行start.sh 
	-、添加参数 20191216
	-、修改第二个脚本的，添加参数l_date,以及查询基础表（from）添加l_date
	
	测试 ：-不加mapjoin  6030s
		
计算逻辑优化（已完成）：
	1、物料需关联对应供应商求得CD
	2、税率异常的情况，取当前月报日期对应的系统税率。
	3、物料单价计算保留小数点后6位，展示保留2位小数。
当前CD计算逻辑：
	默认取当前月报上年度第12月单价[未税]作为基准价
	1、若上年度第12月无值，则向下依次取11月...1月，直至取到有效值.
	2、若上年度未取到有效值，则依次取当前月报对应年度的1月,2月...当前月，直至取到有效值.
	
28、
	lymastero1:namenode1
	2020-01-03 02:15:32,106 WARN  ipc.Client (Client.java:handleConnectionFailure(886)) - Failed to connect to server: lyzk01/10.0.24.107:8485: retries get failed due to exceeded maximum allowed retries number: 50
java.net.ConnectException: 拒绝连接
	2020-01-03 02:16:12,081 WARN  client.QuorumJournalManager (IPCLoggerChannel.java:call(388)) - Remote journal 10.0.24.111:8485 failed to write txns 6540164-6540164. Will try to write to this JN again after the next log roll.
org.apache.hadoop.ipc.RemoteException(java.io.IOException): IPC's epoch 236 is less than the last promised epoch 237
	2020-01-03 02:16:12,230 WARN  client.QuorumJournalManager (IPCLoggerChannel.java:call(388)) - Remote journal 10.0.24.110:8485 failed to write txns 6540164-6540164. Will try to write to this JN again after the next log roll.
org.apache.hadoop.ipc.RemoteException(java.io.IOException): IPC's epoch 236 is less than the last promised epoch 237
	2020-01-03 02:16:18,068 INFO  ipc.Client (Client.java:handleConnectionFailure(904)) - Retrying connect to server: lyzk01/10.0.24.107:8485. Already tried 31 time(s)
 retry policy is RetryUpToMaximumCountWithFixedSleep(maxRetries=50, sleepTime=1000 MILLISECONDS)
	2020-01-03 02:16:19,068 INFO  client.QuorumJournalManager (QuorumCall.java:waitFor(136)) - Waited 7003 ms (timeout=20000 ms) for a response for sendEdits. Exceptions so far: [10.0.24.111:8485: IPC's epoch 236 is less than the last promised epoch 237


29、
	-、供应商将近一半的，CD金额为0.其实是赠品。
	-、物料类型（一级分类）显示为null的，取物料名称（二级分类）
	
	新需求修改：
		1、根据成本中心以及部门，区分BG。
			-、成本中心为空的，需要询问经管是如何区分的。
			-、成本中心为其他的，不属于采购，无需处理？
		2、赠品的这一部分CD如何计算? (等待回复)
		3、原始报表展示，要返回所有基础字段。
			-、数据库中无字段，则添加字段
			-、无值得数据，照常输出。
	
余姐，咨询了经管对接模切，组装，cnc部分同事，总结了关于生产中心区分BG的问题。
成本中心区分BG流程：成本中心 ->BU -> BG
1、目前采购入库单中的"成本中心"有154种，除了部分可以根据名称区分BG,其他的需要一份成本中心对应BU，BG的对照表，才能够区分。
2、采购入库单中存在超过30%的数据"成本中心"为空的数据。这部分数据，需要人工区分。
cnc（东莞经管）：根据采购物料类别和采购下单人等字段识别
模切（深圳经管）：根据法人组织（库存组织）来区分
模切（东莞经管）：根据法人组织（库存组织），然后根据库存仓位对照表，区分模切的数据。
组装1：反馈很少存在"成本中心"为空的情况。


2020-01-14
1、模具，想要一个测试账号
2、模具系统中，不能找到对应物料的历史报价，目前他们采用手工录入excel计算。
3、成本中心的数据如何区分？
			
			
你好，根据成本中心，还有大部分数据区分不了，建议eas和模具系统业务层，添加如下字段。
	1、eas 采购订单加字段BG选项（必填）
	2、模具系统字段BG选项（必填） , 基准价（必填）。
	
	
30、
	-、area区域名称表，uat需要维护，脚本同样。
	-、优先取BG,小厂， 然后根据成本中心区分。
		
	
1、模具系统 
		费用归类：冲压研发，翎裕模坊
		采购员：
	
	1、时间段  -- 2019-01 ~ 2019-12
	2、采购员  
		  当前BG  以前的BG
		
	3、sap（模切，cnc）， 怎么区分BG,(小厂)  ，采购员。
	4、sap未来协商， +BG , +返点 ， +议价  == 数据源解决
	5、sap    磁材，结构键  与 模切，cnc，冲压，组装。
	
	
	
	
1、模具,eas,sap 需添加BG这一个字段。（需要采购提单给it）
2、cd金额的优化方案（加字段）需要采购和it开会确定，待定开会时间。
	
	
	/root/shell/hive/purchase_bi_shell/step_shell
	
combine_eas_mid1_new3.sh
combine_account_day.sh
combine_eas_mid_report_eas_new3.sh
combine_eas_mid1_new3_distinct.sh
combine_eas_bg_by_costcenter.sh
get_standardpirce.sh
get_standardpirce2.sh
get_correct_price.sh
get_correct_price2.sh
combine_muju_sap.sh
get_report1.sh
get_report2.sh
get_report3.sh
get_buyerid.sh	
get_cd_by_buyid.sh	
remove_inner_by_moqie.sh
remove_inner_by_cnc_cy.sh	
remove_inner_by_xsmz.sh
generate_cicai_report.sh
generate_jiegoujian_report.sh
cd_by_ammount.sh	
cd_by_material_cut.sh	
cd_by_material_type.sh	
cd_by_supplier.sh
cd_by_account_day_pay_type.sh	
cd_by_area.sh
cd_by_material_name.sh	
	






1、添加eas，sap，摸具
2、
	-、uat定时启动脚本呢
	-、uat ， phoenix 以及ipc配置。
		1、hbase，和regionserver的指定lib目录下放置建立phoenix server服务
			ln -s  /opt/phoenix-4.9.0-HBase-1.1-server.jar  /usr/hdp/2.5.3.0-37/hbase/lib/phoenix-server.jar
		2、重启集群
		3、错误提示： Error: ERROR 726 (43M10): Inconsistent namespace mapping properties. Cannot initiate
		集群hbase-site.xml 中添加 
		phoenix.schema.isNamespaceMappingEnabled=ture
		4、dbeaner工具，添加属性：
			phoenix.schema.isNamespaceMappingEnabled=True
			phoenix.schema.mapSystemTablesToNamespace=True

uat中hbase相关配置添加：

hbase.client.operation.timeout=3600000
hbase.client.scanner.timeout.period=3600000
hbase.table.sanity.checks=false
phoenix.query.keepAliveMs=3600000
phoenix.schema.isNamespaceMappingEnabled=true	
phoenix.schema.mapSystemTablesToNamespace=true

HBase RPC Timeout=3600000
Phoenix Query Timeout=3600000
	
	结构件和磁材申城报表，使用MR查询没数据。
	
	模具系统
	1、入库数量，存在小数情况
	2、area需要维护area_company 表。
	
	
	1、物料名称（material_name） ，用物料编码代替
	2、 period, year, month, date 字段替换成正确格式在合并。
	3、补充公司名称字段
	
ct_ls_match
	
	2020年前需要维护--BG表。
	1、需要抽表，NEW_EAS75库T_LS_BG表（BG基础表）  -->  eas.ods_eas_new_eas75_t_ls_bg  (hive表名)
	2、
	select * from t_sm_purorder A left join 
(select  fid,fname_l2 eas.ods_eas_new_eas75_t_ls_bg where day='${l_date}') B on A.cfbgid = B.fid
	
	
	
	！！！！！ important
	1、sh脚本时间模板中，#输入参数判断逻辑 if [ $# -eq 2 ]
then
		两个参数，要大于2

	2020年新任务
	
	1、执行每天的kettle脚本
		-、kettle问题
			1、No suitable driver found for jdbc:hive2://hadoop102:10000/kettle
				清楚缓存rm -rf /opt/data-integration/system/karaf/caches
			2、在lib下添加oracle的jar，hive相关的所有jar，mysql的jdbc相关jar包。
			3、在windows下配置的hadoop集群的版本信息也需要在linux中的：F:\kettle\data-integration\plugins\pentaho-big-data-plugin\plugin.properties 中把active.hadoop.configuration=cdh58 改为对应的windows下配置的版本，否则会报错：org.pentaho.di.core.hadoop.NoShimSpecifiedException: Active configuration no...active.hadoop.configuration信息。
				修改的部分：active.hadoop.configuration=hdp26
			
			4、Got a local filesystem, was expecting an hdfs connection(nullPoint)
				hdfs://hdfs@mycluster:8020/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_LS_BG/day=${sys_day}/f 
					-、去掉hdfs://  
					-、mycluster改为对应active的ip，或者  mycluster去掉后面的端口。
				
			参考资料；https://www.2cto.com/kf/201801/713626.
			https://blog.csdn.net/weinierzui/article/details/77931346
	2、start脚本试跑。
	
	
	1、4分 40% 大数据测试平台运维。（已完成）
	2、4分 60% kettle新增抽取eas的相关的BG关联表数据。（已完成）
	
	
	/opt/ly_kettle/files/05-KettleFiles/FileRepo/Test/Shell/run_kettle_job.sh /dw/ods/mould ods_mould_p1_cdmould_job
	
	1、4分 30% 优化phoenix表，增量更新（完成80%）。
	2、4分 40% 采购2020年1月份数据导出（完成90%）。
	3、4分 30% 优化采购业务执行效率（已完成）。
	
	茂泉，还要麻烦你重新抽下这张表，分区也是day=2020-02-04,EAS的这张表（t_sm_purorder）需要新增抽取的字段cfbgid(业务新增的字段),忘了改了- -，之前的ktr文件（eas_purchase.ktr），


	2020-02-06
	1、执行start脚本。
	1、2020年1月份数据  
		-、确定bg字段，是否存在null的情况，继而优化成本中心区分的sql。
			：存在，37条，待处理  【因为BG不为CNC,模切的数据，dim都为unknown，所以理论上，不会存在dim is null的情况。】
			存在原因:物料名称中存在 "^" 特殊符号【静电要求：静电压≤100V,内外电阻＜10】
			根本解决：（1、需要多分隔符。2、而且后续物料名称，物料model要去掉特殊符号。）
		-、 combine_muju_sap.sh脚本中，模具日期未改为${l_date}
			FROM dwbase.dwb_mould_poorder where day='2020-01-15'
		-、导出  已确定 + 未确定
	2、优化phoenix表插入
		1、凌晨跑，维持当前不变，不影响正常使用
		2、更新时，切换数据源
		3、更新的数据，删除当月的数据，增量更新。
	
-- 测试start1 数据是否正常
select count(1)  from dwmiddle.dwb_purchase_combine_mid1_new3  where day='2020-02-04'

select count(1)  from dwmiddle.account_mid where day='2020-02-04'

select count(1)  from dwmiddle.dwb_purchase_combine_mid_report_eas_new_test3  where day='2020-02-04'
  --21480032
select count(1)  from dwmiddle.dwb_purchase_combine_mid_report_eas_distinct_new3 where day='2020-02-04'
 --10829476
select BG,count(1)  from dwmiddle.dwb_purchase_combine_mid_report_eas_distinct_new3 where day='2020-02-04' 
group by BG

-- 测试模具系统，sap（cnc,冲压，模切等）  ，易飞数据
select count(1)  FROM dwbase.dwb_mould_poorder where day='2020-01-15'

select count(1)  FROM sap.ods_sap_zfmm_044_jituan where day='2020-02-04'

select count(1)  FROM dwbase.dwb_yifei_display_module where day='2020-01-02'
  -- 319570

-- dwmiddle.dwb_purchase_combine_mid_report_eas_distinct_new3 where day='2020-02-04' group by BG

模切	34
冲压	2
	5371984
[null]	5457456
	
-- group by dim

	1	935388
3	1748797
5	10117
2	671076
	37
unknown	7464024
[null]	37


	1、4分 40% 优化phoenix表，增量更新（完成90%）。
	2、4分 60% 采购2020年1月份数据导出（已完成）。
	
	
	余姐，这是2020年1月份，未区分BG的数据 + 已区分BG的数据 。
	
	
余姐，我是第二类（远程办公），
预计下周任务：测试环境定时任务维护（采购相关），uat环境投入使用（采购相关），
具体每天工作安排如下：
2020-02-10：
	1、优化采购相关phoenix表的更新方式。
	2、采购相关定时任务维护（kettle脚本 -> hive脚本 -> phoenix脚本 ）【预计完成50%】
2020-02-11：
	1、uat环境数据接入（采购业务） 【预计完成50%】
	2、采购相关定时任务维护（kettle脚本 -> hive脚本 -> phoenix脚本- ）【预计完成100%】
2020-02-12：
	1、uat环境数据接入（采购业务）【预计完成100%】
2020-02-13：
	1、uat相关定时任务维护（采购业务）.【预计完成50%】
2020-02-13：
	1、uat相关定时任务维护（采购业务）.【预计完成100%】


2020-02-10：
	1、优化采购相关phoenix表的更新方式。
	2、采购相关定时任务维护（kettle脚本 -> hive脚本 -> phoenix脚本 ）
2020-02-11：
	1、uat环境数据接入（采购业务） 
	2、采购相关定时任务维护（kettle脚本 -> hive脚本 -> phoenix脚本-）
2020-02-12：
	1、uat环境数据接入（采购业务）
2020-02-13：
	1、uat相关定时任务维护（采购业务）.
2020-02-13：
	1、uat相关定时任务维护（采购业务）.
	
	
2020-02-01 mission
	1、sap：冲压、模切、CNC、深圳结构件、东莞结构件、磁材
	
			-- 结构件  根据company_no区分数据
		select company_no,sum(original_currency_amount) from sap.ods_sap_zdmmr027 where day='2020-02-04'
		and concat(substring(in_date,0,4),'-',substring(in_date,6,2)) = '2020-01' 
		group by company_no

		
		select distinct(factory) from sap.ods_sap_zdmmr027 where day='2020-02-04' 
		and concat(substring(in_date,0,4),'-',substring(in_date,6,2)) = '2020-01'  

		
		-- 显示模组  1月份的数据
		select sum((cast(ori_cur_beftax_amount as DECIMAL(28,16)))+(cast(ori_cur_tax_rate as DECIMAL(28,16)))) from dwbase.dwb_yifei_display_module where day='2020-02-04'
		and CONCAT_WS('-', SUBSTRING(natural_month,0,4), SUBSTRING(natural_month,5,2)) = '2020-01' 
	
			
		-- 磁材数据
		
		-- 10529442.69
		select sum((NETPR/PEINH)*MENGE) from  sap.ods_sap_zfmm_042 where day='2020-02-07' and
		 CONCAT_WS('-',substring(budat,0,4),substring(budat,6,2)) = '2020-01' 
		 
	   select sum((NETPR/PEINH)*MENGE) from sap.ODS_SAP_ZMMR008_SHOW where day='2020-02-07' and 
	   CONCAT_WS('-',substring(budat,0,4),substring(budat,6,2)) = '2020-01' 
	   
	   select distinct(day) from sap.ODS_SAP_ZMMR008_SHOW

	   select CONCAT_WS('-',substring(budat,0,4),substring(budat,6,2)) from sap.ODS_SAP_ZMMR008_SHOW where day='2020-02-07'
		and 
	   CONCAT_WS('-',substring(budat,0,4),substring(budat,6,2))
	   
	   
	    insert into table dwbase.dwb_sap_cicai partition(day='2020-02-04')
     SELECT supplier_code, supplier_name, po, material_code, material_des, in_date, unit, order_qty, in_qty,
      factory_code, factory_des, company_des, tax_unit_price, in_tax_amout, material_group, material_group_des, 
      if(untax_unit_price is null or untax_unit_price=0,tax_unit_price/1.16,untax_unit_price) as untax_unit_price , 
      buyer, pre_tax_unit_price, pre_untax_unit_price, cd_amount, cd_percent, origin, reserved1,
       reserved2  FROM dwbase.dwb_sap_cicai where day='2019-12-30'
	   --  sap 数据异常（sap.ods_sap_zfmm_044_jituan）  -- > 包括cnc，冲压，模切，磁材
			1、基准价很多为0
			2、未税单价和含税单价异常。
		
	2、之后导数据，不用拿显示模组的数据。
	3、组装去掉内部交易，
	4、sap的结构件 ，是根据company_no来区分深圳和东莞结构件的。
	5、整理phoenix表
		DW.DWS_PURCHASE_REPORT_BY_EAS2 这张表数据比较大且有索引（千万级）， 目前业务改动频繁， 每次更新需要删除以前的数据，以后业务稳定后，这张表，我会跟进优化为增量更新
		
维度数据映射关系：
	dwservice.dws_cd_by_amount_month3 where day='2020-02-04'  --> DW.DWS_CD_BY_AMOUNT_MONTH
	dwservice.dws_cd_by_material_cut_price_month3 where day='2020-02-04'  -->  	DW.DWS_CD_BY_ACCOUNT_DAY_MONTH
	dwservice.dws_cd_by_material_type_month3 where day='2020-02-04'  -->   DW.DWS_CD_BY_MATERIAL_TYPE_MONTH
	dwservice.dws_cd_by_area_day_month3 where day='2020-02-04' -->   DW.DWS_CD_BY_AREA_MONTH
	dwservice.dws_cd_by_supplier_month3 where day='2020-02-04'  -->  DW.DWS_CD_BY_SUPPLIER_MONTH
	dwservice.dws_cd_by_account_day_pay_type_month  where day='2020-02-04' --> 	DW.DWS_CD_BY_ACCOUNT_DAY_MONTH
	dwservice.dws_cd_by_material_month3 where day='2020-02-04'   -->  DW.DWS_CD_BY_MATERIAL_MONTH
excel导出数据映射关系：
	dwbase.dwb_sap_jiegoujian_by_cd   --> DW.DWS_PURCHASE_REPORT_BY_JIEG
	dwbase.dwb_sap_cicai_by_cd    -->  DW.DWS_PURCHASE_REPORT_BY_CICAI
	dwmiddle.dwb_purchase_report_cd   --> DW.DWS_PURCHASE_REPORT_BY_EAS
	dwbase.dwb_yifei_display_module   --> DW.DWB_YIFEI_DISPLAY_MODULE


更新方案：2种，
	当前方案：
		删除对应的phoenix表数据，取hive分区的数据插入phoenix表。
		
	后续业务优化方案
	
	待优化：
		1、钟海，显示模组的拉取以及合并数据
		2、周健磁材数据-- 合并
	
1、组装BG去掉内部交易，重新计算1月份组装采购额（100%）
2、与茂泉连通phoenix。拉通所有模块（80%）


2020-02-11
1、数据不止生产入库单
2、项目 -- 内部项目，外部项目


1、采购周期是月报的取值周期是2019/12/16~2020/01/15， 当前excel取值周期是2020/01/01~2020/01/30 ,
2、模切rita说一定需确认是否含模具系统的金额，例如：坂崎雕刻模具(昆山)有限公司，这个是模具供应商看是否有抓取到。模切的金额是算了包含了模具的未税总金额；
模切的我这边确认下。
3、组装的内部交易已经去掉了。
余姐，针对1,2两条，我这边修改后，再发给你

余姐，数据已修改至最新的excel。
1、采购金额数据已更新（取值周期是2019/12/16~2020/01/15）
2、模切数据不包括坂崎雕刻模具(昆山)有限公司此供应商的数据。
3、组装的内部交易已经去掉了。


2020-02-12
1、重跑start2  √
2、结构件的数据没有，  √

任务梳理：
1、梳理经管冲压业务逻辑以及业务代码编写（40%）
	1-、与苏州模切以及黄江一厂，二厂，常平产值需求沟通，（100%）
	2-、确认数据源数据准确性（50%）
	3-、业务代码边下（待完成）
2、uat环境，采购相关数据表构建（100%）


-- 结构件: 需要维护sap.ODS_SAP_ZDMMR027表
-- 磁材:需要维护dwbase.dwb_sap_cicai表【合并sql，需整理给我，我这边整合在一块】


-- 组装数据
采购组装BG计算采购额规则：
	1、剔除内部交易额，分为两种情况
		情况1、内部交易中，需去掉供应商为LY INVESTMENT (HK) LIMITED的数据，另外需要计算库存组织是LY INVESTMENT (HK) LIMITED的数据。
		情况2、内部交易中，不需要去掉供应商为LY INVESTMENT (HK) LIMITED的数据，另外不用计算库存组织是LY INVESTMENT (HK) LIMITED 的数据，转而
		计算库存组织是东莞领杰的数据且，需要把单价换算（即单价提高3个点）。
	2、组装数据包含模具系统的数据
当前大数据逻辑：采用剔除内部交易额情况1来计算采购额，且优先根据成本中心区分BG。
	数据异常的原因：
	  1-、根据成本中心区分BG有误。 组装的部分采购员根据成本中心区分却被划分为非组装的其他BG。
	  2-、当前系统包含部分模具系统数据（模具系统部分数据无采购员,故不能计算采购额）
重新根据采购员计算：
		大数据计算采购额：26.702588(百万)
		采购计算采购额：23.884406(百万)
	
	  参考sql：  
	  select sum(amount) from (
	  select amount,buyer,company_name,supplier_name,stock_in_time, stock_in_audit_time
     from dwmiddle.dwb_purchase_report where day='2020-02-04'
     and `date` in ('202001','201912') 
    and ( (regexp_replace(regexp_replace(substring(stock_in_time,0,10),'-',''),'/','')
   	 between '20191216' and '20200115') ) 
   	 and buyer in ('卢娜灵','阳贤','杨甲香','王艳','李周蓉')
   	 and supplier_name != 'LY INVESTMENT (HK) LIMITED'
   	  group by amount,buyer,company_name,supplier_name,stock_in_time,stock_in_audit_time) A
	
	('HN-13931','6048732','HJ-3429','6113508','HN-7454')
	
== shell 传递参数	
ls | grep .sh |xargs  chmod 755

	
	2020-02-13
1、确认数据源经管冲压业务数据准确性（80%）
2、与采购组装沟通核对采购组装数据性（80%）
3、uat采购phoenix，hive表构建（100%）

1、采购相应模块拉通定时任务。（已完成100%）
2、冲压经管完成业务逻辑梳理，数据确认。（已完成100%）
3、相关BG数据导出以及对比。（已完成100%）
4、uat环境采购相关表构建以及集群维护。（已完成100%）


1、冲压经管相关业务代码落地。
2、采购模块uat投入使用。
3、系统日常运维
2020-02-17：
	1、苏州冲压经管相关业务代码落地。
	2、采购模块uat相关业务接入。
2020-02-18：
	1、黄江一厂等冲压经管相关业务代码落地。
	2、采购模块uat相关业务接入。
2020-02-19：
	1、调试经管冲压数据准确性
2020-02-20：
	1、调试经管冲压数据准确性
	2、uat以及测试大数据平台日常运维与数据维护
2020-02-21：
	1、uat以及测试大数据平台日常运维与数据维护
	
	
	
2020-02-17
苏州冲压：
	1、售价是从EAS导出销售价格表，取销售组织为苏州领裕和香港公司，删除客户为关联公司；
	根据六码按照第一顺位为生效日期最新，第二顺位为价格最低的取单价；
	2、结单的入库数量：已结成品工单的良品入库数+返工工工单从不良品仓返工入良品数量-返工工单从正常仓领料入不良品仓数量-正常仓调拨不良品仓数量
	3、我们有结单和入库产值  都没有从外挂取数
	
	 
	1、怎么区分冲压，根据物料编码？  --> 冲压计算产值料号为880/883开头料号&（少量集团半成品料号68开头
	2、核心单据类型
				过滤：
			1）：B/Z/单头工单（如果从MRB、报废仓领用，无需过滤）
			2）：过滤不良品入库 
	里面的过滤是什么意思？
	3、制造厂： 根据小厂区分？ 小厂的区分（工单号是否就是billfnumber【单据编码】）
	4、工单关闭字段什么意思？
		审核时间,
		
	5、单价根据销售价目表？
	6、入库数量确定.
	7、审核时间 --> 确定周别
	
	
phoenix  4.9 版本连接：
lyzk02	

>>>2020-02-18<<<
1、存在日期为空的情况。(以入库审核时间为准)
示例：订单存在两次入库情况 ==>
   	select * from   eas.ods_eas_new_eas75_t_sm_purorder where day='2020-02-04'
   	and fnumber = 'LYDGPO191214009'

   	
   	select * from  eas.ods_eas_new_eas75_t_im_purinwarehsentry where day='2020-02-04'
   	and fpurorderNumber = 'LYDGPO191214009'


2、处理完采购导出，然后创建INDEX_1_DWS_CD_BY_MATERIAL_MONTH
3、结构件的 company_des字段没有
4、不能根据这个详情表计算总金额，因为一个订单对应多个物料，价格会重复

经理，这是基础数据，不能直接对金额汇总的出总金额（因为同样一个订单的金额，会重复在基础数据中出现【因为同样金额的记录，可能其他字段不一样】，）。


>>>2020-02-19<<<
1、核对其他BG的数据 ，尽量减少误差。
2、CD来源和运算逻辑，这边各BG都给了，其实每个BG还是稍稍有点不同，所以我这边没有进行合并了，怕改了规则。你看下这些逻辑是否能够加入系统。或者从IT角度有哪些疑问，这边也先汇总下，看下周可以组织个会议讨论下。谢谢

	序号	CD来源	CD运算逻辑	备注（来源情况说明）
	1	直降	原价-现价	
	2	替代	被替料-替代料	
	3	返点	货款金额*返点比例	
	4	价差	原价-现价	
	5	废料	报价损耗外废料交回	
	6	赠送料	免费赠送	
	7	供应商赔偿超出成本数	超经管成本索赔	
	8	降价往前追溯的金额	系统维护新价格时间前移	

3、
	-、修改日期为 2019-12-15~2020-01-10
		-、且以入库审核时间为主，剔除掉入库审核时间为null的，date也置为null
		-、修改year和month  
		-、尽量把eas的cd表，去重复金额。（见7中详述）
	-、计算CD时是需要供应商+物料更合适
4、红头文件
5、导出一份2019年cnc的数据。
6、
-- 虽然我们的版本已经高达2.0.0，但是对于IN的处理还是就比较简陋，没有对null值进行屏蔽，导致凡是子查询中有null值， 条件就会变成： id in ( null) , 当然， id in ( null) 这个条件是永远不会有结果的。   
11848 61146 49298
7、计算总金额的时候，要根据 stock_number,stock_in_audit_time,amount来保证不同维度下，金额只被计算一次。
		select * from   eas.ods_eas_new_eas75_t_sm_purorder where day='2020-02-04'
   	and fnumber = 'LYDGPO191214009'

		select * from  eas.ods_eas_new_eas75_t_im_purinwarehsentry where day='2020-02-04'
   	and fpurorderNumber = 'LYDGPO191214009'

		-- xusEFwp4Rg2NxkitmmAotXgwYeM=
		-- ozsKItXDTMy71yQPR9XTcngwYeM=
		select * from   eas.ods_eas_new_eas75_t_im_purinwarehsbill where day='2020-02-04'
   	and fid in(  'ozsKItXDTMy71yQPR9XTcngwYeM=' ,'xusEFwp4Rg2NxkitmmAotXgwYeM=') 

	
8、填写第一季度个人任务规划
9、phoenix的其余三个表的维护，需要整合进去。

11、详情表，存在基准价为0，未税单价不为0，但是cd为0 ， 因为求cd时，吧基准价为0的当成未税单价，故相减=0,*数量也为0.
10、删除测试hdfs的历史数据。
-- 结构件 date
-- 磁材   in_date
-- 显示模组  date 或者NATURAL_MONTH
-- eas表 date
12、-、phoenix更新 ，删除指定月份的数据，导入指定月份的数据。
	-、 采购入库单 -> 多个采购入库分录（不同的物料，各一条记录）    
			-- 所以针对（一个入库单对应多个分录单），以同一个物料为一条记录，不会存在 重复计算，因为相同入库单和订单，amount属于不同的物料计算的，
				--、如何区分数据join存在的冗余
					1、根据 采购入库单号，物料号，入库审核时间，amount
		采购订单 -> 对应多个采购入库分录单（分录单中的amout合计就是，订单的总金额）


	示例： 根据fparentid,fmaterialid | fparentid,fmaterialid,FAmount  | all   以及+ 时间过滤组合，根据数据总条数，查看数据重复度。
	-- 3240720  3292183  3302735
	-- 1692055  1713861  1718009
	-- 941861   951139   952898
	select count(1) from (
	select fparentid,fmaterialid ,FAmount,count(1) as cnt from eas.ods_eas_new_eas75_t_im_purinwarehsentry where day='2020-02-04'
	and fbizdate between '2018/01/01' and '2021/01/01'
	group by fparentid,fmaterialid,FAmount) A 
6091043
结论：2018-2020年的数据，可以根据【采购入库单号+物料编码+总金额+入库审核时间 	 group by stock_number,stock_in_audit_time,material_code,amount,dim】 来确定数据的唯一性。
	正确方法：根据fid来确保采购入库单的总金额计算，不会重复或者少计算。
	备注： 可能存在着4条都重复的数据，经上述研究，数据较少 5000条不到。
	
备注： 
	-、可能存在着4条都重复的数据，经上述研究，数据较少 5000条不到。
	-、可能存在一个物料在同一个单据中，下不同的供应商。（cnc中存在，1个情况，多算了2868元。）
				5	2203212.54896
				unknown	759291737.732599
				1	209325614.479558
				2	83655561.806451
				3	423681412.156099

				5	2203212.54896
				unknown	759291737.732599
				1	209328482.479558
				2	83655561.806451
				3	423681412.156099
	-、在group by 后追加fid字段。
   	 group by stock_number,stock_in_audit_time,material_code,amount,supplier_code,dim,"date",cd_amount
   	 	 ,area,first_level,material_name
	-、eas的sql再优化，存在 account_day,pay_type = null的情况，也join进来了
	-、	purorder_fid 其实是 采购入库分录的fid。
	
	
	
13、sap数据映射。
dwbase.dwb_sap_cicai         ------->  dwdetail.dwd_cicai_cd_detail
sap.ods_sap_zdmmr027         ------->  dwdetail.dwd_jiegoujian_cd_detail
sap.ods_sap_zfmm_044_jituan  ------->  dwdetail.dwd_jituan_cd_detail

	2700

1200
3700
8800
1100
8820
8810
	
>>>2020-02-25<<<
	待完善：
		-、yifei数据整合脚本
		-、模具系统（茂泉）
		-、周建
		-、uat--> phoenix 表 
			set hive.execution.engine=mr

			set mapreduce.map.memory.mb=2200

			set mapreduce.map.java.opts=-Xmx2048m

			set mapreduce.reduce.java.opts=-Xmx2048m
			set mapreduce.reduce.memory.mb=2200

		-、uat--yifei数据整合
			
		-、eas.ods_eas_new_eas75_t_bd_person中存在 ，number不是工号。
			杨甲香  DGMMD006  HJ-3429
		-、组装的内部交易剔除，采用新规则。【参考531行。】
			1、是只剔除 supplier_name != 'LY INVESTMENT (HK) LIMITED' 的数据？
			2、剔除供应商是本家公司的所有数据  【当前采用，（因为发现组装的数据，除了HK公司的，其他供应商是本家基本无，故代码无修改，同cnc，冲压一样。）】
		-、 eas各个部门的人员分布
冲压：
('颜冬梅','李秋云','曾庆燊','黄利霞','皮丽芳','何清秀','杨冉','罗建婷','邹伯富','胡志美','丁冬冬','李小鹏','钱梦','王欢','晏燕芳','彭清华','李鑫','钟文','陈正蝶','岳忠林','郭梦婷','赵楠楠','胡文龙','帅建明','龚小会','苏韬','熊惠','邹依伶','罗春燕','田明舟','廖飞','凌英','徐淑伟','盛婷','朱彩玲','高美娇','陈波','陈小娟','仲玲玲','王晓','李倩倩','刘小青','史明明','王璇','魏志颖','张丹')

-- '王芳'替换成id=HN-19934 ，'刘蕾'替换成id=6059501
('HN-19934','6059501')
组装：
('卢娜灵','阳贤','杨甲香','王艳','李周蓉','高大顺')

CNC:
('蔡清明','陈立月','方轶','付顺喜','郭磊','何玉英','贺英凡','黄佳青','李小强','林玉梅','刘淳','刘何','刘玉','陆健爱','罗正钧','裴瑞博','秦龙海','孙文婷','王亚方','翁辉英','谢文隆','殷亚娟','杨丽红','余建春','虞桦','喻清容','袁菱鸿','占婷玉','张黎明','张晓康','张志芹','赵伟','庄金慧')
-- '卢娜灵','阳贤' 目前不算cnc
模切：
('温馨','曾敏','陈大军','戴虹虹','丁丹丹','丁丽琴','丁素兰','房艳倩','高伟','古小委','顾敏','何玉玲','胡晾','季丽霞','江木兰','江荣','蒋月香','金宇倩','孔卫霞','梁月琴','刘斌','缪月','邵雅婷','孙文天','唐小燕','王万圆','吴志兰','谢芸','徐平平','徐艳','杨丽研','姚香','袁刚','张春兰','张凌云','张肖肖','赵莉','周敏','周小霞','朱欢欢','丁曼','杜丽娟','郭蓉','何寻','黄开炎','黄维维','江淋淋','李春花','李清秀','李婷','林金梅','林敏','刘爱美','刘利利','刘美','刘青玲','刘婷','刘怿','卢钰','罗依霞','欧阳楠','彭莉','任路尧','苏容','谭千','谭旋','汤夏媛','唐令','陶娟','陶仙荣','汪云','王彩霞','王晨','王凤梅','王红','王万花','王文静','巫莉琴','夏珊妹','肖梅花','谢淑艳','熊云秀','徐会','杨彩票','杨小芬','尹彩云','张艳丽','张园','赵月华','钟颖娟','周丽娟','周娜英','胡清泉','廖新华','徐彦','易思','喻璇','张炳兰','张凤梅','舒亚萍','王留芳','张静冉')		
-- '王芳'替换成id=fanny.wang ,'刘蕾'先去掉，
('fanny.wang')	

('li.zhou.rong/李周蓉','liu.xuan.ling/刘宣伶','suzit','wang.feng.mei/王凤梅FT-3132','xiao.jing/肖晶','丁冬冬6015457','丁海军 FT-1237','任路尧','何陈','侍丹丹','全教玲','关聪聪','农杏秋 5002348','刁月','刘丹HN-13936','刘何','刘小青','刘昱杉','刘朝阳','刘玉','刘莉','刘雪华','占婷玉','卢钰HN-13886','史明明6120304','叶淑玲','吕功权5017812','吴丹','吴志兰','周来望','周雅芹','周骥泉','喻璇','夏森林','姚容HL4015','姚春梅','孔卫霞','宋小琴','帅建明','张亚HL4072','张兴彬6111137','张志芹','张新正','张春兰','张朋','张柄兰','张海容','张淋菊','张艳丽6057370','张萍','彭锦花HN-11729','徐丰华','徐国文','徐平平','徐艳6029990','徐贵谦HJ-38143','文美艳','方巧慧','曾光华','曾庆娇5013954','曾庆燊','曾玲玲','朱欢欢','朱琳琳','朱香彬','李倩倩6045186','李小鹏6040630','李慧慧','李柳琪','李正庭','李笑宇','李艳辉','李行HN-13953','杜勇','杜雷雷','杨小芬HN-15973','杨甲香','杨静秋','林春春','林玉梅','林金梅FT-403','梁小梅','模具房','江荣','汪亚平','沈桃香','濮玲玲','熊姣','熊鹏','王万圆6048497','王万花','王华云','王娟','王晓6030822','王瑶','王立伟','王雪梅','皮丽芳','窦莎','系统管理员','缪月','罗建婷HN-13930','肖坤成','肖梅花','胡丽琴','胡志美HN-18298','胡玉龙','胡胜SZ-158101','舒亚萍','苏韬','范红艳','蒋月香','蒋红','蔡春燕','蔡清明','虞桦','袁刚6027477','詹晓燕','谢容','贺英凡','赖海芳HN-8735','赵东波','赵伟','赵利英P014','赵沙沙','赵渊','邓晓聪16020479','邵甜甜','邹伯富','邹依伶','邹兰','郭磊','金宇倩','钟颖娟6030259','阳贤6048732','陆健爱','陈世容','陈兰芳','陈增辉5023844','陈增辉HN-9398','陈小娟','陈立月','陶仙荣6048030','顾敏','高美娇','魏志颖','黄利霞','黄燕丽','龙幸冬SZ-19976')		   
	

71、eas根据采购员来区分

2020-02-23 1月的数据集（去重后）
1	CNC	198106566.389558
unknown	unknown	737641222.662433
2	冲压	83612355.395113
3	模切	448559472.415881
10	汇总	1504365116.98693755
9	磁材	27881148.25943255
5	组装	8564351.86452

2020-02-23 1月基础数据表（未去重）
1	CNC	198384440.8197
unknown	unknown	1070359600.326161
2	冲压	109835543.610433
3	模切	604498624.079963
5	组装	8564351.86452

旧（cd amount表）
1	210973645.779228
10	1698424848.07821755
2	83453774.737735
3	456621487.336187
5	4915425.12896
6	100373807.62
7	101390848.09
9	27881148.25943255
unknown	712814711.126675

旧（成本中心后）
3	612781820.820269
unknown	1045313661.380403
5	4915425.12896
1	211252430.40937
2	109676962.953055



新规则（成本中心前）
unknown	761218980.06
1	221365146.2
2	94655923.71
5	11132591.33
3	254883433.31

新规则（成本中心后）
unknown	527145980.27
1	286429536.28
2	163712938.51
5	11132591.33
3	354835028.22

新规则+模具（by buyer） 未去重
1	211252430.40937
3	514594402.320269
5	31566504.946144   （有可能是因为没剔除内部交易 --> 已经剔除掉）
2	109582207.273055
unknown	1254438643.083691

新规则+模具（没数据）+（by buyer） 已去重

1	210973645.779228
3	372121466.786187
5	31566504.946144
2	83359019.057735
unknown	848662341.549963

新规则+模具（没数据）+（by buyer） 未去重
1	217576392.839228
3	376713207.266187
5	31566504.946144
2	91440653.477735
unknown	853446300.200376



-- 2020-03-04  模具系统修正amount和price，buyer，stock_in_audit_time
amount:
1	245683390.506256
10	1861358713.70174155
2	106948775.898303
3	389791378.690606
4	3915.929204
5	31566504.946144
6	100373807.62
7	101390848.09
9	27881148.25943255
unknown	857718943.761796	
tmp表：
1	245683390.506256
2	106948775.898303
5	31566504.946144
3	389791378.690606
4	3915.929204
unknown	857718943.761796

collect-set(eas去重，模具无须去重):  
unknown	857718943.761796
1	245946503.876398
2	132588943.983623
3	529731676.214688
5	31566504.946144
4	3915.929204

collect-set(eas去重，模具和sap集团 = =也去重): 
2	106957772.359803
4	3915.929204
1	245684755.506256
unknown	857718943.761796
3	390138548.564699
5	31566504.946144


cd表
5	31566504.946144	["eas"]
1	245962175.136398	["eas","ljiemould","dgsxmouldm","sap.ods_sap_zfmm_044","mould_wxsdxc","dtmetalmould"]
4	3915.929204	["szsecondlymould"]
unknown	1263495245.295524	["eas","hldflcmould","llmould","dtmetalmould","cdmould","ljiemould","moulddgobd","dtmould","dtsymould"]
3	532264314.224688	["sap.ods_sap_zfmm_044","eas","ljiemould","suzlymould","zzmetalmould","mould_dglh","dtmould","dgcncmould","szsecondlymould","llmould","suzmould","suzlxmould","dtsymould","lskmould","dgsxmouldm"]
2	133171964.113623	["sap.ods_sap_zfmm_044","dgsxmouldm","eas","ljiemould","dtmetalmould","cdmetalmould","dgcncmould","dtsymould"]



####################
245700426.8	      ##
245684755.506256  ##
为什么有差异？	  ##
####################
模具1月份，不同数据源统计

2020-03-09 统计的结果
amount表 （colllect_set所有列）
1	245684755.506256
10	1855765045.407817
2	107052528.039803
3	474638569.114699 
 [以前数据 =392.7(百万) 是eas中pic为空但是根据成本中心可以区分的没取到。
LLSZDD20200105002	800-NWR138-0A-R			2030.21	3	富葵]
4	3915.929204
5	31566504.946144
6	163992406.58
7	109724983.49
9	27881148.280387
unknown	695220233.521324



cd(data_sources)
4	3915.929204	["szsecondlymould"]
2	107052528.039803	["eas","dgsxmouldm","dgcncmould","ljiemould","dtsymould","dtmetalmould","cdmetalmould","sap.ods_sap_zfmm_044"]
3	474638569.114699	["eas","szsecondlymould","suzlymould","llmould","ljiemould","dgcncmould","mould_dglh","dgsxmouldm","dtmould","dtsymould","suzlxmould","suzmould","zzmetalmould","lskmould","sap.ods_sap_zfmm_044"]
5	31566504.946144	["eas"]
1	245684755.506256	["eas","ljiemould","dgsxmouldm","mould_wxsdxc","dtmetalmould","sap.ods_sap_zfmm_044"]
unknown	695220233.521324	["eas","hldflcmould","llmould","dtmetalmould","cdmould","ljiemould","moulddgobd","dtmould","dtsymould"]

===========================> muju  数据校对<================================
--- 模具系统单独计算，测试(未剔除内部交易)
-- 模具根据  自然日：`date` 来计算采购额  12831
6.379313
20.071897	1
17.335246	2
5.204427	3

-- 模具根据 `stock_in_audit_time between '2019/12/16' and '2020/01/15 23:59:59'）` 来计算采购额   数量=33305
9.068361
34.709744	1
24.073246	2
18.615159	3
-- 模具根据 （`stock_in_audit_time` 换算为月周期）date=2020-01 来计算采购额  ； 数量=33305
9.068361
34.709744	1
24.073246	2
18.615159	3

-- 模具去重（  po_number, tax_price,stock_in_audit_time,stock_in_time,quantity ,buyer,data_sources,tax_rate）
8.527054
33.929328	1
22.894908	2
16.07279	3


=======>模切数据校对<=======
2020-02-23  模切1月数据测试：

data_sources  ==>
模具(剔除内部交易)：17.669911		18.615159（未剔除）
eas:345.146781
sap:111.821875


2020-02-04 模切1月数据测试：
data_sources  ==>
eas:312.395527
sap:111.474705


=======>CNC数据校对<=======

2020-02-23  CNC1月数据测试：
data_sources  ==>
模具：34.709744
eas:205.584942
sap:5.390068


2020-02-04 CNC1月数据测试：
data_sources  ==>
eas:204.198971
sap:5.388703


=======>冲压 数据校对<=======
2020-02-23 冲压1月数据测试：
data_sources  ==>
模具：23.589756
eas:61.550042
sap:21.912728


2020-02-04 冲压1月数据测试：
data_sources  ==>
eas:61.758798
sap:21.903731




>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<,



select A.data_sources,sum(A.amount) :

suzlymould	4136045.583996
szsecondlymould	2135033.628283
dtsymould	167541.592891
llmould	1939905.309707
dtmould	3418250.064283
eas	263179399.064844
sap.ods_sap_zfmm_044	111821875.605436
suzmould	2231053.982268
dgsxmouldm	17353.097341
dgcncmould	75598.230085
suzlxmould	20025.088507
lskmould	29383.18584
mould_dglh	428832.743354
zzmetalmould	582552.229789
ljiemould	2488337.168075

excel：
sap.ods_sap_zfmm_044	111821875.6
eas	263262789.6
模具：17669911.9

1、分系统拉取的总金额(单位：百万)
sap:111.8218756
eas:263.2627896
模具:17.6699119
2、抓取详情见excel
3、
数据拉取规则：
	以采购入库单为主，关联其他表单
内部交易规则：
	当前模切一级分类中，除了半成品，成品，其他都要剔除内部交易。
	内部交易是按照供应商是自家公司区分。
----------------------------------------------------------------------------------------------------------

结构件：
8810  ：供应商剔除领益智造科技（东莞）有限公司和东莞市欧比迪精密五金有限公司（委外，辅料等）    8800：剔除供应商为欧珀（客户需求的入库金额）
结构件的数据
(8810+8820)：
124587037.8781 + 
7924177.739199998 = 132511215.6173
8800：133162383.2789999


业务提供:
101439481.9
3289690.53
178699535.9
5317658.31

>>>2020-02-28<<<

一、当前采购额业务逻辑：
1、BG区分规则：BG -> 采购员 -> 成本中心 
   具体系统区分：
  1、eas系统：cnc，冲压，模切，组装根据采购员区分（组装和cnc协助的采购员也以区分）
  2、模具系统：根据采购员区分，组装根据采购员+费用分类区分。
  3、sap系统：结构件根据conpany_no即可区分，松岗板材（EAS系统）目前无法区分。
2、计算cd规则：
  1、eas系统：价格根据物料code+供应商绑定计算
  2、sap系统: 结构件的价格取数已优化。
二、统计最新的差异，见《各BG对应采购总金额202001-(修订版)3.xlsx》

三、question	
	-、模具: buyer名称格式有误  
		 windows--> regexp_extract(buyer,'([\\u4E00-\\u9FA5]+)',1)
		 linux--> regexp_extract(label,'([\\\u4E00-\\\u9FA5]+)',1) 
	-、入库审核时间没有/当前date格式=20200101，
	-、amount值没有（需要 含税单价/税率 * 数量） /-、decimal(小数点后过多，会乘除不尽)
	-、cutprice执行中断。
	
未加模具数据（未去重）：	
5	31566504.946144	["eas"]
1	211252430.40937	["sap.ods_sap_zfmm_044","eas"]
unknown	1254438643.083691	["eas"]
3	514594402.320269	["eas","sap.ods_sap_zfmm_044"]
2	109582207.273055	["eas","sap.ods_sap_zfmm_044"]

加模具数据（未去重）：
5	31566504.946144	["eas"]
1	217855177.46937	["eas","ljiemould","dgsxmouldm","sap.ods_sap_zfmm_044","dtmetalmould","mould_wxsdxc"]
unknown	1259222601.734104	["eas","ljiemould","hldflcmould","moulddgobd"]
3	519186142.800269	["eas","sap.ods_sap_zfmm_044","zzmetalmould","szsecondlymould","suzlymould","dtmould","suzmould","llmould","dtsymould","mould_dglh","suzlxmould","ljiemould","dgcncmould","dgsxmouldm","lskmould"]
2	117 663 841.693055	["sap.ods_sap_zfmm_044","eas","dtsymould","dtmetalmould","dgsxmouldm","dgcncmould","ljiemould","cdmetalmould"]

-- select dim,sum(amount) from dwmiddle.dwb_purchase_combine_mid_report_eas_distinct_new3 where day='2020-02-23' 
and ( (regexp_replace(regexp_replace(substring(stock_in_time,0,10),'-',''),'/','')
 between '20191216' and '20200115')  or (regexp_replace(regexp_replace(substring(stock_in_audit_time,0,10),'-',''),'/','')
 between '20191216' and '20200115')) group by dim


	1023
1	273615262.07
2	162948202.42
unknown	760780626.54
5	7766898.94
3	17964 6450.49



##############################################################
##	2020-03-27  计算结果 (模切，冲压，模具系统数据有异常)	##
##	--> in not in 使用后，模切（3）的数据两次求金额不一致。 ##
##############################################################
sql：：：：
select data_sources,appoint,sum(amount) from  dwmiddle.dwb_purchase_report_cd 
where  day='2020-03-25' and `date`= '2020-01'  and dim = '3'
group by data_sources,appoint


结果：：：：

模切数据 ，根据状态的dim in('3')逻辑下
szsecondlymould		29216.81
mould_dglh		
suzmould		-8595.57
ljiemould		12098.23
dgcncmould		5309.73
eas	4	206718070.92846
zzmetalmould		
lskmould		
dtsymould		4141.55
dgsxmouldm		
llmould		23470.83
dtmould		-18348.65
sap.ods_sap_zfmm_044		66436285.87296
suzlxmould		
suzlymould		25486.72



模切  ，逻辑下根据状态的dim in (2,3) 逻辑下
zzmetalmould		
dtmould		-18348.65
suzmould		-8595.57
szsecondlymould		29216.81
dgsxmouldm		
llmould		23470.83
sap.ods_sap_zfmm_044		66436285.87296
dgcncmould		5309.73
suzlymould		25486.72
eas	4	260646761.054844
lskmould		
ljiemould		12098.23
suzlxmould		
dtsymould		4141.55
mould_dglh		



冲压数据： 
cdmetalmould		-663.72
ljiemould		0
dgcncmould		
eas	4	60226096.572084
dtsymould		
dgsxmouldm		7262.83
dtmetalmould		
sap.ods_sap_zfmm_044		20429890.44548
	


CNC:
ljiemould		-793482.41
eas	4	205403338.18178
dgsxmouldm		-922180.58
dtmetalmould		8471.63
mould_wxsdxc		
sap.ods_sap_zfmm_044		5503090.717986


组装:
ljiemould		
eas	4	21066220.991084
dgsxmouldm		-7022.13




sql：：：：
select dim,sum(amount) from dwmiddle.dwb_purchase_report_cd 
where  day='2020-03-25' and `date`= '2020-01' group by dim


select dim,sum(total_amount) from dwservice.dws_cd_by_amount_month3 where day='2020-03-25' 
and `date` = '2020-01'  group by dim


结果：：：：
-- new
4	
2	80662586.127564
3	273227136.45142
5	21059198.861084
1	209199237.539766
unknown	822336165.082289

-- new2 

5	22470113.971084
3	289025090.01142
unknown	827249848.576428
1	219110906.289766
2	97275025.597564
4	3915.93

-- new3  

5	22470113.971084
2	97239304.577564
4	3915.93
1	217895900.159766
unknown	827249848.576428
3	289025090.01142


-- new4   【dim in('2','3')and appoint = '4'】

5	22470113.971084
2	97239304.577564
4	3915.93
1	217895900.159766
unknown	827249848.576428
3	289025090.01142

-- new5    【dim in('3')and appoint = '4'】
5	22470113.971084
2	97239304.577564
4	3915.93
1	217895900.159766
unknown	827249848.576428
3	289025090.01142

-- old  
3	327155826.577804
4	
2	80662586.127564
unknown	822336165.082289
1	209199237.539766
5	21059198.861084


-- old
1	209199237.539766
10	1771182096.144494
2	80662586.127564
	3	327155826.577804
5	21059198.861084
6	173803898.1387
7	109084035.5369
9	27881148.280387
unknown	822336165.082289

-- new
1	209199237.539766
10	1717253406.01811
2	80662586.127564
	3	273227136.45142
5	21059198.861084
6	173803898.1387
7	109084035.5369
9	27881148.280387
unknown	822336165.082289

--new2
1	219110906.289766
10	1765900066.402249
2	97275025.597564
3	289025090.01142
5	22470113.971084
6	173803898.1387
7	109084035.5369
9	27881148.280387
unknown	827249848.576428


--new 3

1	217895900.159766
10	1764649339.252249
2	97239304.577564
3	289025090.01142
5	22470113.971084
6	173803898.1387
7	109084035.5369
9	27881148.280387
unknown	827249848.576428

-- new 4   【dim in('2','3')and appoint = '4'】
10	1764649339.252249
unknown	827249848.576428
3	289025090.01142
1	217895900.159766
6	173803898.1387
7	109084035.5369
2	97239304.577564
9	27881148.280387
5	22470113.971084


1、CNC,冲压，PA值差异在2%内，组装PA差异5%左右。
基础数据可能还有些差异（但在合理区间）
2、5G数据PA由，维奇和伟联构成，目前大数据只抓取了伟联的数据（维奇还没开放），
伟联PA=39112.352(大数据)
伟联PA=43350.839204 （业务）
差异原因已经反馈给5G技术，等待核对。
==========================================================================================================================================
=====================================================================
============================================================================================
============================================================================================

	'6030822',
'6120304','6059501','6101746','6115796','6121895'

 ('SZ-11537','36011860','36011960','36013547','36016504','36005445','36018262',
 '6045186','6102361','P035','DT00014714','DT00007393','DT00015289','6101279','HN-10645','HN-13923',
 'HN-13930','YP004','6015079','6015457','HN-19934','HJ-12112','HN-3056','HJ-3735','HJ-11323',
 'HJ-16898','HN-18298','HN-16436','P026','P029','HN-14238','HN-2769','F033','P-132','P044','6040630',
 '6047483','6059158','6098498','6115318') then '2'
 


		已整理：磁材，组装（优先根据采购员，已修改）。
		待整理：cnc，冲压，模切，（未区分的BG已反馈给采购业务，等待区分后，可区分）
		正在整理：结构件（1、数据核对中（新增结构件库需要拉取）2、逻辑优化）

维度1：改造（查询cd表详情表【未去重】）
    select case A.dim
when '1' then 'CNC'
when '2' then '冲压'
when '3' then '模切'
when '4' then '设备'
when '5' then '组装'  
ELSE 'unknown' end as BG,if(cast(sum(A.cd_amount) as string) is null ,0,sum(A.cd_amount)) as cd_amount,
if(cast(sum(A.cd_amount)/sum(A.amount) as string) is null,0,sum(A.cd_amount)/sum(A.amount)) as cd_proportion,
if(cast(sum(A.amount) as string) is null,0,sum(A.amount)) as total_amount,
A.dim,SUBSTRING(A.`date`,0,4) as `year`,SUBSTRING(A.`date`,6,2) as `month` ,
A.`date` from
(select dim,cd_amount,amount,`date`   
from dwmiddle.dwb_purchase_report_cd where day='2020-02-04'
group by stock_number,stock_in_audit_time,material_code,amount,`date`,cd_amount,dim,supplier_code) A
where A.`date` = '2020-01'
group by A.dim,SUBSTRING(A.`date`,0,4),SUBSTRING(A.`date`,6,2),A.`date`


	测试1：
		-- cd详情表 根据 对应字段去重复后， 3115290
		select count(1) from (
			select stock_number,stock_in_audit_time,material_code,amount,`date`,cd_amount,dim,supplier_code  
		from dwmiddle.dwb_purchase_report_cd where day='2020-02-04'
		group by stock_number,stock_in_audit_time,material_code,amount,`date`,cd_amount,dim,supplier_code ) A

	测试2：
		-- 对比cd详情表和采购入库

		-- 原始表	原始表   	cd表
		-- 3302735 3292183  3115290
		-- 时间段过滤后	原始表		cd表			
		-- 1718009	1713861  1657315

			-- 1657315
			select count(1) from (
				select stock_number,stock_in_audit_time,material_code,amount,`date`,cd_amount,dim,supplier_code  
			from dwmiddle.dwb_purchase_report_cd where day='2020-02-04'
				and ( (regexp_replace(regexp_replace(substring(stock_in_audit_time,0,10),'-',''),'/','')
				 between '20180101' and '20201230') ) 
			group by stock_number,stock_in_audit_time,material_code,amount,`date`,cd_amount,dim,supplier_code ) A
			
			-- 1713861
			select count(1) from (
			select  fparentid,fmaterialid,FAmount,FBizDate from eas.ods_eas_new_eas75_t_im_purinwarehsentry where  day='2020-02-04'
			and  (regexp_replace(regexp_replace(substring(FBizDate,0,10),'-',''),'/','')
			 between '20180101' and '20201230')
			group by fparentid,fmaterialid,FAmount,FBizDate) A  

			
			-- 1718009
			select count(1) from  eas.ods_eas_new_eas75_t_im_purinwarehsentry where  day='2020-02-04' and  (regexp_replace(regexp_replace(substring(FBizDate,0,10),'-',''),'/','')
			 between '20180101' and '20201230')
			 
	-、生成临时表 
 insert overwirte dwmiddle.dwb_purchase_report_cd_tmp (day='${l_date}')
select	A.stock_number,A.stock_in_audit_time,A.material_code,A.material_8code,A.material_name,A.cd_amount,A.amount,A.\`date\`,
A.price,A.supplier_code,A.supplier_name,A.first_level,A.area,A.company_name,
collect_set(A.account_day)[0] as account_day,collect_set(A.pay_type)[0] as pay_type, A.dim,'','' from 
(select * from dwmiddle.dwb_purchase_report_cd where day='${l_date}' order by account_day desc ) A	
group by A.stock_number,A.stock_in_audit_time,A.material_code,A.material_8code,A.material_name,A.cd_amount,A.amount,A.\`date\`,
A.dim,A.price,A.supplier_code,A.supplier_name,A.first_level,A.area,A.company_name

CREATE EXTERNAL TABLE `dwmiddle.dwb_purchase_report_cd_tmp`(
  `stock_number` string COMMENT '采购入库单号', 
  `stock_in_audit_time` string COMMENT '入库审核时期', 
  `material_code` string COMMENT '物料编码', 
  `material_8code` string COMMENT '物料8码', 
  `material_name` string COMMENT '物料名称',
  `cd_amount` decimal(28,16) COMMENT 'cd金额',
  `amount` decimal(28,16) COMMENT '总金额',
  `date` string COMMENT '日期',
  `price` decimal(28,16) COMMENT '未税单价',
  `supplier_code` string COMMENT '供应商编码',
  `supplier_name` string COMMENT '供应商名称',
  `first_level` string COMMENT '一级分类',
  `area` string COMMENT '区域',
  `company_name` string COMMENT '公司名称',
  `account_day` string COMMENT '账期天数',
  `pay_type` string COMMENT '付款日期',
  `dim` string COMMENT '维度(1 CNC、2 冲压、3 模切、4 设备、5 组装、6 深圳结构件、7 东莞结构件、8 显示模组、9 磁材、10 汇总)',
   fid string COMMENT '采购入库分录表id',
  reserved2 string COMMENT '预留字段1'
  )
COMMENT 'CD月报基础合并数据  中间表'
PARTITIONED BY ( 
  `day` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '^' 




>>>2020-03-04	2020-03-09	<<<
1、详情表要根据purorder_fid去重（见v3代码） √
2、完善采购cd月报的excel	√
3、基础表只显示2019-2020数据。  √
4、Invalid column reference 'diff_num'  √  【cut_price】
5、CNC的cd金额为什么这么高？
6、深圳结构件，页面上改为含税且剔除供应商 8830。  √
	-、结构件的采购额以 total_price 为主替换原有的 original_currency_amount
	:%s/original_currency_amount/total_price/g
7、页面上BG排名去掉dim=4 （设备） √
8、模具系统存在冗余情况  √
	-、（需要根据 purorder 和 stock_in_audit_time等字段去重
	  po_number,materil_code[模具id+物料编码] tax_price,stock_in_audit_time,stock_in_time,quantity,
   buyer,data_sources,tax_rate）
9、模切的数据，采购员为null或者''的数据不需要。--> 去掉成本中心的过滤  √
10、含税单价和含税金额校验。  √
	-、模具系统：
		-、未税和含税单价都取2位（因为存在未税小数点比含税的多。） √
		-、含税金额为null的数据，根据含税单价*数量 求得。  √
		- 、 [模具系统，存在"税率"小于1的情况,不过数据是历史数据,不用处理]  √
	-、sap系统：
		-、采购员charge字段，需要保证不为空（可以根据申请者id匹配名字，来补充）
		-、含税单价<未税单价
		-、税率和汇率值是否都正确
		-、含税金额存在没有值的情况。
	-、eas系统：
		-、含税/未税金额为null的数据，根据含税/未税单价*数量 求得。
			含税单价为null的， 未税单价*(税率 + 1) 
			税率（换算）=  (tax_rate /100 ) 
11、数据要以最新的时间为主计算。 √
12、比对数据的脚本,要添加 "审核入库时间"作为依据. √
	-、剔除物料中的 "
13、sap集团,采购员换字段,  -- 导致模具数据差异

>>>2020-03-17<<<
1、历史数据删除脚本(一并删除分区)
2、hregionserver 服务挂机重启
	日志报错:  D:\ly\note\20191104_purchase\log\测试\lyzk03-regionserver.log
3、5G数据抽取,业务梳理
4、采购脚本优化在uat上运行测试.
5、考勤补卡 + KPI自评分    √
2020-02-21	 下午
2020-02-24	 上午
2020-03-02	 上午	下午
2020-03-03	 上午	下午
2020-03-04   上午×	下午	
2020-03-06	 上午×	下午×

6、领益智造大数据平台 
1.Data Warehouse(采购、财务等系统数据)
2.ETL
3.BI report
4.BI export

7、
	-、对比sql 去掉根据amount对比(因为两者计算逻辑不一样)
		-、比对数据 ，业务存在price=空 
		-、小数点精度取6的话， 存在业务取精度为5。。。
	-、委外不良品 剔除
	-、基准价--> 取当前物料的所有基准价中最高的.
8、确认数据异常(sap集团 BG为空的数据)
15S-16Q12001-2500
9、spark测试
 val lines=sc.textFile("hdfs://uatmycluster/apps/hive/warehouse/test.db/ly_test1/test2.txt")
 lines.saveAsTextFile("hdfs://uatmycluster/tmp/test1")

11、
	-、茂泉更新  
		维度表更新：
			dwservice.dws_cd_by_amount_month3 where day='2020-03-15' and dim = '12'
			dwservice.dws_cd_by_material_cut_price_month3 where day='2020-03-15' and dim = '12'
			dwservice.dws_cd_by_material_type_month3 where day='2020-03-15' and dim = '12'
			dwservice.dws_cd_by_area_day_month3 where day='2020-03-15' and dim = '12'
			dwservice.dws_cd_by_supplier_month3 where day='2020-03-15' and dim = '12'
			dwservice.dws_cd_by_account_day_pay_type_month  where day='2020-03-15' and dim = '12'
			dwservice.dws_cd_by_material_month3 where day='2020-03-15' and dim = '12'
		基础表更新：
				dwbase.dwb_vw_km_salerpt_month where day='2020-03-15' --> DW.DWS_PURCHASE_REPORT_BY_5G  where day='2020-03-15'
				字段修改了  period -> "date"  (对应表的结构已经修改了)     √
					
采购新增两个BG
bg=5G ,dim=12
bg=Salcomp,dim=13


12、  
	  - bizdate     √√
		-、模切 -> 入库审核日期  
		-、CNC,冲压，组装 -> 业务日期
	  - 单据状态 (0 新增 1 保存  2 提交  3 作废 4 审核 5 下达 6 冻结 7关闭 8完工)  √
		[B.fbasestatus as apoint 作单据状态]
		 -、冲压 -> 单据状态=审核(4)
		 -、cnc，组装 ->  all  审核,提交,保存
		 -、模切 ->   审核  （采购报表，入库审核日期）
	  - 内部交易 （cnc） 去掉（江门江益磁材有限公司，江门安磁电子有限公司） √
	  -、阳贤  模具 --> (费用->组装)，  eas中阳贤属于cnc.   √
	  -、sap集团数据，可以区分（sap已筛选了）   				 √√
		 -、数据减少原因  ->1.重复 [√]2.负责人改为申请者id后[×]
		 【select sum(amount2) from dwdetail.dwd_jituan_cd_detail where day='2020-03-15' and zbg = '模切' and stock_in_audit_time between '2019-12-16' and '2020-01-15'】
  
	  -、模具系统 “|”  物料编码 = =	    √√
		-、-- dgsxmouldm  ljiemould  物料code取配件code
	  -、DW.DWS_MATERIAL_NAME          √√
		  -、模糊查询使用的是物料名称还是物料降价？  物料名称
		  -、已根据 DIM DESC,DIFF_NUM DESC,COUNT_NUM DESC,MATERIAL_NAME 
	  -、模具系统     日期区间-单据类型(外购入库单+外购退货单（申请单-> 费用归类）) - 采购员  √ √
	  -、鑫焱用SAP  --  条件  {工厂，过账日期}    ZMM038（大数据） -->  ZMM023  √
		-、正负相抵，冲销数据。
	  -、 √√
		-、华南CNC（方轶的数据,去掉库存组织 in ('东莞领益精密制造科技有限公司' ,'领益科技(深圳)有限公司')且 供应商为'深圳市东方亮彩精密技术有限公司'）    ->  后期根据备注来剔除此补单内容。
		-、卢娜灵的数据 ，物料编码存在 =  '585-D160200OLD'   包含 old
	  -、java读取excel  ，四舍六入    √√
		681-BTY603-02-N-10
		华东CNC	表面处理	PVD/DLC	PVD/DLC	X1715	1月	是	2019/12/23		纳峰真空镀膜（上海）有限公司	681-BTY603-02-N-10	PVD	9.1*9.1*1.39	是	PCS	13188.00 	0.769912	0.77 	0.00 	0.87 	10153.59 	11473.56	孙文婷	裴瑞博	1.015359	0.00		13	RMB	1

	  -、测试 lyzk02  regionServer 挂掉导致插入失败
	  -、待确认：  √
			1、模切->  组装的
'杨甲香','王艳','李周蓉','高大顺'  部分在模具系统有数据，但是费用不是“组装生产” √
					-、费用归类需要再确认下.
					-、模具系统，入库单和退货单两者表，union all一起。
			2、 cnc，组装 ->  all  审核,提交,保存   -> eas中只有这三个状态，为什么cnc的数据会对不上  √
				-、可能是其他原因导致
			3、验证eas系统，模切的审核时间和B.fbasestatus 是否一致 √
	  -、5G数据  和佳丽确认。  √
			- 、 22705.799
	  -、3月份的kpi发给经理  。 √
	  -、4S  √
	  
		
		测试：
			1、冲压 ，也取所有状态  
				-、模具数据,冲压没有值?  --> price应取订单，tax_rate应取订单。 √
					
			2、去掉  最后磁材公司的数据  [start2脚本总未添加，因为数据异常]  √
			3、2020-03-27  计算结果 (模切，冲压，模具系统数据有异常)	   √
					##	--> in not in 使用后，模切（3）的数据两次求金额不一致。 
				-、测试后发现数据正常。。。
			
2020-04-01
-、eas/其他系统 ，单价，金额 都为0的数据剔除?[这个会影响CD]  怎么剔除？  ×	
-、5G  -> 订单计算cd报表 
-、模切数据对比 -- 彭莉  √
-、结构件取数规则：  √
	1、8800工厂：
		1-、要筛选掉综合采购的入库数据：
			选择采购组织'8830'且采购员为'曾玲玲'，'陈霞'，'方巧慧'，'刘宣伶'，'张爱明'
			的数据是属于物料采购的不删除。其他采购员属于综合采购，对应的入库数据要删除。
		2-、要扣内部交易的入库金额（供应商是'领益智造科技（东莞）有限公司' ,'东莞市欧珀精密电子有限公司'）
		3-、需要扣除良率差价(按照供应商筛选)：
			计算方式是：喷涂入库数量*（1-喷涂良率0.85）*喷涂单价0.75
			供应商：'东莞三韩电子有限公司'，'东莞市恒晟科技有限公司'，'志合塑胶(深圳)有限公司'，物料描述按喷涂来
	2、8810和8820工厂：
		1-、需剔除综合采购的入库数据：
			选择采购组织'8830'， 且采购员为'曾玲玲'，'陈霞'，'方巧慧'，'刘宣伶'，'张爱明'，'王健'的数据属于物料采购的，不删除。
			其他采购员属于综合采购，对应的入库数据要删除
		2-、扣内部交易的入库金额（供应商是'领益制造科技（东莞）有限公司'，'东莞市欧比迪精密五金有限公司'）
		3-、供应商为'深圳市合力通电子有限公司'的入库数据也要删除且采购员为"谢文隆"的数据需剔除。
		4-、委外采用买卖模式的话需要扣掉素材费（按料号 -> 物料号 -> 物料数量  ）：
			计算公式：采购入库金额 - 素材单价 * 物料数量

-、磁材是否可以再缩小
-、加上 2月 ，3月的对比
-、数据对比，需要比较条数.

2020-04-07  2020-04-20   2020-04-22
1-、赛尔康改为中文  Salcomp -> 赛尔康    √
    -、周建表
	-、BG to dim  
2、-、华南CNC（方轶的数据,去掉库存组织 in ('东莞领益精密制造科技有限公司' ,'领益科技(深圳)有限公司')且 供应商为'深圳市东方亮彩精密技术有限公司'）    ->  后期根据备注来剔除此补单内容【备注=亮彩补单】。   √
	-、  剔除供应商"盛翔模房","领益模房" ，且BG=CNC的数据（属于内部交易） √
		：注意 组装和 冲压目前是去掉的，沟通完是否去掉。
			冲压：3月份剔除
			组装和cnc：1-3月都剔除
	-、修改比对逻辑
		-、quantity的取负修改。  √
		-、刘玉->Damon.liu（模具系统）  √
		-、生效单价（入库单价 -> 单价表）
		-、汇率确认  
		
3、结构件的数据更新至shell脚本   √
4、5G的数据
	-、更新时间周期为（本月16至次月15）
	-、订单数据更新进去
	-、入库审核和制单确认。
	-、5G脚本更新至shell中
5、数据对比 
	-、模具系统的price ，要改为保留6位   √
	-、对比脚本中的material_code中间也没有空格，cd表比对时也要剔除空格  √
		：regexp_replace(trim(material_code),'[\\s]+|[\\u3000]+|[\,]','')  as material_code2
	-、发现存在业务提供数据 quantity 为正数的异常数据（因为amount为负数） ： material_code=19-FBS781-PG-F-H1-03-A0...
		：脚本中处理    √
	-、独有的进行对比（大数据和业务）

	
6、
	-、模切2-3月份对比
	-、抽查部分业务给的1月份模切数据，查看系统中是否有采购员，若无联系苏齐，验证下一步的逻辑
	-、整理模切 sy（模切下单，属于冲压），无线充电模组，注塑
		新增模块BG(BU)对应的数据来源：
			无线充电模组(马达、无线充电):
				东台:SAP(材料),模具系统(模具)
			注塑(华东注塑):
				苏州:SAP	      IT提供 -> 4月份之前EAS ：（根据采购入库库存组织01.03.01【苏州领镒精密技术有限公司】）
			冲压(SY): 
				东莞:EAS(主辅材),模具系统(模具)
				成都:SAP(全部材料)
				东台:SAP

		备注：
			1、EAS和模具系统,需在BG系统中添加“SY” (业务已提单).
			2、SY的数据来自"模切"采购员下单,但是采购数据属于"冲压"BG.(若根据采购员区分BG,需要注意)
			3、SAP业务导出数据逻辑:按照采购组织export数据
				-、东台：2030、5020
				   注塑：2090	
			
			2020-04-22补充
					factory_code	【（四月份上线）】	   
				  无线充电模组(马达、无线充电) 
				  马达：2071  （模切提供小厂，未包含）
				  无线充电：203A和203B  
				  
				  注塑(华东注塑):【（四月份上线）】
				  4月份之前EAS：根据采购入库库存组织01.03.01【苏州领镒精密技术有限公司】
				  4月份之后sap: 2091
				  
				  冲压(SY):2031或2033  
						： 一月份的SY，只有2031
							amount=2000W+ （冲压和模切一起下单的）

				  
	-、
		-、模切1月份数据是否包含  SY,无线充电模组，注塑
			：包括SY, 其他还在 确认。  -> 无线充电模组（不包含），注塑 （包含）
		-、联系苏齐沟通   ->   4.14上线后，对比采购员差异。
		-、沟通状态码

		
		
7、
	-、测试环境
		-、梳理测试每天一跑的	hive脚本 
		-、修改模切的单价和本次收货数据量取值   √
		-、剔除特殊符号： regexp_replace(D.fname_l2,'\\t|\\\\^|\"|\'|\\n|#','')  as material_type,  √
			: 后期需要验证 # ,\t,\n是否生效     ×
		-、添加赛尔康的area（周建已在原始数据中添加） √
		-、amount2 -> amount1  √
		-、写入数据至hbase会出现，  lyzk03/lyzk02 
					java.io.IOException: Connection reset by peer
		-、日期格式 format
		 -- 2019/12/17 09:45:44.247000000  -> 2019/12/17 09:45:44
			select stock_in_audit_time ,from_unixtime(unix_timestamp(stock_in_audit_time,'yyyy/MM/dd HH:mm:ss'),'yyyy-MM-dd HH:mm:ss')
		
		-、hive -> phoenix
		-、phoenix脚本方式： 1、删除 2、新建索引 3、维护area，company，material_code 表 3、优化 material_cut_cd 表等剔除unknown
			备注：1,2对应的脚本及执行：
				/opt/apache-phoenix-4.9.0-HBase-1.1-bin/bin/sqlline.py localhost:2181 /root/test/phoenix.sql
		-、删除历史hdfs数据 (脚本路径  /home/hdfs/rm_hdfs)   √
		-、ui页面 -> 物料名称 去掉 "," 
		-、讨论详情展示问题。
		-、正式环境服务器是否提供 
			:运维回复，交换机还未到，待运维通知。
			：运维正在准备服务器，配置已更新。
		
		-1、目前核对SAP导出的数据和SAP接口返回数据， 一致
		-2、eas存在采购员为空的数据 = = 。 -->根据pm_user，制单人获取采购员。 √
		-3、TLG的amount存在为null的情况？    √
			190-GORETPV8-0080   stock_org_name = 'TLG INVESTMENT (HK) LIMITED'  price=2857.436059
			解决： 修改 * / decimal(28,6)  --> （机构件，磁材，cd没修改）
			
		-、测试环境，  lyzk02,03下线，（max zk连接数据 >60 ） ,导致 lymaster01的HMaster
		-、测试环境 --> bg.sh  手动修改日期为2018-01-01  （partition=2020-05-06）
		
	-、UAT
		-、UAT 添加物料数量rank  √
		-、UAT添加模切supplier表，但是没数据    √
		-、结构件，磁材，模具数据，other数据更新，
		-、5g，赛尔康的基础数据 以及  维度数据更新，√
		-、测试脚本 ，需要全部切换成MR跑，与当前数据作对比。
		-、测试:  tez-> mr  + 模切（模组）+ 2020-04-22 
		
			1、2020-04-29 
			tez:
				combine_eas_mid1_new3_bg.sh ： 698s 
					Partition dwmiddle.dwb_purchase_combine_mid1_new3{day=2020-04-22} 
					stats: [numFiles=9, numRows=1117407, totalSize=68762925, rawDataSize=8422882865]
				start1:1313s
				start2:  
				all:	
			2、	 2020-05-03
			MR：		
				start1:2354s
				start2:5425s  
				all:7779s
		-、5g+赛尔康  数据更新 （day=2020-04-22）√
		-、修改uatdata01 ， jdk 版本（hdfs，yarn，mapred，hbase，spark2，spark）  √
		【/usr/hdp/2.5.3.0-37/hadoop/conf ,/etc/hbase/2.5.3.0-37/0,/etc/spark/2.5.3.0-37/0】
		/usr/local/jdk -> /opt/jdk
			hadoop-env.sh
			yarn-env.sh  
			hbase-env.sh
			spark-env.sh
				：jdk安装在yarn有权限范文的路径
				：修改配置文件X-env.sh 指定jdk版本。
			  --> 因ambari 框架会比对env文件，修改失败
			解决：下线yarn，uatdata01，上线uatmaster01
		-、"供应商的CD金额排名" sql查询慢    √
		  ： 暂时去掉索引， 1.5s -> 0.3s  [drop index INDEX_1_DWS_CD_BY_SUPPLIER_MONTH ON DW.DWS_CD_BY_SUPPLIER_MONTH
]
		-、uat更新数据跑脚本顺序：
			1、uat环境  -> dwbase.dwb_mould_poorder 未更新   ->  已更新√  
				46.2 M  /apps/hive/warehouse/dwbase.db/dwb_mould_poorder/day=2020-03-25
				49.0 M  /apps/hive/warehouse/dwbase.db/dwb_mould_poorder/day=2020-03-29
			2、 5G  -> 脚本更新至hive  ， 赛尔康 -> 每月1号，跑上个月数据  √
					解决（更新至指定分区）：
						维度表： 5G + 赛尔康的数据，更新至other表，
						基础表： 5G + 赛尔康的数据，更新至hive
			3、待维护kettle文件。  √
					t_pm_user表
					VW_KM_SaleRpt_Month视图表
			4、sap集团数据中，供应商为TLG的内部交易未剔除..   -> 一提出 √
			5、执行hive->phoenix定时任务。	  √
		-、uat ->  √
			周建：-、结构件数据只有2020年3-5月数据，
						-、集团HR(模切，冲压)数据不是最新逻辑。
		
		-、待优化：	
			1-、物料降价，波动优先
			2-、CD金额对比。
			3-、5G维奇和服务器时间？
				-、5G维奇已经上线，取数与伟联一致
			4-、Too many connections from /10.0.24.203 - max is 60
				-、查看 uatdata03  /opt/test/zk 下日志，看 zk 2181的端口为什么建立那么多其他节点的连接。是hbase只连uatdata03？
						
					1、进入目录 /etc/zookeeper/2.5.3.0-37/0  修改文件zoo.cfg
						maxClientCnxns=500
					2、修改hbase的zookeeper连接限制   /etc/hbase/2.5.3.0-37/0
					<property>
						<name>hbase.zookeeper.property.maxClientCnxns</name>
						<value>500</value>   #默认是30,修改完以后，重启regioserver，但是没什么用
					<property>
					
					cat /usr/hdp/2.5.3.0-37/hbase/conf/hbase-site.xml | grep "hbase.zookeeper.property.maxClientCnxns"
						
			5-、导出报表中的日期格式化。 ✔
			6-、供货价格：
				1、日期以  入库审核日期和 业务日期  在区间内？
					-、以后都以入库审核日期为主。
				2、汇率/税率以什么为主
					-、对应的修改 单价，含税单价，金额，含税金额。
				3、数据只针对eas？
					-、sap也有，后续要协商加入。 。供货价格。。定价。
				4、1-、添加 org_purchase表关联  --> 无须添加，因为有A.purchase_org_code  ✔
				   2-、eas都以入库审核日期为主  
				   3-、修正汇率是记得把    ✔
						-、B.currency_name in('美元','港币')  改为 B.currency_name not in('人民币')
				   4-、start_price  作为原始单价 ，不计算PA和CD。      
						-、修正为人民币时，  start_price ->  改为对应的币别。  ✔
						-、start_price,同时修正为 人民币。  ✔
						-、start_diff_price 作为amount，  且 修改后期amount为null的情况， 以便核对 差异，  ✔  
						-、数据amount增加，发现原始amount存在为0的情况。  ✔
							：因为 供货价格存在对应的单价，所以就计算了amount
							示例（and material_code = '681-FYE631-A0-0-12'
							and supplier_code = 'CL02'
							and purchase_org_code = '/OQAAAIR1SbM567U'
							and stock_in_audit_time = '2020/01/15 00:00:00.000000000'）
						-、amount=19247.79	price=3.849558	quantity=1000000	 单位=米     
						  供货价格中 ，  单位为 “平方米”
							1)	:  如果是米或者 平方米 拿原始的amount/price = q  ,q* new_price?  ✘✔
								实际上，为米或者平方米，amount不是根据price*quantity求得。
									version1：price不做处理作为new_price，amount使用以前的值
									version2: 单位换算，  m m2  新的送货金额 = 
										供货价格(不管是m,m2,都取供货价格原始数据) * quantity（统一根据  原amount/原price）
							佳丽反馈：	 	
								下单的4000是平方米，收货的200000是米，按照这个东西的宽幅0.02m，
								也就是200000m0.02m=4000m2，这个数量是对的。单价  也是两个算法，0.61200000=122000元或者30.5*4000=122000
							2)、为什么eas的old_amount为什么存在为0的情况且单价不为0？  ✔
								：见（5），因为乘法结果amount，超过阈值，直接变为null
					     	3)、为什么sap的old_amount存在为0，单价为0，price却有值，sap可是没做“供货价格” ✔
								：以为sap的数据，没有关联供货价格，故没赋值old_amount。
							4)、为什么还是存在tax_rate为0的情况？✔
								：eas是存在tax_rate为0的情况，且price，tax_price也为0   --> 1426条
								 sap以及模具系统 ，存在tax_rate为null的情况。
							5)、dwb_purchase_standard_price表中old_amount有数据，为什么到cd表就没了？ ✔
								：因为dwb_purchase_standard_price  ->  dwb_purchase_report 时，计算“乘法”时，没有指定decimal的位数。
								-> 所有相关的数学运算都需要转化 decimal为6位。（否则会因为过大，而计算失败）
							6)、  ✔
								"广东江粉高科技产业园有限公司"属于内部交易、-> 已经剔除了（模切，成品半成品无须剔除） 
								SAP中"TLG INVESTMENT(HK)LIMITED"也属于内部交易、 ->
								'TLG INVESTMENT(HK)LIMITED' -> 'TLG INVESTMENT (HK) LIMITED'
							7)、模切的单价和本次收货数量，  有可能存在return_code=NULL 
								1:暂时解决->   ✔  修改 【get_correct_status_audit.sh】脚本，剔除return_code为null
								苏齐 那边是 入库单与订单 内关联
								  是否就是  订单有 和入库单有，才算
								  如果return_code为null，则不算采购数据。
								  【   and check_return_code is not null 】
								2：1执行完，模切的条数减少了 5W->4W， 		
									-、amount值比old_amount还是多 -> 因为sap和模具没有赋值old_amount
									-、CNC，冲压4月的异常多，  -> 反馈给佳丽  
										：目前发现是因为sap集团的数据多 （周建反馈->cnc四月份增加了模块。） 
									-、CNC4月数据发现，old_amount=0 ，price=0 ，新的amount有值，导致eas的值比以前多了2000W+
										：-、事务类型 ->  直接剔除掉“委外不良品”的数据   ✘  ✔
											（T_IM_PurInWarehsBill.FTransactionTypeID）
										  -、是否赠品 ->  price=0 amount=0  则无须取供货价格  ✘ ✔
									-、eas发现4月份异常的多（模切），对比eas差异小，应该是sap数据多。    ✘
										:发现 eas的tlg公司数据 从2000W -> 	1.2亿，发现把“江粉”的数据也算进去（因为它的一级分类=成品） 
										---> 需要与rita核对一级分类到底是那个字段，以及目前最新的剔除规则。
										 显示解决： 去掉eas的“江粉”的数据，模切。 '广东江粉高科技产业园有限公司'
										   【remove_inner_by_supplier.sh 脚本中剔除】
							备注：2020-05-10分区  +  供货价格（包含sap）   + 调整单位后  + （old_amount）[eas] + m，平方米不处理  + 去掉return_code is null (模切)
							
							
							8)、查看佳丽提供cnc中，有供货价格的供货单价是否取对了？ ✔
								：->  发现供货价格表中的数据异常，导致price未取到供货价格，已在05-17分区修改。
							9)、对应的表，创建多分隔符的模式。 ✔
							row format serde 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe' with serdeproperties ('field.delim'='^#')

									测试：eas -> supplierInfo  多分隔符
									uat： eas -> supplierInfo  非多分隔符  '^#'
							10)、-1、供应商对账的逻辑，以及开发步骤
								 -2、模切的PA对比差异。 
									-、内部交易，包含“领”的去掉非公司  ✔
									and supplier_code in ('LT07','LM01','LX04','LC02','JL06','XJ16','LYBS01','LYM01','SuZ0894')
									-、 sap。
										-、模组数据要添加到come_muju.sap  ✔
										-、去掉not in period ,等异常数据筛选  ✔
								 -3、王韬——> 软件问题导致，几率低，不能保证以后不出现。
							
							
				   5-、tax_rate 不存在 或 为0->  （dwmiddle.dwb_purchase_standard_price表中更新） ✔
				   （（tax_price / price）-1 ） *100
				   6-、优化
						-、采购员轮岗。 --> 找世民协商 ， 用户录入更新 -> 大数据  ✘
						-、BG值维护系统
				   
				   7-、数据库是否可以合并  <--  小马哥反馈。 ✔
				   8-、数据迁移 -> 
							1、原服务需要停机多久（需要测试后才能知道结果。）
							2、迁移方式，VM之间复制（系统版本，ip以及其他服务都不会变动）。
							2、迁移后，确认新服务正常后，老服务停机清理空间。
				   9-、sap集团的数据，更新了first_level之后，存在为“数字”的情况。 ✔
							-、只查询指定zbg的数据。
				   10-、uat，supplier表，hive - phoenix ，去掉unknown
				   
			7-、5G  伟联 & 维奇 数据优化  √
				-、委外表与stock表关联，内码
				-、订单表和item和supplier关联，内码
				-、没有入库单的表，没有一些字段，比如“基准价”
			8-、供应商对账新需求：
				1、显示采购员+供应商对账率
				2、eas
					-、财务供应商对账是否就是按照核销来算，
					-、采购入库分录单的核销是否有值 -> 有值  √  
					-、T_AP_OtherBill（应付单）  T_AP_OtherBillentry
						添加核销数量和核销基本数量。
				3、sap数据还需提供以下两个字段
					1-、“核准数量”，“核准金额”  ，用于供应商对账相关。
							bsik   供应商对账表
							mseg   入库表
					2-、与佳丽沟通
						-、能否关联上采购员？
							-、后期再凭证那里加入采购员栏目了
						-、取sap的“bsik”表，是否能区分BG？
						
					3-、取sap根据凭证取订单信息
						您好，请教一个问题，上次你说的 供应商凭证表（bsik），根据其中的“会计凭证”字段，如何关联订单呢？
				4、模具系统的数据
					-、是根据供应商财务对账表来确定是否对账成功。（sap+eas）
				5、5G/赛尔康  如何供应商对账？
					-、赛尔康	
						供应商对账需求，赛尔康需要新增抽取供应商对账需数据，赛尔康业务对接人-陈菁反馈，需要提供以下作为备案
						1-、负责人邮箱（陈菁反馈：这边会给赛尔康的采购和货源还有财务发邮件 ，告知他们LY这边需要抽取数据 ）
						2-、需要抽取数据的授权截图（陈菁反馈：以立项的形式，还是钉钉沟通的形式？）
						
						3-、赛尔康 逻辑抽取
							1、分STD 和VMI 
								-、STD要通过判断  仍要发票=仍要交货<订购量 来判断已对账，未对账 
								-、VMI 有个直接的字段  给你判断 已对账  未对账 
							2、接口参数:
								date,类型（STD，VMI）
							   数据保存：
								 添加date字段，表名是那个月的对账数据。
								 
					-、5G 数据
						《采购管理(工业)系统》 ->  po,supplier
						《仓库管理(工业)系统》 ->  icstockbill
						《合并账务系统》 ->  对账情况表 ，往来对账表      ×
						《应付系统》 ->  核销明细 ，存货核销表。  
							应收、应付往来表  -> t_RP_Contact   √
						
						-- 维奇表数据 --存在换行符    √
						select replace(FExplanation,CHAR(13) + CHAR(10),'') from 
						t_RP_Contact where FExplanation like  '%作废2张 16398193 16398195%'

					
			9-、大数据迁移问题：
					1-、如需迁移后集群和老集群同时运行，运维反馈，必须修改ip地址  
						->  暂时先迁移测试服务器，暂不必满足同时运行。
				
			10、
				->物料降价优化  △△△△△
					-- uat需准备：
					1-、hive -> 新建 dwservice.dws_cd_by_material_cut_price_month  √
					2-、phoenix ->
						-、删除表 DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH以及索引 ，新建对应表和索引
						-、DW.DWS_MATERIAL_NAME 使用版本2的生成方式以及索引。（茂泉脚本一并修改。）
					3、步骤
						1、确定茂泉是否更改svn地址(uat)，因为本地代码已提交至svn
						2、
					
				->维奇和伟联：	
					--  uat需准备：
					1、hive
						1、hive   √
						create database wq

						create database wl

						dwbase.DWB_PURCHASE_REPORT_BY_5G 表创建

						2、  sqlserver -> hive 
							-、byte类型会导致数据异常，convert转换 or 查询时替换为'' ->  替换为''
								select convert(varchar,FOperDate),FOperDate from ICStockBill

								select convert(varchar,FModifyTime),FModifyTime from t_ICItem

								select convert(varchar,FModifyTime),FModifyTime from t_Supplier

								select convert(varchar,FModifyTime),FModifyTime from t_currency

								select convert(varchar,FOperDate),FOperDate from poorder

							-、ODS_WQ_T_IC_ITEM表中存在，decimal(28,1000),精度设置超过长度，需手动替换掉
						3、维奇和伟联的视图表，需要重新抽取，且放在各自的库 wq，wl中。  
						4、茂泉的5G更新脚本  -> 需要修改   √
						5、你看到时候问问他们怎么依据那张单独的委外表，如何确认是否收到货
						
			11、搭建新配置的服务器
				1-、安装xshell。  √
				2-、梳理安装流程脚本  √
				3-、参数优化  √
				4-、kettle数据迁移。 √
				
			12、-、统计下，cnc，冲压的数据中是否存在很对料号为null的数据。
				-、eas，杂项，根据“应付单”来确定是否对账：
					一般采购推了应付就等于是对账了，至于财务过账或者是否付款，这个信息采购查不到，
				供应商如果没收到款会找采购的问财务的
			
			13、CD直降优化：
				-、单位pcs的问题：
					模切的数据使用的是，采购月报，里面的单价修改为根据fbaseqty计算，所以再次根据供货价格计算amount=price*fbaseqty
						 concat(K.fqty,'|',K.fbaseQty,'|',B.FBASEQTY) as check_return_code ，
					-、模切的数据（原采购月报）price根据 （amount/baseqty）修改后，  quantity也要取baseqty
						
						备注:question1：
								-> 可能会导致和模切的采购月报的数量不一致，因为原采购月报的quantity取得方式和当前不一致。
							 question2： 
								-> 导致 m-m2 ,roll-m2 这样的， 	   ✔×
									-、若取供货价格单位时，对比时，取unit，但是因数量修改为取baseqty，  amount=unit  * baseqty  
									导致amount计算错误。（翻翻倍） [fid=sPmjTFl+QkWAbmOhe7XcXI4IhhY=]
										: 解决   使用供货价格时-> 
											1、针对模切的数据，修改price，和quantity是，同时修改unit为baseunit，达到统一。
											2、根据 拼接的qty，baseqty计算转化率。
												  -- 若发现计算有误，需要单独对模切的数据，计算转化率（与以前相反？）
									-、standPrice 也要修改为 根据  ( （amount/baseqty） / price  ) * standPrice
							 question3：
								-> fid=a/3EoZYmTT235jVQXFO8No4IhhY=  unit=pcs  amount取的为什么是含税的？   ✔
										解决：因为根据供货价格计算amount时， 错误的乘以税率。
								
							 question4：供货价格异常，单位一致，price和原本的不一致。
								->fid = JgV+4WpHTa6OjNQdywG0go4IhhY=  unit=baseunit=pcs  单价=14.79   供货价格  unit=pcs,price=150.
							 	->fid = 1Bx2W7WsSyeCZ4oK8K1AiI4IhhY=  unit=baseunit=pcs   单价=2.75    供货价格  unit=pcs,price=88.8
								->fid = GNJxP2KyR/qMoSrCmbASpo4IhhY=  unit=M qty=500  baseunit=m2 baseqty=125  （m）单价=17.63440172  
								unit=M2 price=168.401165
				-、单位为m ，m2 ，当前 根据 fqty/fbaseqty 计算转化率
			14、
				-、厂区存在公司名称为null，''
				-、供应商对账-> 采购员 null ,  日期异常。
				-、鼠标点击显示。（计算逻辑）  √
				-、基准价 --> 模切确认
				-、账号给到佳丽-> 详情添加供应商对账详情。  √
				-、核对日期->对账日期，和报表周期的关系？    √
				-、5G核对对账情况 -->  报表，订单，委外   √
				
			
			15、物料降价优化	
				1、降价->显示绿色，涨价->显示红色。  ✔
				2、涨价的物料优先展示（"降价金额"正序）  ✘【倒叙查询效率低】
				3、单价为0，无须展示 ✔ 
				4、最近单价为0的数据修改为当前单价。   -> 茂泉hive-<>phoenix ( dim != 'unknown')
				5、降价金额支持排序按钮。
				6、添加最近半年，1年，2年一直未降价的物料展示。
			16、
				7、赠品去掉。
				8、供应商为0的是因为，开发，赠品。
				10、CD直降和模切的确认下规则，
						就算有误差，其实也不大，因为不管你算去年12月，还是算去年一整年，这个价格差异不是很大的。
						但是我没有跟模切确认，你最好到时候再跟模切确认下CD规则
					-、基准价的单位有可能与原单位不一致。
							1、条件 = where day='2020-05-20' and data_sources = 'eas'
								and material_code = '15S-01H55001-0180' and supplier_code = 'JS16'
							2、b.fid = purorder_fid = 'Z01Q+nhcT6amNo++DNtiUY4IhhY=' , price = 0 = amount,是否就是赠品？ ->是   0false 1true
						步骤：1、concat(A.FTransactionTypeID,'|',B.FIsPresent) as location_code  先不用全部剔除（委外不良品，赠品）
										若需剔除，只剔除<委外不良品('/OQAAAEjL9WwCNyn')> ，赠品保留计算cd使用？
							  2、取基准价的时候，剔除委外不良品和赠品的干扰 -> 取基准价的unit_number -> 换算基准价的price
									stand_unit_number as sales_unit
										
					-、SAP基准价可以参照eas的数据计算。
					
					-、eas的赠品记录/不良品  -->目前也纳入计算CD，
					
					-、对比CNC的业务数据（3月） ，material_code= '681-FYE631-A0-0-12'  ，supplier_code = 'CL02' (创隆实业（深圳）有限公司)
							(price =5.513009 , bechmark_price = 3.313274   quantity = 556996  date='2020-03')
						3QtrDLYjSF2SciTvK5Jv8I4IhhY=  
					-、对比模切3月份数据，里面存在sap的数据，amount ！= price * quantity  （120-15T06021-1016	RS01）	
						select price,quantity,price*quantity ,amount1 ,amount2 from dwdetail.dwd_jituan_cd_detail where day='2020-06-15'and  material_code  = '120-15T06021-1016' and supplier_code = 'RS01'
							-->  应该不是amount1的问题，貌似是price的问题、
						-、模切1月的数据，cd=5622万 ， 因为有1条记录（来自于sap），cd = 4千万。
							（material_code=180-XK490390-0100	supplier_name=RF06）
								：补充-> 此物料订单中单位异常，报表中单位正确（系后续用户自己修改）
							
						-、与彭莉核对模切3月份数据。
							-、W L GORE & ASSOCIATES (HONG KONG) LTD 物料采购CD = 100W+ ,手动修改基准价
							-、物料=  '110-MXCF5004-1050' ,'120-K20050MD-0508','110-SH81800D-1030'
								   -、圣戈班高功能塑料-上海有限公司  --> 圣戈班高功能塑料(上海)有限公司） 【  比对代码数据把名称修改过来。】
								   -、material_code='120-K20050MD-0508' supplier_code='SGB01' .3月存在，大数据取到的基准价为0，业务不为0
				
					-、对比冲压4月数据 ，
					-、sap集团以及江粉，以后需要多抽取一张表，关于单位转换。
					-、供应商编码为null的不需要计算基准价
					
					-、dwserver表写数据至phoenix，16位小数->保留6位（因为茂泉代码null未判断，与16位小数关系不大）。   √
					
					-、对比磁材数据，  发现3-4月，业务提供的cd比例 >200% (设备)
						 -、磁材1月份数据中 与业务提供的cd差异7w+。 因为基准价取数问题导致。
						 198-F0000009-0000  2020-01-08  
						 198-F0000009-0000	2019-12-26
				
				166、CD返点，客指等：
						华南冲压CD规则 
							总结一下：
							1.华南冲压主要形式有：直降/返点/销售差价
							2.返点的CD形式主要通过系统免费订单来体现，抓取规则：系统中所有的免费订单，对应到订单里料号的基准单价，基准单价*免费数量=CD金额 
							3.销售差价：当前有两个客指供应商（中泰和东泰），这两个供应商我们是买进卖出，但是买进料号和卖出料号不一致，暂无对应规则。CD是：销售价-采购价=CD
					
				111-、uat的脚本 ->->->  
						1、整合了磁材（detail生成），结构件（detail生成），5G,赛尔康。
						2、修复基准价单位的异常 （get_standardprice_unit.sh）
						3、整sap集团，sap江粉（磁材，结构件）的基准价的生成。 （新增generate_jituan_detail.sh，修改cicai，jiegoujian的生成sh）
					
				11、注塑，无线充电等是否可以给个标识区分（模切）   ✘✘
				12、stock_in_date，cope_date 保留年月日   ✘
				13、供应商对账detail 待更新dim=10，  √
					设备自动化detail，bg需修改为 '设备自动化'
					供应商对账-hive<> phoenix  添加半段dwservice.dws_cd_by_buyer_recon_rate_month where RECON_RATE != 0 
							==> 给到茂泉    √
				14、结构件的数据 in_date 不规范  / pm_user & supply_info uat需要更新。
					结构件的数据  ，in_date as invoice_date （生成 dwbase.dwb_sap_jiegoujian_by_cd表时）	
				15、
					-、汇总->所有BG排名->点击详情->显示数据与展示数据一致  
						-、汇总/CNC等，detail是否要显示（区间）与展示图标一致。
					-、汇总->所有BG排名->展示页面->支持按照PA（金额）排序✔
					-、除汇总外其他BG,左上角实现鼠标移动，显示"查询区间"。✔
					-、供应商对账导出excel，日期由2020-05-01格式改为2020-05✔
					-、供应商对账，采购员的bg（汇总）显示对应的BG  ✔
					-、供应商对账详情表（一级），要默认是图标上的"月份"   ✔
					-、前端  金额放一块，数量放一块。  ✔
					
					-、加什么字段，模具系统部分数（采购员+供应商）  ✔
					-、汇总  排名+detail   ✔
					-、小数点2位------->所有detail  ，百万。   
				
				16、  yarn更新缓慢的原因 ： Join关联条件存在null值，造成笛卡尔积 ，  ✔
						可以查看yarn的map或者reduce任务，统计的byte值，查找原因，
				
				16.1、陈菁 -> sap的RFC工具，不支持传递两个日期字段（begin，end），需反馈给sap  ✔
				
				133、hive通过分区（昨天，今天）自关联，查找有改变的字段，然后写入phoenix.   ✘✘
				
				144、待完成（2020-07-01）
					1、注塑，无线充电，马达，SY
						dim=15 bg=注塑
						dim=16 bg=无线充电
						dim=17 bg=马达
						
						-- 分区 冲压SY，组装SY ，  以及（D:\ly\note\20191104_purchase\需求+问题\区分（注塑-无线模组-马达）\模切数据SAP核对整理.xlsx）
							1、根据bg/工厂代码+采购员 2、根据《模切数据SAP核对整理.xlsx》文件协助区分
							select factory_code, zbg from dwdetail.dwd_jituan_cd_detail where day='${l_date}' 
							and (ZBG in ("冲压","模组","模切","CNC","CNC鑫焱") or factory_code="5021" )
							 group by  factory_code, zbg order by factory_code, zbg
						-- 区分注塑，无线充电，马达
							 -- 注塑
							 select charger, ZBG ,count(1) from dwdetail.dwd_jituan_cd_detail where day='${l_date}'
							 and factory_code in ('2091','2092')
							 group by charger,ZBG
							 
							 -- 无线充电
							  select charger, ZBG ,count(1) from dwdetail.dwd_jituan_cd_detail where day='${l_date}'
							 and factory_code in ('203A','203B','2032','2034')
							 group by charger,ZBG
								2020-03月之前，只用'2032','2034'
								2020-03月之后 ，弃用'2032','2034' ，开始用'203A','203B'
							 
							 -- 马达
							   select charger, ZBG ,count(1) from dwdetail.dwd_jituan_cd_detail where day='${l_date}'
							 and factory_code in ('2071')
							 group by charger,ZBG
						
											
					2、CD本周出结果（周4-周5 ，汤加丽，彭莉）
					3、正式环境测试上线
						-、供应商对账eas数据抽取，sap的抽取逻辑
						-、优化供应商对账的sql（hive-detail）
						-、梳理hive的脚本 （material_cut的BG字段维护）
					4、模具系统-> 供应商对账逻辑梳理，代码编写
						1-、相关表
								对账单表：checkaccount
								外购入库单: XXX
						2-、关联关系
								1-、checkaccount.FSourceID = 外购入库单.ID
								2-、checkaccount.FInterID = mdhead.FInterID
								3-、checkaccount.suid = 供应商表.ID
								
						3-、业务逻辑
							1、checkaccount表获取字段 -> 是否对账（is_check），已对账数量，已对账金额。
							2、checkaccount表关联mdhead获取字段 -> 对账日期 (mdhead -> Fdate)
							3、checkaccount表关联外购入库获取采购员以及BG信息。
							
						通过FSourceID与外购入库单的ID关联
						每个单据都有一个FInterID字段，与mdhead中的FInterID字段做关联，mdhead中又有一个FBtype作为单据的类型ID
						
						checkaccount表中有一个suid可直接关联供应商表的ID
						
						checkaccount表关联mdhead获取对账日期是吧。 (mdhead -> Fdate)
						
					5、hive权限控制
					4、赛尔康，5G达成率完成 （2020-07-01 上午完成）
						-、5G 的date字段，2020-1   √
						-、hive写phoenix时，剔除掉对账达成率为0的。
					
					6、测试 lyzk01，lyzk02 主机 /目录存储空间满了。
						
					
				155、正式环境待更新-->增量更新：
				
					
						一、表结构修改
						SAP相关表，暂时按照update_day进行更新，后续添加唯一标识字段后，对比后更新。
						集团：
							1、dwdetail.dwd_jituan_cd_detail从基础数据表中获取分区字段day。<day as reserved2 >
							2、--> 添加“更新日期”字段
								alter table dwmiddle.dwd_jituan_cd_detail_by_cd add columns(update_day string)

							3、合并至dwmiddle.dwb_purchase_standard_price ， 将update_day 赋值给remarks
						磁材：
							1、dwdetail.dwd_cicai_cd_detail 从基础数据表中获取分区字段day。<day as reserved2 >
							2、 ---> 添加字段
								alter table dwbase.dwb_sap_cicai_by_cd add columns(update_day string)

						     	alter table dwbase.dwb_sap_cicai_by_cd add columns(stock_in_audit_time string)

							注意：  新增列字段，有可能插入数据失败。
							
						结构件：
							1、dwdetail.dwd_jiegoujian_cd_detail 从基础数据表中获取分区字段day。<day as reserved2 >
							    ---> 添加字段
								alter table dwbase.dwb_sap_jiegoujian_by_cd add columns(update_day string)
   
								alter table dwbase.dwb_sap_jiegoujian_by_cd add columns(stock_in_audit_time string)
  
						赛尔康：	
							1、dwdetail.dwd_salcomp_cd_detail 从基础数据表中获取分区字段day。<day as reserved2 >
							
						设备自动化:
							1、dwdetail.dwd_huadongzidonghua_cd_detail表。。eas 根据 reserve2作为pkid， sap的数据，根据reserve2作为update_day获取最新的数据。
							2、新增表dwdetail.dwd_huadongzidonghua_cd_detail_update
						
							1、
						二、增量更新实现
							table_name='dwmiddle.dwb_purchase_report_cd'
							old_date=`hive -e "set hive.cli.print.header=flase
 show partitions $table_name" |sort|tail -n 2 |head -1 | awk -F '=' '{print $2}'`
							
						dwmiddle.dwb_purchase_report_cd_update   --> DW.DWS_PURCHASE_REPORT_BY_EAS2
							1、hive表 dwmiddle.dwb_purchase_report_cd_update 创建，新增pkid，
							2、phoenix对应表新增pkid字段
						dwservice.dws_cd_by_material_cut_price_month  -> 
							1、hive表 dwservice.dws_cd_by_material_cut_price_month_update 创建，新增pkid，
								....
						其他维度表 9个。。
						
						
					
						dwbase.dwb_purchase_report_by_5g   --> DW.DWS_PURCHASE_REPORT_BY_5G
						dwdetail.dwd_salcomp_cd_detail   --> DW.DWD_SALCOMP_CD_DETAIL 
						dwbase.dwb_sap_cicai_by_cd    -->  DW.DWS_PURCHASE_REPORT_BY_CICAI
						dwbase.dwb_sap_jiegoujian_by_cd   --> DW.DWS_PURCHASE_REPORT_BY_JIEG
						
						detail表：
							dwmiddle.dwb_purchase_report_cd_update 
							dwdetail.dwd_salcomp_cd_detail_update
							dwdetail.dwd_huadongzidonghua_cd_detail_update
							dwbase.dwb_sap_cicai_by_cd_update
							dwbase.dwb_sap_jiegoujian_by_cd_update
							
						维度表：
						 dwservice.dws_cd_by_material_cut_price_month_update 
						 dwservice.dws_cd_by_material_type_month_update
						 dwservice.dws_cd_by_material_month_update 
						 dwservice.dws_cd_by_supplier_month_update
						 dwservice.dws_cd_by_amount_month_update  
						 dwservice.dws_cd_by_area_day_month_update 
						 
						 dwservice.dws_cd_by_supplier_recon_rate_month_update 
						 dwservice.dws_cd_by_recon_rate_month_update
						 dwservice.dws_cd_by_buyer_recon_rate_month_update
						 
						 
						 
						
						三、 新的加权平均逻辑 ， 在 uat ->  get_standardpirce.sh ,get_standardpirce2.sh ,generate_jituan_detail.sh
								模切：
									计算规则
										默认取上年度第12月单价[未税]作为基准价
										1）若上年度第12月没有值，则向下依次取11月...1月，直至取到有效值.
										2）若上年度12个月中都没有值，则依次取当前年度1月,2月...当前月，
									区分规则：物料编码 
							
								冲压： 
									计算规则：
										旧料号：取2019年全年加权平均单价
 
										新料号：取首次采购价

									区分规则：物料编码 
								CNC、组装：
											计算规则:
												旧料号：
													取2019年倒序，第一个月份的加权平均单价（amount/quantity），
													若未取到则取当前年度正向排序第一个月的加权平均单价，直至取到有效值

												新料号：取本年度首次当月加权平均采购价；
											区分规则：物料编码 + 供应商编码
								结构件：19年整年1-12月平均单价为基准值，
新料号，取首次采购价。；只区分物料编码&物料名称，没选取供应商。
									计算规则：
										旧料号：取2019年全年加权平均单价
 
										新料号：取首次采购价

									区分规则：物料编码 
									
								磁材:
									计算规则
										默认取上年度第12月单价[未税]作为基准价
										1）若上年度第12月没有值，则向下依次取11月...1月，直至取到有效值.
										2）若上年度12个月中都没有值，则依次取当前年度1月,2月...当前月，
									区分规则：物料编码 + 供应商编码
										若对于切换供应商类的物料，新供应商没有基准价对比参照，则提取历史交易商的基准价作为对比。
								5G、赛尔康：
									计算规则
										默认取上年度第12月单价[未税]作为基准价
										1）若上年度第12月没有值，则向下依次取11月...1月，直至取到有效值.
										2）若上年度12个月中都没有值，则依次取当前年度1月,2月...当前月，
									区分规则：物料编码 + 供应商编码
									
									-、赛尔康修改：
									旧料号：取 2019年全年的加权平均价做为基准价。新料号：第1个月的加权平均价做为基准价。

											
								待修改：
									1、基准价 调整至  单位->币别->供货价格-> 剔除内部交易  之后计算。√
									2、sap的供货价格。
									3、eas的按照日期倒排，取单价时，如遇同一个日期多个单价，取高单价作为基准价。
									
						四、供应商对账  
								模具系统， 
									1、sourceid对应多个值  --> 添加表类型关联    √
									2、因需要剔除内部交易，故建议放入cd表中。 -> appoint([(是否对账|应付数量|对账日期))
									3、剔除 设备的数据。。。  √
								EAS:
									1、判断是否对账的日期，从 业务日期（FBizDate）-> 改为创建日期（FCreateTime）  【eas（华东自动化+ 模切等）， ap表，  】
									2、总的达成率和采购员达成率 -> 统一改为  推应付即可就带表达成。     √
									3、磁材的采购员 （测试已修改，添加关联获取采购员名称）  √
									4、达成率为0的也要显示。（采购员）
									5、模具的供货表 -> cd    √
									
								新增需求：
									1、修改逻辑 sap的po数据同样按照po分组   √
									2、供应商对账（采购员+supplier），去掉实付数量，应付数量。且 添加两列-> 应核对供应商数量，已核对供应商数量。
									3、维护 dws_buyer,dws_buyer_update表。
										1、-> phoenix 表的 pkid需要改为string      ×
										2、茂泉的脚本是否维护update表 （buyer）    √
										3、-> hive表添加data_loadtime，去掉create_time,update_time.  ×
									
									4、廖飞的 2020-05  ，苏州益地金属科技有限公司 -> 为什么没对账成功
										1、SAP提供的报表中，有凭证日期和过账日期。  -> 要使用凭证日期（发票凭证日期）
										2-、因为对应的此条订单（4500121687）取到的入库审核日期为2020-04-29，当前选择过账日期=2020-05-15， 
										这条记录是在4月份（并非是5月份数据），且达成率成功
										3-、sap给的有两个日期，凭证日期和对账日期。但是我比对后发现，sap应该是字段名称搞错了，数据颠倒了（过账日期应该是2020-05-
											16，实际我取的过账是05-15，凭证日期应为2020-05-15，我这取到的却是2020-05-16）
									5、 对账日期期限由次月25号 改为次月30号   √
									6、ods_sap_zfmm_049,ods_sap_zfmm_049_ecc表的日期搞反了(凭证日期和过账日期。)。   √
											-、sap 044和ecc的数据，
												BUDAT 为过账日期，实际上是凭证日期
												BLDAT 为凭证日期，世界上是过账日期
									7、 根据 A字段分区，order by B字段， 不生效， 可以使用  sort_array进行排序。   √
									8、对比模式 -> 
											例如5月，就拿冲压的来看，把整个冲压BG交易的供应商，和系统抓取的对账的供应商提出来。
											然后再把每个人的对账达成率明细提出来,看是否有重复。或者是否有漏算的
											或者整个里面你显示为对了，但是采购员栏目你又显示为没对~~
									9、eas的对账表状态。
										-、应对数量是负数（退货）以及免费订单剔除
										-、单据状态  -> (保存-1 ， 已提交-2，已审核-3，冻结-4)  --> 取已提交 2   （给佳丽的版本没选择这个 2020-08-12）
										-、对账人 --> 使用应付单的创建人FCreatorID
										-、计算BG总的达成率，以推过应付的供应商即为达成

						五、维护物料未降价表，增量更新，以及数据删除表
								1、hive 两张表dwservice.dws_no_price_reduce_material_update ， dwservice.des_cd_delete
								2、phoenix表，DW.DWS_NO_PRICE_REDUCE_MATERIAL添加字段period  √

							
									
						important：
							1、核对组装 4月杨甲香的数据 ， 6月占婷玉
							2、测试 清理日志目录 / hdfs目录   √ 
							3、物料降价的分页索引，正式需要更新   ×
							4、存在area和company不匹配的情况需优化。 √×
							5、集团，结构件，磁材的sap未统一单位  -> 暂时按照同样物料单位取基准价-> 后续需要优化单位统一。  ×
							6、生成sapCD表，easCD表时。 sap的分类  in ('sap.ods_sap_zfmm_044_jishou','sap.ods_sap_zfmm_044')  √ 
							7、供应商CD排行，出现系统错误。  --> 给到世明sql，判断分母为0的情况  √
							
							8、sap044，044_jishou的数据，  原币和本位币，换算（集团sap的数据）✘
							9、修改基准价的基本逻辑，同时按照日期，单价排序，且使用开窗函数实现。✘
							10、模具关联 sap凭证吧      ✘
							11、汇总，-> BG排名添加二级详情（类似采购员二级详情）。   ✘
								-、phoenix 二级索引表，需要建立索引 DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH 
							12、拉人，采购相关的负责人。
								1、单价滞后
								2、亮彩补单
								3、系统数据删除
								4、返点
								5、大数据导出数据单位与月报单位不一致
								6、大数据同一个物料会抓取到入库退库数据（入库与退库数量一致），月报中类似数据不做月报
								7、月报遗漏数据
								8、系统未取到对应数据
								9、数据人为修改
								10、sap系统数据错误
							
							13、物料降价，显示原币，原币币别，本位币（RMB）  ,  验证是否一个物料存在多个交易币别。
							14、汤加丽 ——> 刘海梅 CNC与冲压逻辑一致（即与集团经管一致）
							15、添加一个字段 -> 实对日期  √
							16、核查模切的数据，为什么存在 
								-、清理lyzk02的磁盘数据
								
							
							17、1、设备自动化
								2、赛尔康
								3、深圳结构件、东莞结构件
								4、模切
							
							18、
								1、PA对比
								2、供应商对账显示 -> 每个bg显示对应的总的达成率的二级详情。  √
								3、模切-> 能帮忙先刷一下这几个公司的吗？”领杰“”领略“”领胜“”领汇“
									-、add_months  设为31号。
								4、磁材-> 未税
								   结构件 -> 含税
								5、磁材订单 ->是否入库日期就是7月的数据   √
										6200090636
										6200090913
										6200091577
								6、
									-、所有BG去掉模具系统。算达成率（sap新增工厂，后续需要加上）
									-、单独修改 ，冲压的数据，（6月21~7月20周期，这一批供应商）
									-、新增的数据，计算总的达成率，看差异。
								
								7、ATP01 、XLD02  两个供应商的入库数据详情。  （2020-06）
									-、其中一个 ，包含入库和退货， 实际不需要对账。 
										[与苏齐沟通，可以通过负数的单据， 上推来源单据， 与正数的单据相抵消。]
								
							19、结构件，赛尔康，磁材，--> 脚本中添加字段 “原币”，“币别”
							20、添加sap新工厂的脚本，脚本暂时只执行到计算CD。
								
								cnc-2020-07  --->  111188411  + 119182451 = 230370862
								
								
							21、数据核对
								-、组装规则：
									1、根据采购员
										:杨甲香，杨小芬，占婷玉，汪云，钟颖娟，阳贤
											阳贤 -> 新逻辑（组装）
												old:
													when buyer in ('阳贤')and dim in ('unknown','') and costcenter_name not like '%组装%' then '1'
													when buyer in ('阳贤')and dim in ('unknown','') and costcenter_name like '%组装%' then '5'
											占婷玉->原属于"CNC"
											汪云，钟颖娟，杨小芬->原属于"模切"
											以上采购员从何时开始归属"组装"BG？	
												-> 杨小芬今年4（5）月开始，
												-> 占婷玉,汪云,钟颖娟两个是5月开始
										 【只有7月份，eas下线，sap上线公司，导致zbg,工厂编码，以及采购员的更改差异，】
										428(1)+286(3)=714  + 1476 = 2190
										
								-、马达：
										1、模具系统 存在日期 2020/03/17  需要改为 2020-03-17
										2、马达是否需要包含哪些内部交易数据以及确定统计周期 ->  内部交易无须剔除   √
								-、 无线充电：
									1、包含内部交易数据（“东莞领杰”，“东台领胜城-模切-涂布”）	
									2、存在工厂编码=“5021” 的数据。
									3、工厂+仓库地点  =  确定属于无线充电
								-、5G数据 6月份数据异常是因为：
									1、维奇的一条数据，业务不存在 -->
										6.0000R1KB01.0001   2020/05/24 00:00:00.000000000 LYWQWW20200524001  wq_ww
									2、
										-、5G剔除规则要清晰。
										-、 LYWLPO20200702014  业务有/入库日期  ，大数据没
											LYWLPO20200702016
												
										LYWLPO20200702001   部分数据存在业务有/没入库日期，  大数据存在部分数据
										LYWLPO20200703002
										LYWLPO20200706006
										LYWLPO20200706007
										LYWLPO20200707001
										LYWLPO20200707002
										LYWLPO20200707004
										LYWLPO20200707006
										LYWLPO20200707007
										LYWLPO20200707018
										LYWLPO20200707019
										LYWLPO20200707020
											综上 --> 5G 存在线下手工月报的数据。
						
								-、模切数据确定
								   -、模切什么时候给PA详情数据
								   -、模切需要再核对（剔除掉无线充电，注塑，马达的数据后，PA对比）
											-、采购员更改， 吴志兰、 800W
												赵莉		1200W-> 剔除。
												杨彩票  3000W  ->
												
									采购员区分新规则：
										1、剔除"杨小芬"数据，（5月以后）
										2、剔除"汪云"数据
										3、剔除"钟颖娟" (5月之后)
										4、剔除"赵莉"（4月之后）-->7月后要加上？对比具体数据看看差异。
												
									具体修改：combin_eas_bg_by_buyer_5.sh  --> 修改eas对应的采购员区分BG逻辑
											  step_combine_muju_sap.sh   -->  SAP区分BG(依据采购员)
											  step_muju_by_buyer.sh  	   --> 模具 区分BG(依据采购员)
			
												
												
								-、磁材固定资产的能不能取到     √
									-、磁材的数据6-7月差异100W,是因为采购员中包含其他BG的数据。需要额外剔除。  √
											("区蔼明","谭秀梅","李弘基","李由君","杨远静","梁春霞","周细平","林心武","林雁俊")   ）
										注意：【脚本需要修改，仅仅 6~7月需要剔除 ， 其他月份不需要、。。。】
							21.1、新规则敲定	
								-、财务，协商zbg。（刘海梅）
								-、根据库位，“仓库地点的描述”  比对对照表 ，得出属于哪个BG。
								-、对照表在sap有维护（那张表？）
								-、对照表有更新了，如何告知我新增了那个BG?
								-、库存地址（库存地点：MC*/NA*），库位+对照表，
								
							21.2、修改脚本
							combin_eas_bg_by_buyer_5.sh
								step_muju_by_buyer.sh
								step_get_report3.sh
								step_combine_muju_sap.sh
								
								
							22、咨询余经理，sap接口开发进度以及推进sap接口开发。
							24、用户修改报表逻辑（038,044）之后，告知sap同时也要通知大数据方。  ×
								-、供应商对账， N/Y添加字段， 实时更新达成状态
								-、6月的  ->  8月1号
								
							24.1、更新8月的PA对比。
							25、
								一、sap基础表改善问题总结：
									1、梳理SAP源代码业务逻辑。
										1-、业务代码繁杂
										2-、新语言
										3-、SAP对应报表代码更新，需要大数据同步修改逻辑，更新方式有两种途径
											1-、SAP修改及时通知大数据（实时性高）
											2-、大数据可根据SAP代码版本更新逻辑（实时性低）
										目前基于源码梳理逻辑，难度大，效率慢。
									2、基础表若新增字段，需要人为再修改接口代码新增字段（实时性差）
								二、优化方案：
									1、业务梳理->目前只能采用源代码的方式梳理，但是时间成本高。（已和SAP顾问刘淼沟通，没有详细业务描述，只能借助源代码）
									2、信息同步->需要与SAP协商如何解决信息同步的方式（钉钉推送，审批等）
							
							26、dbeaver可以执行，hive shell执行，汇率变更
								110-3M280803-1500	ALL KEY INC.	TLG INVESTMENT (HK) LIMITED	人民币	2020/02/24 16:18:28.958000000	202002	976.20994	1800	1757177.892	美元|13.7|71.2562	LS002|M|21.48|1200|25776|1.5	eas	3

								110-3M280803-1500	ALL KEY INC.	TLG INVESTMENT (HK) LIMITED	人民币	2020/02/24 16:18:28.958000000	202002	94.87113	1800	170768.034	美元|13.7|6.9249	LS002|M|21.48|1200|25776|1.5	eas	3
								
								
								港币	[0.12903,0.82259,0.82081]	201509	[0]	["e0c5c474-00fd-1000-e000-3d59c0a8100dDEB58FDC"]	["e0c5c474-00fd-1000-e000-3909c0a8100dDEB58FDC","dfd38d11-00fd-1000-e000-1ebdc0a8100dDEB58FDC"]

								e0c5c474-00fd-1000-e000-3d59c0a8100dDEB58FDC = 港币

								e0c5c474-00fd-1000-e000-3909c0a8100dDEB58FDC = 美元

								dfd38d11-00fd-1000-e000-1ebdc0a8100dDEB58FDC = 人民币

								美元	[6.9249,71.2562,7.0066]	202002	[0]	["e0c5c474-00fd-1000-e000-3909c0a8100dDEB58FDC"]	
								["dfd38d11-00fd-1000-e000-1ebdc0a8100dDEB58FDC","/OQAAA9oTBLetY/c"]
								
								/OQAAA9oTBLetY/c = 卢比
							
						sap供货价格：
							与相关采购确认：
								1、结构件，磁材，集团sap系统中供货价格来自于那个表？如何确定使用一个物料的供货价格（有效期，供应商，物料编码等？）？
							与相关sap工程师确认：
								1、采购相关供货价格来自于那些报表？(取那些字段需告知sap开发方。)
								
							
						五、物料降价详情表，查询效率优化。
							-、暂时由业务端控制
							
						
						六、2020-09-17整理。
							1、eas表 -> day='2020-09-06_test2'
								更新的话， 
									模切5-9月
									CNC 7-9
									组装 7-9
									冲压 7-9
									无线充电 7-9
									注塑  1-9
									马达  1-9
									
							3、注塑、马达、单独拎出来计算PA.
							4、磁材的剔除采购员， 脚本需要修改，仅仅 6~7月需要剔除 ， 其他月份不需要、。。。
								
							6、冲压数据8月异常 -> 
								冲压 8月份数据，因为 15S-04N02012-0270    2020-08-06 的数据异常，  单位未换算，导致金额，扩大1000倍，多了4000W
								
						
						最新数据核对问题总结：
							1、模切的数据，可以采用新老采购员，混合的方式出一版PA。
								1-、模切数据核对，发现 zfmm_044 接口存在，订单退货的数据，但是大数据未抽取到。
									（material_code='110-3M864200-0155',公司='4010'  ,'2020-07-17'）
								2-、1~4月使用原采购员信息 ， 5~至今 ，使用新的采购员列表
								
								3-、	remove_moqie_buyer.sh  （'李婷'后续要加上此采购员数据）
							
							2、 组装 8月份数据异常原因  -->  
								1-、15E-49N18603-0007  币别未换算（因为sap的amount1取得是美元），少了和2020/07/31的数据  ，quantity=3600000
									-、15N-51N106014-0008-F 币别未转换。【4500153683，4500153683，4500161635】
										15E-49N18101-0000  【4500153558，4500157809】
										
									问题原因：存在香港公司，原币和本位币都是USD，导致取本位币算PA时，实则是美元。
									解决：1、币别=USD，汇率=1的数据，需要单独关联汇率表获取汇率计算PA（月初汇率）
										  2、汇率表要每天更新。
											
								2-、sap集团数据，目前没有筛选BG,所有数据全部抽取过来根据采购员来区分。 【下个版本可以测下，+上ZBG区分。】
								
								
							3、 因为单位问题（集团的数据）
									-、金额统一改为 ：ZJE2 as amount1 （本位币）
								2020-09-06的数据需要重新跑一遍。	
							
							4、
								-、新工号问题导致，8月异常，  SAP集团已优化。  √
								-、CNC数据 8月异常，方轶数据暴增->  内部交易公司 '东莞盛翔-CNC工厂' 未剔除  √
											##     -、剔除供应商='东莞盛翔-CNC工厂' 【内部交易】公司  [2020-09-25新增逻辑]
											##       (supplier_name like '%领%' or supplier_name like '%东莞盛翔%')	
								
								
							
						七、总金额 --> PA总金额   （purchase amount 采购金额）
							账期天数。
							code-换位子
							单位
							明细导出
							
							
							
							-、剔除异常CD数据
							
							
							
						八、SAP相关配置
								账号密码:it061/abcd.1234
								采购订单:ME2N  
								查询所有表:se16n （查看EKKO等基础表）
								查询表结构:se11
								查询接口:se37  --> ZFMM_048(此函数对应报表 ->ME2N)
								集团报表:zmm038
								采购订单打印：ZMM021
								采购入库？ekbe/mseg

							ECC正式
								账号密码：1041/123456

								
								SAP所有数据订单数据。
								sap.ods_sap_zfmm_048
								sap.ods_sap_zfmm_048_ecc
								
						九、select cname, workno,empsourceguid  from  jituanhr.ods_jituanhr_hrms_db_20170714_t_employee where day='2020-10-09'
								and ( workno = 'HJ-18828' or empsourceguid = 'HJ-18828' )
								
							1、存在 ，工号大小写敏感
							2、hive的sql ，加分区的sql，后面的or要用括号括起来
								【2020-11-04 数据查询对应BG数据少，是因为采购员名称未正确获取。】
						
						10、
							1.area表，剔除area为null的数据，cd_area保留
							2.eas的deatil表。  中文括号全部替换、area为null的修正。
							3.7月的对账，9月1日开始计算， 8月的对账，10月1号，开始算。
							4.核对下冲压，马达 7-8月份模具系统为什么对账达成率这么低
							5.5G供应商对账是数字名称。
							
							6、TEZ下，hive设置参数导致，数据计算差异
								-、因为设置了set hive.auto.convert.join=false, 【关闭mapjoin】导致数据差异。
									
								set mapred.map.tasks.speculative.execution=false

								set mapred.reduce.tasks.speculative.execution=false

								set mapred.max.split.size=150000000

								set hive.exec.reducers.max=15

								set hive.enforce.bucketing=true

								set hive.auto.convert.join=false

								
							7、ods_sap_zfmm_049,ods_sap_zfmm_049_ecc表的日期搞反了(凭证日期和过账日期。)
							8、 马达剔除2020-07
								【'宜兴新高合金制品有限公司','东莞领杰-冲压黄江工厂','昆山冠鑫塑胶电子有限公司','蚌埠汇丰电子科技有限公司'】
							9、FBL1N
								1、剔除模具
								2、FBL1N加上后计算达成率
								3、问财务要
							设备自动化达成率低：
								1、剔除固定资产的数据	(SAP固定资产有标识)
										有代码的，好像A类是固定资产，K类不是
							10、
							   -1、FBLIN+模具再计算达成率。	
								1-、eas下线-> sap上线的eas数据， 需要和模具一样+FBL1N 判断达成率 （2020-07）
								2-、库位要继续跟踪研究、
								3-、越南领益单独拎出来。     A  ×
								4-、供应商对账+厂区+公司     A 
								5-、BG详情detail因为判断buyer = buyer  ，时，因为null，导致未匹配上。  √
								6-、名字重复   		 A
									刘蕾的数据，模切 -> 重名	 
										刘蕾 ("6059501","10002945")  -- 模切
										刘蕾(6196671,10167520)	-- 设备
									王芳的数据，
										王芳 (SZ-1722	10013659) -- 模切
										王芳 (HN-19934	10002938) -- 冲压
										结构件王芳
										
										-、还存在自动化的数据。
								7、映射关系分BG这块你也要给个进度，就是你缺啥，能不能推动，要不要协助，你给个明细，到时候可以找eline

								8、generate_jiegoujian_report.sh  要单独再跑 （里面获取公司编码和供应商编码的脚本，分区需要动态）
								9、对账单，越南盾 转化为 人民币。 
								10、区域公司，factory_code,factory_name,company_code,company_name 补全。
								11、5G->通信事业部
									1-、修改脚本generate_5G.sh
									2-、修改hive： dwmiddle.dwm_bg_to_dim
											phoenix：DW.DWM_BG_TO_DIM
									3-、修改相应的维度表
									4-、修改update表。
									5-、物料未降价
									
								12、江益对账按照自然月 （1号~30号 or 31号）入库记录对账
									安磁对账按照跨月 （当月26~ 次月25）入库记录对账
										： 比如8/26~8/31期间的入库，是计算在9月的对账里面，实际完成的时间应该是在 10月期间.
										
								13、供应商详情 ->detail,什么时候上线？ 
								
								14、马达 ： LY-LMA4013-B020213-03
											LY-LM2816-B020211-02  料号不存在   9月
										解决： 以为采购员='丁雪晴6179024'  ,且代码中未添加丁雪晴采购员筛选。
										
								15、LOC金额，赛尔康？  --王静
										： LOC 是本位币的汇总
									月报规则，月报金额
										：单位都是美元，包含所有地区的数据。
									
								16、单位，小数点，
										磁材，结构件追条对比
										
									
									452+10+132=594
									27.5+0.77+23.7=52
									
									
								17、
									1-、测试服务，加内存，加硬件。9
									2-、服务多节点。
									
									3-、项目插队
									
									4-、SAP采购数据，返点问题结局：（直降， 非直降的区分规则）
											采购提单，添加一列，直降， 非直降。
									
									
								18、10-31的数据不一致的原因：  step_muju_by_buyer.sh  ,不是模具的数据也需要判断。
										-> 没有采购员编码，无法区分刘蕾。
								
								
										1、导出文件-> date+供应商，去掉BG名称。
										2、筛选导出基础信息。导出当前表格
										3、×、汇总太暗了，整个色调暗
										4、合并->供应商的基础交易情况，留白
										5、去掉采购员页面
										6、基础交易
										
									1、问题+解决
									2、任务计划
									
									3、area模块。null
										1-、注塑、冲压、组装等 ，存在area_company表为空
										2-、area表 ，后端查询不传null的数据
									4、no_price,存在 period 为以前的周期数据、
									C:\Users\wang.ying.nan\Desktop\寄售数据.xlsx
										
									2020-11-13 核数
										-、磁材，结构件，设备自动化的amount根据订单是否需要分组求和。
									
								19、044 and  044jishou  采购组（ekgrp）	字段。
									EINE(采购信息记录) -> ekgrp
									EKKO(采购凭证抬头) -> ekgrp
									T024(采购组)-> ekgrp
										001	Einkäufer 1
										002	Einkäufer 2
										003	Einkäufer 3
										101	原材料(停用)
										102	半成品(停用)
										103	成品(停用)
										104	辅材(停用)
										105	委外加工类(停用)
										106	固定资产(停用)
										107	设备配件类(停用)
										108	服务类(停用)
										109	办公劳保类(停用)
										110	IT类(停用)
										111	五金配件类(停用)
										112	非标定制类(停用)
										113	刀具(停用)
										114	夹治具(停用)
										115	模具(停用)
										116	模切(停用)
										117	冲压(停用)
										118	CNC(停用)
										119	组装(停用)
										120	结构件(停用)
										121	显示模组(停用)
										122	磁材(停用)
										123	设备(停用)
										124	行政(停用)
										125	自动化(停用)
										198	委外索赔退货采购组(停用)
										199	半成品、成品公司间交易
										A00	公共采购组
										A01	模切
										A02	冲压
										A03	CNC
										A04	Softgoods
										A05	结构件
										A06	磁材
										A07	赛尔康
										A08	通信
										A09	无线充电
										A10	马达
										A11	键盘
										A12	注塑
										A13	医疗
										A14	自动化
										A15	设备
										A16	总务
										A17	基建二装
										A18 FATP（6090优先）
								20、设备自动化的，采购分类字段 
									sap.base_increment_ekpo_intact  -> ZCGFL
									
									枚举类型： 
										01=设备-检测仪器
										02=设备-非标自动化设备
										03=设备-自动化通用件
										04=设备-自动化加工件
										05=设备-标准生产设备
										06=设备-维修，维护，保养，校验
										07=设备-租赁
										08=设备-改造，搬迁
										09=设备-其他杂项
										10=设备-夹治具
									需要剔除的类型('01','02','05')
								
								预制发票：枚举类型：	
									1	为后台定义
									2	已删除
									3	有错误
									4	修正(过账，未完成)
									5	已过账
									A	预制
									B	冻结并完成
									C	冻结和暂存
									D	输入和暂存
									E	冻结和下达
								21、寄售， 
									1、收货的不一定付钱
									2、自有仓库 -> vmi仓库 
										 

										
								22、5G ，维奇上SAP
										SAP采购组：
									
									-、设备自动化， detail表的 period ，ecc未使用本月16~次月15（已修改）
									-、	需要更新 amount，（已完成）
										等其他维度表的数据 ， （待完成） -> 需要确认，重新计算，update是否会遗漏数据？
										对账达成率无须修改
										
								23、		
									-、这个你看时间安排吧，就是PA可以导出详情（周期是月报周期），供应商对账达成也可以导出详情
								（周期是自然月）。当前当然是保证数据的准确性为主
									-、amount表，简体、繁体、存在为null的情况。
									-、内部交易去掉 “东莞鑫炎”
									
									
									-、CNC
										1、存在正负抵消的数据，不需要计算CD
											-、681-FBS783-B-0-12-A 此物料存在，同一个订单，下了好多笔正数的数据，最后一笔是负数，统一退货。。不能处理
											-、汇总求cd
										2、剔除B198 ,B298的料号，这个料号。是手动算的CD算在委外REBat
											681-FYE631-A0-0-12
											681-CBV602-B0-00-8 
											681-CBV601-A0-00-8
										3、剔除委外的，根据料号，但是原材料不剔除
										4、15C-24N30001-4250
											月报是：43.07/kg   大数据：42.19/k	g
										5、模具数据不计算CD，这个怎么算？	
										
										6、  681-YTG603-18-00-04W  ，基础价取小了  【统计比月报少了80w】
											po=4500177285   净价 =2.2  ，月报=1.55
											po=4500208118	净价 =1.55  ，月报=1.55
													降价滞后。  -> 此物料对应的单价 1.55  2020/06/30 ~2021/01/01  【1.55的单价是2020/8/13导入的】
													实际录入是在9月后。所以单价是2.2
											采购信息记录（延迟导致的单价推迟）
														
													-、问SAP
														"采购改数据。   2020/08/01 ~2021/12/01   2020-08-13生效"
										7、调整基准价  (282W)
												->	681-BSG603-A0-0-8B	   原单价应为=1.180000 	162W
												681-YTG603-18-00-04W						【统计比月报少了 80w  （类似【6】中的情况，存在1.55,2.18两个单价）】
												681-YTG604-14-00-04W						【统计比月报少了 60w  （类似【6】中的情况，存在1.55,2.18两个单价）】
												681-AHH711-14-01-04S 						 【统计比月报少了 34w  （类似【6】中的情况，存在1.15,2两个单价）】
												->	681-HVD633-03-S-0-13-W	 原单价应为=1.46018		140W 【统计比月报少了 144w】
													681-RBN614-A0-0-11S    	原单价应为= 1.386903     45W 
												
												681-YTG604-15-01-09S	45W   原单价应为=0.521504  【统计比月报少了 20w】
												681-YTG603-19-01-09S	844425.227071
											681-FYE631-A0-0-3S	818788    原单价应为=0.9    【统计比月报少了 50w】
											15C-24H42007-0055	435250.695499    原单价应为= 51.345132		【统计比月报少了 120w】
													681-HVG636-01-0-6-W	349130.249271     原单价应为= 1.59292   【统计比月报少了 68w】
													681-YTG603-18-00-01S	316346.690128	   原单价应为= 14.1592			【统计比月报少了 16w】
													180-SLAHH711-0001	313146.056		原单价应为= 2.8 	数据条数少了。    【统计比月报少了 30w】
									681-KLG601-18-04-11S	291950.601343	原单价应为=0.543097    【统计比月报少了 30w】  ->  物料升级（物料编码变了）
												681-FYE631-A0-0-03	234664.75	原单价应为=0.3   	【统计比月报少了 20w】
												681-DDB660-21-00-1S	234185.563625   原单价应都为为=0.509735   【统计比月报少了 5w】
												180-SBYTG604-0005	212621.9758    原单价应为= 3.163805 数据条数少了   【统计比月报少了 20w】
												15S-16Q00001-0016	182510.706084      【统计比月报少了 18w  （类似【6】中的情况，存在两个单价）】
												15A-13N35006-2079	180530.9696  原单价应为=64.415929   【统计比月报少了 17w】
												681-AHH711-13-01-04S	178634.3
												180-SLKLG601-0000	169526.6093
												581-A110656	162115.4304
												180-SLYTG603-0004	144135.664296
												681-DTY614-13-01-1S	139211.293592
												581-A112335	134248.062389
												581-A190089	127609.199262
												581-A110989	127056.03863
												581-A110001	124353.992937
												582-A120103	123493.767969
												681-AHH711-14-01-11S	119523.874696
												581-C120008	117400.5074
												681-HVD633-02-S-0-S	108319.098586
												
												15C-24H35008-0048    【统计比月报少了  25W 】 
												681-AZK605-01-00-06F   原单价应为=1      【统计比月报少了  23W 】 
												681-AZK607-02-00-06F  原单价应为=1.03 【统计比月报少了  22W 】 
												
												15A-63N57101-0245  原单价应为=44.23893805 【统计比月报少了  11W 】
											
										
											
											7、修改基准价逻辑
												1-、CNC修改逻辑，不需要计算求和，改为最后一次单价
												2-、eas 和SAP的数据，要混合在一起。
												3-、添加SAP和EAS的单位需要统一。
													LS001 M2
													LS002 M
													LS003 ROL
														:180-DW400300-0400 180-GP380050-0380 存在 roll 和M2转化。


												4-、SAP的数据，需要换算单位 （需要抽取单位转化表）  
												5-、汇率取入库日期的汇率。【存在汇率某个月份没有值的情况,取订单的汇率值？？？】  
														修改：汇率取订单日期的汇率（即取sap默认的即可）
												    单价据入库日期来取值。（物料信息记录表）
														
													
										6.2、剔除CNC->丁冬冬，胡志美 ，这部分数据属于 冲压。
												明超+罗莎 -> 属于模切
										
										8、15C-24H42007-0055 
											就是没有43的单价来着~~基准价去年的是51呀，这个供应商
											原因:1、分别按照eas和sap来取基准价
												 2、按照加权平均，最后一个月
										9、
											例如，去年12月入库，同一个料号价格最高那个，去年没有就取今年1月入库里价格最高那个，1月没有则顺延
											对比规则这项要改一下，就是当前规则取的不是第一次入库的价格，而是取当月入库里较高的那个
											
										10、681-PPS804-01-00-13
											他们的基准价格是4.12  ，大数据=3.03
										11、那就是华南和华东都是当月入库里最高那个作为基准价
												按照物料编码，取上年度12月里面最高的单价。
													（是12月入库里，最高的那个。如果12月没有，则是本年度顺序第一个月的当月入库里最高的那个）
													
										12、681-DDB660-21-00-1S
												单价滞后， （这个料号，系统入库的确是0.47，但是手工月报里是0.4，已经确认了，是降价滞后的情况）
												
										13、
											-、EAS的原始币别和SAP的原始币别不匹配，导致计算基准价乘以汇率异常。
												-、15A-73N20003-0032  物料  在EAS中-> 存在汇率=1，rmb 。fid='NV0w7M7GTJ+nr2dLuHV5BI4IhhY='  fpirce=38.176991 
												但是SAP的单位却是USD，此种情况，  计算基准价的时候，需要加上币别(EAS的原币别和SAP的原币别)是否一致，然后再决定是否乘当前汇率。（eas换算币别，需要加上原始别被）
												-、15A-73N20001-0028  
													两者总计多算了 235W
											-、单价多除了汇率。  √
												以前按照入库日期来关联供货价格，都能获取到含税单价，现在用订单，
											关联不到了，用了未税单价，但是还是除以税率，导致没有关联上供货价格的数据，原未税单价又换算了一次。
												示例：681-DDB661-18-00-09
											-、15A-63N50004-0180  原单价eas，RMB=64.634248  , 现单价SAP   ,RMB=15.268142   √
											-、681-FYE631-A0-0-3S  大数据基准价=1 ，业务报=0.9  ？？？？  导致多计算（200W-80W）=120W
											-、合并数据 ，记得把 bechmark的值，用( cast(B.account_amount as decimal(19,6)) )  * ( cast (B.exchange_rate as decimal(19,6)) 替换。
											-、 基价大数据取不到得情况：
												-、681-BSG603-A0-0-8B   	采购基准价=1.180000 ，单价=0.9 大数据基准价 =0.9   	少162W  （有个1.22， 但是是很久的数据了）  
													原因:此料号取得貌似是内部交易对应的单价。
												-、681-HVD633-03-S-0-13-W   采购基价=1.46018   单价=1.22或者1.08  ,大数据取得=1.318584   
													原因：此料号取得是上年度，单价最大的值。
									-、组装   
										1、material_code='585-D160199' ,基价单位，因为价格单位的问题，导致差异。
											：manual  
										2、190-FRAMEDAR-0000   单价不对。
										
										3、脚本逻辑修改：
											1-、step_generate_eas_tmp.sh ， 添加 jishou
											2-、'LY INVESTMENT (HK) LIMITED' 和
												和'TLG INVESTMENT (HK) LIMITED'未剔除？ 
													解决： 因为 11-20分区，company表没有值
								
										4、异常数据基准价 。 
											190-EVT3NBRG-0477  XF03   采购月报=35.80013   大数据= 64.40161/35.527042/35.80013 (2020-05)
											190-80625440-0000  FCD06  采购月报=0.595044    大数据=1.933362/0.595044 (王艳/杨小芬)
											190-80625439-0000  FCD06  采购月报=0.595044		大数据=1.933362/0.595044 (王艳/杨小芬)
										
										5、基准价的汇率 ，要按照当前物料的入库日期来算基准价（RMB-> USD * 当月汇率）  ×
												修改：按照订单日期
										
										6、585-D160199 应属于CNC，目前在组装
											：这个说错了，算了一部分，我刚问阳贤，他说是看仓库，有些都没入组装的仓库，入的是领杰
											是的，恒科算是大部分都是算在CNC的月报里的，除了BOM类物料需要算在组装里
										7、对账rebate的数据， zmm038取不到，需要去预制发票中取（折扣率）
												-、取折扣率的数据
												-、存在财务修改。
												另外，上次说的那个预制折扣率的情况，如果是存在财务可能会修改数据的情况，那么我们就只能拿开票金额减掉订单金额
												那个差异就是CD（也就是我下了100w的单，但是我开票只要90w，那这10w就是CD）


									-、冲压	 （1、上年度加权平均 -> 最后一次的加权平均。  2、本年度取第一次的价格）
													当前实行规则： 
														1、默认取上年度加权平均。 2、本年度取第一次的价格 3、按照物料编码
										1、585-F160740  合金不算CD以及PA
												（这个含金的料，因为金价变动情况较大，所以不算CD，但是现在他们的规则是PA和CD都不算）
														昨天问的那个含金的物料，就是属于低于行情价物料

	
										2、15S-01H00501-0020
												这颗料，你看下你的取值，你的逻辑是取对应供应商对吧
												但是这颗料的基价，你取了别的供应商
												抓取的入库是在至臻买的，但是对应的基价你取了启沛的
												所以这个他们就等于是涨价，但是如果至臻和至臻对比，这个东西CD就是0

										3、15T-22E00801-0011
											这个料号，手工有基价，大数据没有。但是我看了系统，这个你可能取不到去年的基价，
											但是系统在5月有下单，按你的逻辑要去5月那个加权平均，基价应该也不会为0
										
										4、冲压异常数据（月报 上年度加权平均 ， 大数据=上年度最后一个月的加权平均）：
											15S-01E00704-0077  采购=0.1190   大数据=0.096018
										
									
										
										2020-11-30 问题：
										4.1、 15C-87N03003-0092 
											 采购基准价=0.0489  大数据=0.050304
												这个问题不知道是为啥，反正就是系统导出来的会不一样，这个差异应该没办法解决，我问了采购他们对于038导出的数据是不会变的
											原因：这个料去年没有买，今年的新料，最近一次购买是2020-04 ，按照他们现在给的逻辑，今年的新料取首次的就是0.0489
											
										4.2、110-AB550B00-1020  应属于成都模切
											原因：此料号的采购组 =A02 对应的是冲压。。采购员却是 “沈娟”
											
										4.3、沈娟 应属于模切， 
												原因： 沈娟对应的采购组都是冲压的。
											阮氏清水 应属于越南
												原因：对比时，未剔除这部分数据，后续剔除
										4.4、15S-01H00537-0016 
												这个料号，手工月报里算的是对应供应商的价格做基准价，是20年才开始买，我算了7/16-8/15的加权平均，是8.9，但是你抓取是9.04，
											看你这个加权平局咋算，不过我俩比较接近了~~冲压的这部分规则又不同，就是含金的物料（或者也有其他）他们不是按物料的加权平均，
											而是物料+供应商的加权平均
												原因: 这个料是今年买的。按照新规则，应该取今年第一次的单价 ，系统中 =8.86814 ，  但是他们的基准价=8.956371 和9.750442 两个。
													
											
										4.5、对比的时候，基准价要一模一样，要不然会存在四舍五入后，CD与月报还是有差异。
										
										5、 基准价取的两个供应商最大的   ×
										

										6、比较时， 剔除 治具，模具
										
										7、冲压，  沈娟和曾玉  ，虽然采购组=冲压，但是小厂=SY厂，应该算为模切数据、
										
										
										8、	680-ZZZ162-02-00-11
											680-ZZZ217-04-00-11
											680-ZZZ218-04-00-11
											680-ZZZ365-02-00-02
										PA这块你需要加上逻辑，就是你目前排除内部交易公司的规则是按照供应商名字，也就是叫做领胜城的公司你都给排除了，
										但是领胜城在我们系统有两个代码：A2031和LSC02，以A2031交易的你要剔除，以LSC02交易的你要算进PA和CD里
										
										
											汇总问题：
											1、SAP单位取错？  'G.Bopp + Co. AG', '苏州久行电子材料有限公司',
												0.18亿
												1.29亿
												
											2、合金部分不算CD  -> 585-F160740 
											3、内部交易的公司，要保留一部分：A2031和LSC02，以A2031交易的你要剔除，以LSC02交易的你要算进PA和CD里（做领胜城的公司）
												--set hive.execution.engine=mr

													： 4500192661  也是LSC02但是月报中没有， 因为是委外？
											4、印度公司去掉（9月， 10月也包含印度）
											5、部分料号，没取全？   十月
												po=4500249501  2020/10/14 190-P4020004-0610	28000000  
												解决：因为采购员=（   6027226	10035586	朱娟）。未纳入数据。 采购组=A02
												
												
									-、注塑问题：
										1、江木兰 --> 这些不是我们组的
										2、异常数据 --> 190-LCPE4008U-0000   单价=76.978  和基准价 = 9.80531  取值异常 （cd=-100w）。
											
											190-PC813010-0000   月报基价 =10.060000(USD), 大数据基价=36.920422（RMB）
											881-FGE501-01-00    月报基价 =9.735000 / 11.327434/10.000000 /7.964602（RMB）   大数据基价=11.327434（RMB）
												原因：根据供应商。
			
 
									
									-、模切问题：  ×
									
									-、结构件问题：
											基准价规则：1、按照物料编码
														2、取上年一整年的加权平均，今年新料取第一次的价格。
									
									-、无线充电	
										190-VTRPE800-0050   月报基准价（23.500000）【USD】  大数据=165.52695【RMB】   汇率存在多个值。
										
										140-SR5201BM-0485  赵莉， 此料号不存在 大数据月报中。  （2020-10-31  区分为 unknown？   采购组=[A09,101]）

 									
									-----------------------		  ---------------------------------------------- -----------------------
									
									-、ZMM008 关税。 ×
									
									-、加一个模块，显示差异。
										1-、先显示差异率
										2-、采购员操作差异
										3-、详情
									-、公司列表 ，044 公司列表，  ×
									-、SAP的数据，需要换算单位 （需要抽取单位转化表）  ×
									
									-、SAP订单，添加直降返点
										-、只显示直降，其他
									
									
									-、赛尔康，CD修改是否完成
										-、暂时不展示。（系统不处理）
												确认的数据有问题，我算的PA是否和采购统计的一致。
													同步少算钱。
													
										-、另外，赛尔康的你跟王美林讨论好了，你先跟姚经理那边说一下情况吧，
											Susan有在问她赛尔康数据准确度问题。对于手工修改的部分数据，针对9月你还是找到到底更改了哪些，
											不然这个之后肯定要问
											
										-、赛尔康-> 王静 （订单错误的问题，线下数据）
												1.存在手工PO（无PR，采购手动下单），原因是可能存在临时补货调货的问题（此部分是否可能下错，需核实）
												2.订单数量错误问题：此部分所说为订单的价格单位数量错误，例如，价格是100元/10PC，被当做100元/1PC下单出去，
												则10元/pc的东西变成了100元/pc，扩大10倍。这个最后在对账时才发现，此时采购订单已交货关单，无法改变系统的价格单位。所以需要在线下调整。
												此部分款项追回一般是财务扣款，或者财务调账至下月。
									-、设备自动化。
									-、BG如果有需要剔除的数据， -> 加备注， 规则放文档中。
										
									-、整理基价规则对比版本
									
									-、待抽取sap表字段：
										1、A018 -> 供货价格的有效单价
											:2020-12-08  新增表 KONP
										2、ZTMM011 -> 关税表
										3、ZMM034B ->  发票预制-取折扣率
										4、单位转换表
										5、新增公司的名单
										6、KONP
										
										月报10月用户提供：
											设备自动化、结构件、模切、赛尔康、磁材
									
									
									-、SAP的汇率要根据 入库审核日期【后续改为根据订单日期来】来算。  √ 
										解决：step_generate_jituan_detail.sh
										版本2 ： 修改为订单日期。
											j.order_date AS reserved1
									-、EAS供货价格按照订单日期来 √ 
											解决：step_get_supplier_price.sh 脚本， 根据order_date来关联获取原单价。
									-、添加关税->计算单价  √ 
											解决：净价*关税
									-、基准价的汇率 ，要按照当前物料的订单日期来算基准价（RMB-> USD * 当月汇率）
										：4500153313  订单的汇率，也是按照订单的日期来算 【 （但是044，默认HKD汇率有问题 (4500044155)。）  目前采用根据订单日期，再次获取汇率值。】
											（order_date=2020-06-29 ,对应的月初汇率=7.13150    采购月报单价（未税RMB）= 4.56[订单净价] * 7.1315 * 1.06[关税] = 34.4708184 ） 
											（入库日期=2020-08-16，对应的月初汇率=6.99800      大数据单价（未税RMB）= 4.56[订单净价] * 6.99800 * 1.06[关税] = 33.8255328 ）
											
										解决： 取基准价的时候，找到当前基准价的汇率值，后续再计算原币单价 * 当前单价对应汇率。
												step_get_report2.sh  ，ori_proxy 作为 汇率和币别 concat(B.currency_name,'-',B.exchange_rate) as ori_proxy
												【【【脚本对比时，注意剔除ori_proxy字段】】】】
									-、CNC单价要按照入库时间，来确定物料有效价格（SAP中默认是以订单日期来关联的有效价格） ---> ？？ 【【目前暂不处理】】
										解决：取订单日期来关联获取有效价格 （目前有可能存在，有效单价的有效区间有效日期比导入日期早的情况，所以需要再根据订单日期关联获取有效单价）。
									实际上，SAP已经根据订单日期来获取有效价格，目前暂不处理。【后续使用基础表时，要根据A018 + KONP，通过料号+供应商+公司 关联有效价格。】
										示例：681-DDB660-21-00-1S  	po=4500192636  供应商=KD09 采购组织=1060  凭证日期=2020-08-07  入库日期=2020-08-26 采购信息记录=5300103772
														->  SAP  订单单价 =0.47 
												单价滞后， （这个料号，系统入库的确是0.47，但是手工月报里是0.4，已经确认了，是降价滞后的情况）
												供货价格有效期是8/8开始的，但是单价是8/20导入进系统的
												[所以在8/8-8/19这段期间的单价虽然执行的是0.47，但是最后对账会按0.4，所以他们月报改成了0.4]
									-、CNC的基准价规则修改：    √ 
											按照物料编码，取上年度12月里面最高的单价。
													（是12月入库里，最高的那个。如果12月没有，则是本年度顺序第一个月的当月入库里最高的那个）
									-、剔除掉异常数据（采购员+越南领益）
									-、折扣率 ， zmm034B报表下线，需要推迟一周， 询问具体下线原因。以及上线时间：
									
									
									-、总结更新基准价的规则
									-、这个规则也是新的，就是料号升级的物料，取的是该物料的首次单价，不管料号升级多少次变成啥样
									-、料号升级  -> SAP是否可以解决				



您好，我是数据中心工程师


1、只更新10月之后的数据。（10月之前数据，暂时不处理）


本周

2021/01/15
新需求：
1、对账达成率不需要小数点
3、ZPP052 替代料号
4、area两个华南
5、5G改为通信
6、设备自动化的11月数据少了订单数据。


2、修改了 11月
模切+6000W ，
组装 PA -300W ,cd+55W
5G+20W
注塑+250W ，cd+15W
马达-125W ，cd+276066
设备自动+140百万 （少了），cd+100W  【是否是因为048，少抽取数据了？】


10月
组装+cd30w



9月份数据核对汇总：
BG整体PA差异平均保持在1%左右，CD差异平均保持在15%左右。
数据核对问题汇总：
1、单位转换错误、汇率取值、关税等导致的差异(已优化)
2、基准价规则存在不一致的情况（按照实际基准价规则计算）
3、采购组存在选择错误的情况（需采购同事规范选择）
4、添加折扣率的CD数据（已优化）
5、内部交易部分公司无须剔除（已优化）
6、部分BG存在线下月报数据（线下月报数据，暂无处理）
需要采购同事协助处理的问题：
1、需各BG采购同事规范选择采购组
2、确定2021年新的基准价取值规则
3、线下CD的解决方案（见附件《线下CD解决方案.xlsx》）









已修改：
1、修改了测试/正式环境的地址
待修改：
1、要体现汇总和单个BG的页面不同点
2、需要基于每个模块，做一页PTT,介绍图标和详情的功能以及图标


2021-01-04
本周计划
1、确认ST单位
	-、模切数据重跑
2、SAP增量更新
3、制作线下数据基准价数据表格   ---> 
4、其他CD类型如何解决。方案敲定？
	-、价差和返点不放入系统统计
	-、和SAP沟通，SAP添加一列“原料号”的可行性 （即替代料在SRM中加字段还是SAP？全部线上化还是部分？）
	-、确认，ZPP052的替代名称是否可用



本周工作：
1、确定替代料&料号升级，SAP线上的替代状态信息是否可用（已完成）
2、沟通确定线下CD数据实现方式（已完成）
下周计划
1、贵金属汇率差CD计算
	1、针对料号的b188、b298（项目）贵金属电镀，创隆和联丰
		('681-CBV601-34-00-9','681-CBV601-A0-00-8','681-CBV602-21-00-9','681-CBV602-B0-00-8','681-FVE631-A0-0-12')
		681-FYE631-A0-0-12
		681-CBV602-B0-00-8 
		681-CBV601-A0-00-8
	2、汇率差CD=  PA[79755560] * ( 当月汇率[6.5713]-去年12月汇率  [6.5423])   [0.029]
	3、单指贵金属电镀，正常降价无CD
		问题： 
			1、需要确定项目是否能取到 （po=4500157359 ，测试）
			
2、修改新UI详情列表背景




2021-01-22
本周工作：
1、贵金属汇率差CD计算(进行中)
	1-、目前使用料号+供应商来区别，计算可以实现。(已完成)
	2-、需要系统添加项目号来区分。(未开始)
2、修改新UI详情列表背景（已完成）
3、设备，磁材的cd某些数据怎么解决
	：类似于模具系统（询问SAP是否可以加）
下周计划
1、模具已上线SAP数据切换（东莞冲压、深圳模切）数据接入以及差异对比.
2、模具系统其他模块上线SAP时间确定。
3、贵金属，加上项目录入（询问SAP是否可以解决）
4、SRM是否可以给数据录入。（周一和余经理商量）
5、设备，磁材的cd某些数据怎么解决
	：类似于模具系统（询问SAP是否可以加）
6、物料降价过多，设备自动化。

7、
	1、基础数据，还是取现有报表的数据（ovr_salcomp的报表数据）
	2、线下数据，你这边提供结果数据？ （结果数据的模板是怎么样的，怎么和基础数据做合并呢？）


1、模具冲压确定
		1，包含在zmm044，要确定基准价是否存在？
2、磁材，订单单号，
		1、没有订单号的是否都在线下？  --> 没订单是线下，有订单但是日期不是当月。
3、赛尔康的差异。
4、马达和通信，
		
5、设备固定资产没验收不需要对？类型判断。

6、组装 ->  折扣率（发票金额）
		-> 啥时候移动到->SRM
		-> 杨甲香，阳贤数据确定
		-、库位区分组装
	
年后遗漏问题：
	1、贵金属汇率差 , 需添加字段（SAP不支持，SRM）--> 待确认：继续询问是否可以添加。 【b188、b298（项目）贵金属电镀】
	2、马达-> 模具系统的单价=0，tax_price有值。
	3、折扣率和余经理沟通是否可以添加至，SRM中取值。(待确认：sap不维护是否关闭?)
			-、ZMM097 原（ZMM034B）
			-、提供开发文档给到燕工
			
	5、林玉梅，组装1数cnc，但是月报是组装
	6、订单日期，为主。
	7、结构件
	8、线下数据种类
	4、库存地址是否可以判断组装数据。
	9、磁材抓制单日期。
		1-、制单日期和凭证日期一样，线下提供给我，每月汇总
		2-、不处理，等待入库后处理。
	10、FATP排时间表。
		cd：财务系统--下单标准成本，减去实际入库价格。=CD
	11、设备自动化 ->  + 结构件 + 赛尔康
	12、模具SAP的 基准价 是否都有数据（目前只包含（东莞冲压、深圳模切））。  
			【1、采购跟正常的单一样的 2、ZMM023能看收货  ZMM021能看采购订单 3、采购凭证类型Z10  科目分配类别H】
			-、东莞冲压导入基准价使用zmm015(材料的是在ZMM015)
			-、平湖模切那边的模具导入用的是zmm096代码  (总务的是在ZMM096)
			-、数据拉取的话，使用 ZMM098。
	13、5G+磁材，线下数据  。。。
	14、FATP确认表来源。（表使用是否完善）
			
	15、hive-to_phone 脚本，维度表，不是并行的
	16、赛尔康不更新，导致PA=10有差异。
	
	17、CNC & 组装 -2021 -01 的数据
				CNC:585-D160176  等物料，单价错误
				组装： 香港公司的数据 ，单价错误，未转换币别
			先修改phoenix的数据。 【后续完善数据】
				CNC：PA, +17百万  CD-27903866.073562  
				组装：PA +11百万 ，CD -2688630.311558
	18、导出remark字段要清空。

问题：
	1、CNC，陈雪梅，没添加此采购员，但是它的采购组=A03,CNC
	2、马达，领先科技没取到单价值，




2021-04-09
本周进度：
1、模具类CD：【已完成 100%】
	1、基准价取值+SAP接口调试完毕+SAP数据抽取（已完成）。
	2、逻辑添加（已完成）
2、料号升级&替代料、废料、汇率差 【已完成 100%】
	1、上传页面以及后端接口开发（已完成）
	2、后台逻辑添加（已完成）
3、品质问题或交期扣款（线下数据）、索赔订单【已完成 100%】
4、赛尔康CD相关基础表抽取以及逻辑添加【已完成 30%】
	1、相关基础表测试（已完成）
	2、正式数据抽取（进行中80%）
	3、逻辑添加+数据核对（进行中20%）

下周计划：
1、供应商包材协议回收
2、设备无料号CD


2021-04-16
本周进度：
1、赛尔康CD相关基础表抽取以及逻辑添加【已完成 30%】
	1、相关基础表测试（已完成）
	2、正式数据抽取（进行中80%）
	3、逻辑添加+数据核对（进行中20%）
2、赛尔康服务器开通专线
3、FATP时间表
4、设备赛尔康的逻辑添加。
5、供应商包材协议回收
6、设备无料号CD

下周计划：

2021-04-16
本周进度：
1、赛尔康月报1~4月更新差异 ，其他月报更新1月差异
2、线下数据“备品”接口开发（完成度80%）
	-、备品上传excel模板确认（已完成）
	-、接口开发（已完成）
	-、数据上传（未开始）
3、赛尔康BG数据差异，目前是系统切换导致数据差异，待更新数据比对，其他BG暂未发现具体差异原因。
下周计划：
1、其他BG差异原因核查原因，对比数据
2、ZMM045相关VMI对账数据接入。
3、“备品”，“包材回收” ，“降损”完善上传，接口开发。
4、货款打折需采购协助宣导使用ZMM097报表，填写相应折扣率，折扣金额。




本周进度：
1、模具类CD：（已完成 70%）
	1、基准价取值，SAP接口调试完毕（已完成）。
	2、SAP数据抽取+逻辑编写（进行中20%）
2、料号升级&替代料（无基准价参考）、废料（呆滞物料处理-线下数据） （已完成50%）
  1、上传页面以及后端接口开发（已完成90%）
  2、后台逻辑添加（进行中20%）
3、赛尔康CD相关基础表抽取（已完成30%）
	1、相关基础表测试（已完成）
	2、正式数据抽取+业务逻辑编写（进行中20%）
下周计划：
1、赛尔康相关基础表正式数据抽取+业务逻辑编写
2、模具类CD-抽取正式数据+业务逻辑完善。

本周进度：
1、模具类CD：（已完成 50%）
	1、基准价取值，SAP接口已开发完毕（已完成）。
2、料号升级&替代料（无基准价参考）、废料（呆滞物料处理-线下数据） （已完成40%）
	1、上传页面以及后端接口开发（已完成80%）
下周计划：
1、线下数据【料号升级&替代料（无基准价参考）、废料（呆滞物料处理-线下数据） 、品质问题或交期扣款】。
接口开发以及抽取数据。
2、模具类CD-调试接口以及抽取数据。

本周进度：
	1、模具系统(东莞冲压)已切换（已完成）
	2、整理12月月报差异。（已完成）
下周计划：
	1、模具系统(东莞冲压)基准价取值。
	2、组装与CNC数据重合数据区分规则确认以及组装折扣率计算逻辑优化。
	3、马达模具系统单价取值优化。
	

大家下午好，附件是数据平台2021第1、2季度计划安排（见《2021大数据平台1-2季度工作计划.xlsx》），请查收。
另有以下事项需要麻烦姚经理协助处理以及宣导：
1、附件《2021大数据平台1-2季度工作计划.xlsx》中，选项“线下CD线上化前是否需要手工录入大数据平台”需要完善。
2、数据平台新UI已发布正式，访问地址：https://bigdata.lingyiitech.com/ ,账号/密码：ad账号/ad密码
3、SOP操作手册，需要采购内部宣导。


本周工作：
1、SOP操作手册制作（已完成）
2、沟通确定线下CD数据实现方式（已完成）
下周计划
1、确定替代料&料号升级，SAP线上的替代状态信息是否可用
2、整理11月各BG差异率







2020-12-29 
1、计算基准价，应使用stock_in_audit_time, 不要使用date
-、 4500190399  SAP冲压的数据，存在单位和单价不匹配。 （取今年的数据时，修改为按照年月，正序区第一，【暂时未剔除，不知道如何剔除】。。）
		解决： 暂时可以修改为取当前第一个月的加权平均。 【单位异常的数据，正负抵消，可以取到正确的基准价。】
			或者 取今年数据不需要取最大的单价
CNC  
1、部分料号不算CD
2、料号基准价取不到的情况
3、添加 “钟颖娟”数据	（9月无需添加） 
(buyer = '钟颖娟' and purchase_group_code  in ('A03','104','A16','199'))
其他月份，不需要 “钟颖娟”的数据

/** finally
880-MCJ649-01-00	XCX01	0.376106	2020-01	1
681-BWZ605-15-02-041S	ZHCJ02	18.0871605	2020-01	1
880-MCJ649-01-00	XCX01	0.3761060	2020-02	1
15S-16N10502-2500	ZS14	0.3168029	2020-02	1
880-MCJ649-01-00	XCX01	0.376106	2020-03	1
15C-24H35002-0031	FS05	0.0235915	2020-03	1
880-MCJ649-01-00	XCX01	0.376106	2020-04	1
681-RLY681-A0-B-10	NF01	3.8826651	2020-04	1
880-MCK601-01-00	XCX01	156.89923	2020-05	1
581-I120001	SUZ0065	5.1428571	2020-06	1
880-MCJ649-01-00	XCX01	0.376106	2020-06	1
681-VVH672-01-0R-5S	OBD01	640.37462	2020-08	1
880-MCJ649-01-00	XCX01	0.376106	2020-08	1
681-RBN614-A0-0-11S	JXS02	3.830442	2020-09	1
681-BSG603-A0-0-8B	JH13	1.18	2020-09	1
681-BSG603-A0-0-8B	TG02	1.18	2020-09	1
15A-63N50004-0180	CX08	193.902744	2020-10	1
**/





组装：
1、 2020-09 
	!(buyer = '钟颖娟' and purchase_group_code  in ('A03','104','A16','199'))
其他月份，不需要 “钟颖娟”的数据
2、修正基准价
	-、9月存在基准价，  （判断 取到的基准价单位与当前单位是否一致，一致取，不一致不去）
	 * 190-HESMAG5M-0016  基准价单位与当前单位不一致
 * 190-EVT3NBRG-0477  对应的基准价都和当前单价一致
/**
15E-49N18603-0007	PS03	1.732006	2020-01	5
15E-49N18101-0000	PS03	0.997235	2020-02	5
15N-51N106014-0008-F	QD01	1.843076	2020-03	5
190-MFACGR00-1220	HWZX024	841.9787550	2020-04	5
15E-49N18603-0007	PS03	1.6726299	2020-05	5
15N-51N080010-0007-F	QD01	1.1043346	2020-06	5
190-EM9002NM-1300	SRBD02	1001.46072	2020-07	5
190-EVT3NBRG-0477	XF03	35.49642	2020-09	5
190-80625439-0000	FCD06	0.595044	2020-09	5
190-80625440-0000	FCD06	0.595044	2020-09	5
190-479225PR-0019	RS03	67.275575	2020-10	5
190-EVT3NBRG-0477	XF03	35.12996	2020-10	5
190-24870FNT-0018	FCD06	0.665044	2020-10	5	
190-80625439-0000	FCD06	0.595044	2020-10	5
190-HESMAG5M-0016	XF03	2.58926	2020-10	5
**/


new
15E-49N83001-0000	FH01	0.6228025	2020-01	5
15E-49N18101-0000	PS03	0.4138218	2020-02	5
15N-51N106014-0008-F	QD01	0.4909248	2020-03	5
15E-49N18603-0007	PS03	0.676007	2020-04	5
15N-51N080010-0007-F	QD01	0.3812343	2020-05	5
15N-51N106016-0008-F	QD01	0.3625264	2020-06	5
681-FYE631-A0-0-3S	ZR02	10.45	2020-07	5
585-F170281	DGZX215	3.335368	2020-08	5
15N-51N106015-0008-F	PIM01	0.83040354	2020-09	5
180-BC363263-0000	TY01	1.041231	2020-10	5


5G：
1、-、08.WL0400036  剔除   -、7.0 剔除。  2020-01
	-、08.WL0400037	剔除   -、7.0 剔除。 2020-02
3、 CD置为0？ 4~8   

模切：

/*
基准价无须调整：
190-21670003-0130	ZSWY04	692.30045	2020-01	3
110-NE8920B0-1040	NDFOS01	548.815893	2020-02	3
110-NT5603BW-0150	RD11	380.0437544	2020-03	3
110-NT5603BW-0150	RD12	380.0437544	2020-03	3
190-GORETPV8-0080	GR01	26160.796811	2020-04	3
190-XX032000-0150	MCP01	241.5350875	2020-05	3
110-NITTO93B-0500	RD02	2033.7974	2020-06	3
110-3M970150-0500	YSLC01	3285.8673215	2020-07	3
110-3M970150-0500	KYCF01	3285.8673215	2020-07	3
110-3M970150-0500	XXR01	3285.8673215	2020-07	3
110-3M970150-0500	ZS02	3285.8673215	2020-07	3
190-21670003-0130	ZSWY04	692.30045	2020-08	3
110-NT560202-0500	RD11	480.097211	2020-09	3
110-TS61345B-1240	DS05	3351.127893	2020-10	3
*/
金额：
130-P7413200-1250	SDK10	8000	3000000	2020-01	3
130-P1931500-0180	BZX01	360	825000	2020-02	3
110-AB550B00-0080	HG03	1440	685000	2020-03	3
110-TES67225-1250	DS05	12125	24250	2020-09	3
190-F0593SIV-0450	TS02	450	5400	2020-10	3


4月去掉“杨彩票”的数据
5月去掉"徐彦"的数据
6月去掉"季丽霞"的数据
7月去掉"吴志兰"的数据
8月去掉"季丽霞的数据


注塑:
680-WRS605-15-00-00	LY03	0.64016822	2020-01	15
680-WRS605-15-00-01	LY03	0.64016822	2020-01	15
190-LCPE4008U-0000	HG13	0.0992679	2020-02	15
190-PA410QKS-0000	JK08	0.122212	2020-03	15
190-LCPE4008U-0000	HG13	22.878169	2020-04	15
190-SB7A1A40-0000	YC16	0	2020-05	15
190-SLX2271T-0000	YC16	95.858407	2020-05	15
190-LCPE4008U-0000	HG13	7.53103	2020-06	15（quantity=-10000）
680-WRS605-15-00-00	HDH02	0.0181028	2020-07	15
190-LCPE4008U-0000	HG13	76.991953	2020-08	15
581-A190137	MG05	556.312124	2020-09	15
190-PA410QKS-0000	YC16	94.047926	2020-10	15
	
PA矫正： 
190-LCPE4008U-0000	HG13	5150000	2575000	2020-02	15
190-LCPE4008U-0000	HG13	10000	70000	2020-04	15
680-WRS605-15-00-00	HDH02	100000	1200000	2020-07
190-PA410QKS-0000	YC16	100	23000	2020-08	15
190-PA410QKS-0000	YC16	825	16750	2020-09	15
190-PA410QKS-0000	YC16	3000	20500	2020-10	15	
	
PA删除：
190-LCPE4008U-0000	HG13	13600000	2020-02	15 【删除】


无线充电：

矫正基价：
190-FT360W16-0000	RL04	105.23423	2020-01	16
140-P2490007-1280	KSM01	0	2020-04	16
190-VTRERM80-0000	VAC01	1129.9435028	2020-05	16
190-FS500014-0115	HD08	8.766153	2020-09	16
190-FT316T50-0000	RL04	175.201449	2020-10	16
PA剔除：
110-M1500BX3-0980	XL05	2020-02	16
190-FT360W16-0000	RL04	2020-04	16

PA矫正：
190-DFST12C0-0115	DS12	100000	315000	2020-05	16
190-DFST12C0-0115	DS12	70000	870000	2020-06	16
190-DFST12C0-0115	DS12	109600	657600	2020-07	16
110-RFA20050-1300	BZX01	3848	47000	2020-09	16

	

马达数据：
1、1月
	-、不包含模具系统数据
	-、少了  "150-N48H0000-0002",“江门江益磁材有限公司”的数据。
	
2、2月，不需要数据
3、3月，SAP剔除

150-X3008001-0000	XG03	2019/12/26	7400	4200	2020-01	17
893-F30020-2	CC03	0.056637	5.637	-34575	2020-03	17
585-F161313	SLK01	375	375	250	2020-04	17
	
4、5月剔除LY-0832-B013002-02，LY-LM2816-B010110
5、6月剔除
150-235SUS00-0000-T1
885-B50001-1
19-F51071-000
885-B60124-1

6、7月
20-F27127-000	41w
885-B60124-1	14.7w
20-F22112-000	11.15w
LY-LM2816-B020211	6.3w
LY-LMA4013-B020213-02	3.1w
LY-LMA4013-B020213	3.1w
886-F11107-1	2.4W
7、
-、8月剔除。
150-12881070-0000-T1
885-B60124-1
15S-16N12960-0006-T0

-、cd置为0，beckprice置为当前price

8、
-、9月 ，去掉“领”，
-、20-F22100-000	147787.6106
20-F11103-000	100884.9558
20-F10113-000	88000
20-F40094-000	20000
20-F27127-000	12500
	
	cd置为0
	
9、10月

885-B30014-1	12w
20-F22100-000	15w
20-F11103-000	5.5w
LY-LM2816-B020211-03	6w


cd:
150-SUS01EH0-0008	置为0
150-N48H0000-0002	置为0


	



	








3893 42347	-34610.6195
冲压：
1、合金不算CD,PA (585-F160740)  -> 9月
2、料号基准价取不到值
3、PA（10,11） 因为有内部交易数据（领胜城科技(江苏)有限公司，）
	-、不取内部交易 -> 1，2，3 ,4，5，6，9
	-、取内部交易  -> 7，8，10

/*
180-SBMVP924-0005	PH02	31.761908	2020-01	2
15S-16E07002-0082	PX05	0.1470356	2020-02	2
190-P1571000-0610	JH11	1220.9657	2020-03	2
170-A0822000-0020	JY04	33.04288505	2020-04	2
160-BPAT9326-0032	GB03	915.5238155	2020-05	2
190-P1180200-0610	JH11	1194.9993332	2020-06	2
880-OAK648-08-0S	XD04	39.96954365	2020-07	2
15S-01E01101-0012	TKE01	6.9412	2020-08	2
681-PLM608-A0-00-04	ZHCJ01	2.947576	2020-10	2
190-P4020004-0610	HY10	0.0159646	2020-09	2
190-P4020004-0610	ZJ08	0.0159646	2020-09	2
15S-01E00704-0077	GS04	0.119	2020-09	2
15S-01E00704-0088	GS04	0.119	2020-09	2
15S-01E00704-0090	GS04	0.119	2020-09	2
*/

9月		31777591-15000000-5587300-3637281-2019861-1489656-1943170-1284540-518745-1086130

-- 目前只矫正了9月的。

680-PPP902-02-0A-02	HH13	0.031858	2020-09	2
680-PPP902-02-0A-02	HM05	0.03469	2020-09	2
680-PPP896-03-00-02	HH13	0.043363	2020-09	2
680-PPP896-03-00-02	HM05	0.047434	2020-09	2
680-PPP707-10-0F-02	HH13	0.029204	2020-09	2
680-PPP707-10-0F-02	HM05	0.031681	2020-09	2
680-DDB838-05-00-05	HH13	0.047788	2020-09	2
680-DDB838-05-00-05	HM05	0.050442	2020-09	2
680-PPC623-14-00-02	HM05	0.040619	2020-09	2
680-PPC623-14-00-02	HH13	0.033675	2020-09	2
680-NWN610-01-00-01	ZZ04	0.099115	2020-09	2
680-PPC607-18-00-02	HH13	0.039823	2020-09	2
680-MTM585-02-00-0R	ZZ04	0.415929	2020-09	2
680-MTM585-02-00-0R	MX06	0.353982	2020-09	2



2020-03  少1083499.643
2020-04  少7210764.81
2020-05 少1509218
2020-06 少7168801
2020-07	少9431962
2020-10  少10186121



180-SBKLM340-0004	少28w   月报 （19年基价=7.5044），大数据（3.849138）,
15S-01E00704-00XX  少100w   月报 （19年基价=0.119），大数据（0.102566）,
190-P4020004-0610	少80w
585-F160740		少160W  （这部分不算CD）
15S-01H00501-0020	少150W 月报（9.89115） 大数据（5.681524）  ，取不到9.891115
15S-16E00707-0085	少30W  月报（0.1176） 大数据（0.10512）
180-ZDGBL735-0000  少20W    月报(1.63)  大数据（1.232646）  取不到1.63
15S-16E07002-00XX   少20W  月报(0.118)  大数据（0.103654）  取不到1.63


1、680-ZZZxxx-xx-xx-xx  大数据取不到  cd 160W   [供应商为内部公司，属于内部交易]
2、15S-01E00704-00XX  ,月报 （19年基价=0.119），大数据（0.102566）, 这个料号的基准价，我查了，没有基价0.119这个。

 hive -e "load data local inpath '/root/shell/hive/purchase_bi_shell/distcp/correct/cnc_correct2.txt'  into table dwmiddle.correct_price_cd" 
	
 hive -e "load data local inpath '/root/shell/hive/purchase_bi_shell/distcp/correct/chongya.txt'  into table dwmiddle.correct_price_cd" 
	
 hive -e "load data local inpath '/root/shell/hive/purchase_bi_shell/distcp/correct/zuzhuang.txt'  into table dwmiddle.correct_price_cd" 
	
	
	
	
1、结构件-包材协议（依据数量对账扣除。）
2、包材卖二手包材，低于新的指向， 2-> 1.5  

3、冲压，按照全年加权平均。
4、CNC依据模切的逻辑来。（入库最高的。） ，今年度去第一次的价格.


13284314.94

1、基准价，取最高的，取上年最后一个月的最高价
2、单位不统一的情况。（EAS+SAP）
3、此料号本月不算。因为再4月算了。  
	解决:按年度(计算全年)

测试：
10.0.24.105,10.0.24.106,10.0.24.107,10.0.24.110,10.0.24.111
UAT:
10.0.24.200,10.0.24.201,10.0.24.202,10.0.24.203,10.0.24.204,10.0.24.205,

正式：


测试：10.0.40.116
uat:http://qa.bigdata.lingyiitech.com:18060/login
正式：http://bigdata.lingyiitech.com:8060/login?redirect=%2Fhome


前端UI待更新部分：
1、柱状图颜色.
2、图形的列表 ,1,2,3  背景颜色去掉荧光绿,荧光粉.
3、提供权限,发给采购
4、提供个  新旧UI的差异文档，操作文档。
5、厂区个数-> 改为统计实际小厂个数

需求：
1、一键导出，供应商的对账
2、提供权限,发给采购
3、提供个  新旧UI的差异文档，操作文档。


	本周进度
	1、预制发票折扣抽取完成，数据已核验（已完成）
	2、新UI样式调整（已完成）
	3、优化了冲压（部分内部交易数据需要计算PA和CD）（已完成）
	4、模切数据核对整理（进行中80%）
	下周计划：
	1、新UI上线正式
	2、模切数据核对整理

/**
遗漏2
**/

1、样式
2020-12-05
2、上传周期
3、显示百万元。 （遗漏留问题）
4、区分线下CD，直降CD。
5、存在基准价和单价有明显差异的，做判断？


/**
示例

物料585-D160159 ->单位有问题：
matnr = '585-D160159' ,同一物料，存在单位和单价错误的情况。

订单号=ebeln = '4500415089'
订单单位=meins = 'G'
计量单位=bprme = 'G'
订单数量=menge = '7500000'
净价=netpr= 61.06
净价批次=peinh=10000
单价=price = netpr/peinh = 0.006106 
币别=waers = CNY

订单号=ebeln = '4500405322'
订单单位=meins = 'G'
计量单位=bprme = 'G'
订单数量=menge = '7500000'
净价=netpr= 69000.00
净价批次=peinh=11300
单价=price = netpr/peinh = 6.10619469
币别=waers = CNY



2021-02-24 01:03:38	888	4500415089	00020			2021-02-23	山梨醇  纯度35%	585-D160159	585-D160159	1040	1042	AA06	SXA2012241	1003	5300301818		0.000	7500000.000	G	G	1	1	1	1	61.06	10000	45795.00	45795.00	0000-00-00	0	A8				X		0	0	0	0	0.0		0.0					X		0					X		X	X				00000	0000-00-00	0.000	0	0			G		0.00	0.00	0.000	2021-02-23	F	45795.00	X					SAP	7	0.000	G				0000000000	0000															0.000	0.000		DDP	东莞				0000000000		0.00		00000	0000-00-00									000000000000000000		0000-00-00	0000-00-00	00:00:00	0001			00000	0.000							X	0		00000				0010154632	00020	Z01			0.00	0.00	0.00	0.00	0.00	0.00		0.000	0.000				ZNLC									0000-00-00	0000-00-00		45795.00			0000-00-00													10001604	UTC+8			1042			2						000			00	000						000000									0.000	0			00000		0.00		0.00	0.00	0000-00-00						0000000000							东莞				0.00		1		00000								0.00	0.00	0000-00-00	0000-00-00	0.00	0000000000							00														0000	0000000000	0000-00-00		0000-00-00	0.000		0000-00-00		0000-00-00						000000			00		000000		0000-00-00							00000000			000000						0000-00-00		00000		00000	00000				0.000					000				000		000	00000000			00000						2021-02-23	2021-04-21


**/






1、月度采购额 -> 月报数据一览 
2、累计查询的时候，查询所有月份的数据（月报周期不全的也要算上）
3、修改左上角的菜单按钮，往下放置，不应是切换BG按钮 "<"

包材回收 ->  刘宣玲 10017897
磁材线下  -> 郑期尹	10046115
通信事业部线下 ->  杜勇 10030485

后台上传Excel地址：http://10.0.40.116:1111/login
账号/密码：ad账号/ad密码
模块：Excel模块管理->通信事业部线下

1、SRM端口，
2、

供应商对账：
	一、待完善分区表
	sap.ods_sap_bapi_company_getlist
	sap.ods_sap_zfmm_001_ztmm_t001w_ecc
	
PA差异原因：
	目前区分规则：“采购组”+“BG”+“采购员”（依次递进）
	1、部分数据“采购组”填写有误或无采购组
	2、部分依据依据“BG”+“采购员”区分存在误差（采购员存在调岗，采购组信息错误，BG字段信息错误等原因）
	3、采购月报包含非线上系统数据。
	
CD差异原因：
	1、
	
健健问题：
1、jishou接口需要加 “采购组”+“订单号”
2、jishou接口的 “本次收货数量” + “本次收货金额” 负数异常修复
3、设备自动化，汇率和净价的关系（针对JPY）
									
									
									
										
PA和CD差异增高的原因（目前按照采购组来区分）：	
1.部分订单采购组选择错误，采购员选择了已停用的采购组。        
2.其他原因待比对后确认。						
								
									
						
1.以“采购组”为区分规则抓取数据进行比对，确认差异情况。（已完成）
2.大数据平台UI及各模块细节修改。 （已完成）
	1-、导出excel文件修改。
	2-、《供应商基础交易信息》的导出按钮文字提示修改。
	3-、系统字体整体调亮。
	4-、合并《供应商金额排名》和《供应商基础交易信息》，空余模具留白
	5-、《供应商对账模块》去掉采购员相关图表和详情列表
3.供应商对账达成率：对账达成率准确性优化，设备自动化固定资产剔除规则确认。（已完成）
			

			
下周计划:		
1、CNC、组装、冲压、模切PA和CD逐条比对。
2、确定SAP寄售数据采购组信息。（因SAP的寄售数据目前系统报表逻辑，不含订单以及采购组信息，需与SAP顾问沟通梳理获取）
	
	
本周进度：
	1、CD对比，CD差异 ，8% -> 5%,  其他BG无更新。
	2、梳理线下数据解决方式
下周计划：
	1、CD折扣率表抽取。
	2、新UI上线正式
	3、以采购目前CD规则，统计计算CD差异。

本周进度：	
	一、CD对比进度：
		1、CNC对比进度：	
			CD差异： 44% -> 18%  (只核对直降数据)
				差异原因：
					1、单价、汇率取值方式不一致（月报单价、汇率采用入库日期对应汇率值，大数据单价、汇率采用订单日期对应值）
					2、单价取值，需在汇率基础上，加上关税（SAP需抽取新关税基础表）
					3、部分数据基准价取值异常
		2、组装、冲压对比进度：
				当前对比未完成。（完成60%）
		3、模切对比进度：
			CD差异： 36% -> 26%  
				差异原因：
					1、差异对比，月报直降CD与其他类型CD混合在一起，需逐条对比完毕后剔除直降数据

	二、SAP寄售数据采购组信息确认：
		1、SAP接口已开发完毕
		2、数据已抽取
	
下周计划：
	1、SAP寄售数据依据“采购组”区分BG逻辑添加。
	2、按照plan计划PA和CD逐条比对。	
	3、抽取SAP关税基础表以及修改SAP单价和汇率取值逻辑。
					
					
					
	

本周进度：	
	一、CD对比进度：
		1、CNC对比进度：
			PA差异： 1% -> 1%
			CD差异： 18% -> 17%
		2、组装对比进度
			PA差异：0.5% -> 0.7%
			CD差异：3% -> 3%
		3、冲压对比进度：
			PA差异：0.8% -> 0.5%
			CD差异： 20% -> 10%  
		3、模切对比进度：
			PA差异：1.5% -> 1.2%
			CD差异：26% -> 30%
		4、注塑对比进度：
			PA差异：12% -> 8%
			CD差异：33% -> 15%			
		5、无线充电对比进度：
			PA差异：18% -> 12%
			CD差异：20% -> 25%							
		6、马达对比进度：
			PA差异：5% -> 0% 
			CD差异：0% -> 0%							
		7、东莞结构件对比进度：（进行中70%）
				对比未完成，暂无统计更新						
		8、深圳结构件对比进度：
			PA差异：2.9% -> 2%
			CD差异：33.3% -> 27%							
		9、磁材对比进度：（进行中30%）
				对比未完成，暂无统计更新
		10、通信事业部对比进度：（进行中70%）
				对比未完成，暂无统计更新	
			差异原因：	
				1、存在料号升级，取不到对应的基准价。
				2、单价取值未关联入库汇率
				3、统计中包含有其他rebat数据
	二、
		1、寄售数据根据采购组添加（已完成）
		2、关税基础表抽取（进行中30%）
下周计划：
	1、按照plan计划PA和CD逐条比对。	
	2、抽取SAP供货价格基础表（解决单价滞后问题）。					
	3、料号升级问题处理

CD差异原因
-、系统取错/取不到值
	1、模具系统无法计算基准价
	2、料号升级
	3、线下类型CD无法计算
	4、部分料号，采购不算入当月月报
-、规则问题：
	1、部分物料的规则与既定规则不一致
	2、用户手工月报基准价取值取错
	



					
					
本周进度：	
	一、CD对比进度：
		1、CNC对比进度：
			PA差异：1% -> 0.7%
			CD差异： 17% -> 12%
		2、组装对比进度
			PA差异：0.5% -> 0.7%
			CD差异：3% -> 3%
		3、冲压对比进度：
			PA差异：0.8% -> 0.5%
			CD差异： 20% -> 15%  
		3、模切对比进度：
			PA差异：1.2% -> 1.2%
			CD差异：30% -> 20%
			差异原因：	
				1、汇率取值有误
				2、对比数据包含有非直降数据
		4、注塑对比进度：
			PA差异：8% -> 1%
			CD差异：15% -> 5%	
			差异原因：	
				1、存在基准价取值异常的数据，已剔除
				2、对比剔除部分非注塑BG数据。
				3、存在基准价取值规则不一致。
		5、无线充电对比进度：
			PA差异：12% -> 5.5%
			CD差异：25% -> 15%		
			差异原因：	
				1、存在基准价取值规则不一致。
				2、存在采购组信息填写错误。
		6、马达对比进度：
			PA差异：0% -> 0% 
			CD差异：0% -> 0%	
		7、东莞结构件对比进度：
			PA差异：3.43% -> 4% 
			CD差异：36.8% -> 20%	
			差异原因：	
				1、存在基准价取值规则不一致。
		8、深圳结构件对比进度：
			PA差异：2% -> 2%
			CD差异：27% -> 15%	
			差异原因：	
				1、存在基准价取值规则不一致。	
		9、磁材对比进度：
			PA差异：3% -> 2%
			CD差异：30% -> 15%	
			差异原因：	
				1、数据汇率取值差异
				2、对比数据包含有非直降数据	
		10、通信事业部对比进度：
			PA差异：7% -> 5%
			CD差异：50% -> 10%	
			差异原因：	
				1、非BOM数据，为线下月报数据
				2、存在物料不计算CD情况（暂未告知原因）			
		11、赛尔康对比进度：
			PA差异：1.8% -> 0.2%
			CD差异：15% -> 0.5%	(印度接口还未优化完毕，预计下周优化完)
			差异原因：
				 1.AC0322SAM收货单价有误. 
				 2.8开头巴西本地向中国购买的物料收货单价有差异 
				 3.LM1157R跨月调账, 有汇率差异. 
				 
			差异原因：	
				1、存在料号升级，取不到对应的基准价。
				2、统计中包含有其他rebat数据
				3、存在单价滞后情况
				4、部分料号基准价取值不一致（存在依据料号，以及料号+供应商）
				5、通信自动化，非bom料使用用的手工台账管控
				6、部分数据采购组填写错误，需据其他条件区分。
	二、
		1、关税基础表抽取（已完成）
		2、关联供货价格的有效日期获取单价（进行中60%）
下周计划：
	1、按照plan计划PA和CD逐条比对。	
	2、抽取预制发票获取折扣率，计算CD			
	3、统计10月的PA和CD对比
	
	
本周进度：	
	1、CD对比进度：	
			1、东莞结构件、深圳结构件， PA： 4% -1%  CD:12% ~7%
				-、剔除线下CD数据（同一个料号含素材单价，导致系统取不到对应的基准价）
			    -、优化部分单位异常数据
			2、通信自动化， CD:0% ~8%
					差异原因：对比发现，剔除数据中一部分系统可以取到，重新拉取后，CD存在差异。
	2、抽取预制发票获取折扣率（延迟：因SAP此报表需要下线，SAP顾问反馈需推迟一周开发此接口）
	3、10月PA和CD对比已更新（已添加设备自动化对比）
	
	
1、设备自动化   ，一般议价


系统可以计算的CD类型：
	1、有历史料号的物料
	2、赠品（系统可体现）
	3、系统存在rebate的折扣率（依据预制发票折扣率计算）
系统不可计算的CD类型：
	1、返点
	2、客谈价差
	3、替代料
	4、赠品（系统不可体现）
	5、线下数据


1、模具，替代，返点扣款。

	
	
1.规则差异
	-、见《采购各BG-基准价取数规则-v3.0.xlsx》
2.无法取到的CD类型
	-、模具系统CD
	-、料号升级物料，暂无法取到
	-、通信自动化线下数据
3.IT开发端支援进度
	-、A018基础表 -> 供货价格的有效单价  （已提交开发申请单）
	-、ZTMM011基础表 -> 关税表  （已提交开发申请单）
	-、ZMM034B报表->  发票预制-取折扣率 （已提交开发申请单）
	整体进度：60%（1,2两项数据已获取，3已提交申请，开发完成时间未定）
4.是否能如期完成？
	-、可如期优化完成，单价滞后，汇率，统一规则后的CD计算。
	-、CD差异1%按照目前的情况达不到（差异率需看优化完后实际CD差异）。


- 、设备自动化，
	1、数据来源： S4
	2、BG区分规则：依据采购组【A14=设备自动化】








	
PA不准确原因：
1.以采购员+工厂的维度提取各BG数据，因采购员变动导致的数据差异
2.抓取数据存在单位转换异常情况（系统数据单位错误），例如：g--kg，m--m2，导致汇总数据差异
3.手工月报中有部分手工调整部分，例：将线下数据导入系统，剔除某采购员或某类型物料数据，导致对比差异
4.无线充电的基础数据无法通过采购员区分，存在与模切交叉的数据
5.系统存在币别异常，导致的差异

5.马达手工月报包含内部交易，但其他BG月报规则定为剔除内部交易
									
dwservice.dws_cd_by_muju_supplier_recon_rate_detail_month_update  -> DW.DWS_CD_BY_MUJU_SUPPLIER_RECON_RATE_DETAIL_MONTH 
dwservice.dws_cd_by_muju_recon_rate_month_update  -> DW.DWS_CD_BY_MUJU_RECON_RATE_MONTH
									
1、更新了模切9月的PA、CD对比数据
2、增加了数据统计币别以及计数单位。
										
	
你好，因内部开发时间协调出现问题，导致任务delay，预计今天可以开发完成。

	针对此问题，后续开发时间评估、任务开发安排
	
									
9月份PA和CD数据已经更新，请查收。										
模切BG9月数据，暂未提供（采购反馈今天下午给到基础数据）。赛尔康BG9月数据暂未统计完毕。

								
任务进度：
	1、业务梳理/数据抽取 （已完成）
	2、报表开发/数据核对 (完成20%)
	基础表开发，整体完成进度40%.
风险点：
	1、SAP基础接口调试，发现部分表不满足增量更新，已与SAP协作调试修改完毕（2020/09/18）。
							
							
FBL1N是事务码（由多个表构成），数据量很大。
目前有两个方案，
1、直接传参数：供应商，公司代码，项目类型+日期（末清项目-关键日期，已清项目-关键日期，全部项目-过账日期），类型（普通项目，特别总账项目，注释项目，预制项目，客户项目），
2、抽取基础表，转换为FBL1N事务码。
目前可以选择1作为方案，方案2 表多，逻辑复杂（而且是sap自带逻辑，无须人员干涉），不推荐。
针对1中的，选择参数，'
							
							
大家晚上好，最新的数据差异对比已更新。
1、更新了8月份的PA对比（依据BG+采购员）
2、结构件的采购8月PA目前还没拿到，预计明天可以更新。
3、5G的数据8月之后存在，线下手工月报数据，对比时已剔除
5、依据库位+对照表的PA更新目前已在开发中（线下对照表对比），根据开发进度，预计下周可以更新一版依据新规则的PA。

/root/shell/hive/purchase_bi_shell/step_shell/step_generate_jituan_detail.sh
/root/shell/hive/purchase_bi_shell/step_shell/step_combine_muju_sap.sh
/root/shell/hive/purchase_bi_shell/step_shell/step_muju_by_buyer.sh

				-------------  脚本 执行 步骤-------------  			
/**
采购员区分：
	/root/shell/hive/purchase_bi_shell/step_shell/combin_eas_bg_by_buyer_5.sh
	/root/shell/hive/purchase_bi_shell/step_shell/step_combine_muju_sap.sh
	/root/shell/hive/purchase_bi_shell/step_shell/step_muju_by_buyer.sh

 * 脚本 执行 顺序
 *  1、step_start1.sh   (eas库数据，基础报表生成，主要是(模切，CNC，组装，冲压BG))
			nohup sh step_start1.sh 2020-11-18 >> step_start1.log 2>&1 &
	2、step_start2.sh  （包括脚本  step_generate_supply_info.sh） step_start2.sh 【nohup sh step_start2.sh 2020-11-18 >> step_start2.log 2>&1 &】
			--->>>> 【 备注： 2021-02-26实施】
				1、eas的数据暂时不更新，代码从step_start3.sh开始。
					修改脚本：step_combine_muju_sap.sh  ->   dwmiddle.dwb_purchase_report表数据就写死使用2021-01-27分区的数据。
			>>>>--- 
		
		
		
		3、step_start3.sh   (包括脚本  step_get_report3.sh .提前区分马达BG,因马达无须剔除内部交易  . 备份CD表） 
				step_start3.sh 【nohup sh step_start3.sh 2021-02-24  true >> step_start3.log 2>&1 &】
				= (矫正eas的数据，以及合并模具，sap,yifei，磁材等，并计算不同维度的CD 。)
	4、step_start4.sh  【nohup sh step_start4.sh 2021-02-24 >> step_start4.log 2>&1 &】	
						备注：【2021-01-28 暂未完善，先使用test.sh】
			
						
		4.1、生成无线充电，模组	
				新版本 -->  ：
					1-、generate_molding.sh 
					2-、generate_charging.sh
				老版本 -->  ：
					generate_molding_charging_motor.sh 	
					
		4.2、剔除模切数据。（'李婷'后续要加上此采购员数据）
				nohup sh remove_moqie_buyer.sh  2020-03-25 >> remove_moqie_buyer.log 2>&1 & 
		4.3、generate_cd_by_datasources_v3.sh （执行生成CD的脚本(根据基准价生成CD)） 
				--  nohup sh generate_cd_by_datasources_v3.sh  2021-07-21 >> generate_cd_by_datasources_v3.log 2>&1 &
				-- generate_cd_by_datasources_v3.sh 
		4.4、（生成磁材，结构件，赛尔康，5G数据。）
				generate_5G.sh， [ nohup sh generate_5G.sh 2021-06-21 >> generate_5G.log 2>&1 &]
				generate_huadongzidonghua.sh （生成数据以及cd）  [nohup sh generate_huadongzidonghua.sh  2021-06-21 >> generate_huadongzidonghua.log 2>&1 &]
				generate_cicai_report.sh   [nohup sh generate_cicai_report.sh  2021-11-12>> generate_cicai_report.log 2>&1 &]
				generate_jiegoujian_report.sh   【nohup sh generate_jiegoujian_report.sh  2021-11-12 >> generate_jiegoujian_report.log 2>&1 &】
				generate_salcomp.sh
				 【脚本不同时间点， 统一分区不要覆盖，会导致待更新字段错乱。】
		
		4.5、优化BG字段生成，以及  入库审核日期。  generate_format_cd.sh	
					/**
						---- 整理步骤  -------
					1、step_generate_sap_pkid.sh 生成pkid，(固定写入指定分区2021-01-28，后续查不需要加分区)
					2、PKID数据生成集团SAP数据，写入动态分区 l_date
					3、合并EAS+模具+SAP , 模具采用动态分区(l_date)，EAS使用固定分区数据（2021-01-27），SAP采用动态分区(l_date)

					4、generate_cd_by_datasources_v2.sh 生成CD、 
					5、各BG数据校验，   
						-、EAS的数据， 保留以前的数据。【 Begin-&&&】 （cnc一些物料不计算基准价，）
						
						-、组装  + 折扣的CD，
						-、5G + 设备自动化
					6、format所有CD表数据。
					
					备注：1-、044，044_jishou，根据公司，工厂，抽取，可能会遗漏，建议查询工厂表，遍历抽取
						  2-、FATP的area和公司， 华南映射。  
						  3-、FATP物料降价，  默认物料选择。
				**/
				
				
				/*
						2021-05-24 修正逻辑
					
					1、generate_cd_by_datasources_v2.sh  脚本，更新添加模具数据
					2、模具系统的区分规则，优先根据BG区分 
						-、bg=设备， 划分为设备自动化 ，dim=14
							模切	31562	3
							东莞结构件	20096   7
							CNC	8900	1
							冲压	7455	2
							无线模组	1164	16
							组装	787	5
								19
							设备	7	4
							深圳结构件	1	6
							总务	1	
								8592
						
						when "冲压" then "2"
						when "模切" then "3"
						when "CNC" then "1"
						when "组装" then "5"
						when "设备" then "14"
						when "无线模组" then "16"
						when "深圳结构件" then "6"
						when "东莞结构件" then "7"
						else "unknown" end as dim
						
							case bg
							 when "无线模组" then "无线充电"
							 when "设备" then "设备自动化"
							else bg end as bg
						
					3、其他BG先根据采购组区分，然后根据采购员区分
						（step_get_fatp_by_code.sh 注释，放在与其他BG一起判断）
					4、area统一处理。
						-、注释掉，模具系统area处理，
							case company_name
								when "领益智造科技（东莞）有限公司" then "华南"
								when "领胜电子科技(深圳)有限公司" then "华南"
								when "东莞领益精密制造科技有限公司" then "华南"
								when "东莞市欧比迪精密五金有限公司" then "华南"
								when "广东东方亮彩精密技术有限公司" then "华南"
								when "东莞领杰金属精密制造科技有限公司" then "华南"
								when "深圳市领略数控设备有限公司" then "华南"
								when "东莞领汇精密制造科技有限公司" then "华南"
								when "东莞盛翔精密金属有限公司" then "华南"
								when "苏州领镒精密技术有限公司" then "华东"
								when "苏州领裕电子科技有限公司" then "华东"
								when "领胜科技（苏州）有限公司" then "华东"
								when "领胜城科技（江苏）有限公司" then "华东"
								when "领先科技（江苏）有限公司" then "华东"
								when "领镒精密五金制造（无锡）有限公司" then "华东"
								when "领先科技(东台)有限公司" then "华东"
								when "成都领益科技有限公司" then "华西"
								when "郑州领胜科技有限公司" then "华中"
							else "" end as area
						-、(28,16) 改为 (28,6)
						-、A05 ,对应结构件，dim = '8'
						-、step_get_report3.sh  判断马达的脚本，添加从dim  in ('unknown','UNKNOWN')
							【dwmiddle.dwb_purchase_standard_price -> dwmiddle.dwb_purchase_report_cd 】
							
						-、计算CD的逻辑，datasouce_v2 , 去掉 根据采购员区分的逻辑   【√】
									
						-、取基准价的时候，不要根据date，year字段匹配。 根据stock_in_audit_time ,取前两个字段。  来匹配。  【√】
								示例： dim = 1 ，material='681-CBV602-B0-00-8' ,    （验证正确。）
							-、冲压规则， 目前采用规则：  上年度取全年加权（采购定义的又是上年度12月）， 本年度取第一次。 
							
						-、 物料 = 585-D160307  ，基准价=27.87610621，原单价=1.385575   
								585-D160307  585-D160176  供应商=CML02 “惠州超美力润滑油有限公司”   【2021-01】
								681-FYE631-A0-0-12
						-、汇率差物料 ：
							1-、汇率差的物料，数据不全，导致一部分汇率差的物料（B188,B298）计算了CD，且系统中取到的单价=0，导致CD差异
							2-、585-D160176，585-D160095 等这一批物料的数据（基准价与单价差额较大），根据规则，取到的基准价 = 数量基数大，导致CD差异，po=4500350436，4500309746 等
							3-、其他Rebate和对账rebate都有啥？
							
						*** 逻辑修改后当前问题 ***
						1-、CNC、组装数据差异
						2-、模切没问题
						3-、东莞结构件、深圳结构件， SAP+模具都有数据， 目前采购反馈不属于他们数据
						4-、FATP的赛尔康和单独设备数据 ，需要修改BG区分规则（因为数据被采购组优先判断为 “设备自动化了”，需要优化）
						
						
						待完成：
							1-、端口发布正式
							2-、超美力，根据物料分类。
						
				*/
    5.00 、ceshi-begin2222脚本
			Begin-&&&&&&
	5.1、生成对应的维度表数据。（step_generate_cd_bi.sh）
		-- nohup sh step_generate_cd_bi.sh 2021-02-24 >> step_generate_cd_bi.log 2>&1 &
		-- nohup sh step_generate_cd_bi.sh 2021-04-21 >> step_generate_cd_bi.log 2>&1 &
		-- nohup sh step_generate_cd_bi.sh 2021-04-27 >> step_generate_cd_bi.log 2>&1 &
		nohup sh step_generate_cd_bi.sh 2021-05-18 >> step_generate_cd_bi.log 2>&1 &
		-- nohup sh step_generate_cd_bi.sh 2021-06-21 >> step_generate_cd_bi.log 2>&1 &
		nohup sh step_generate_cd_bi.sh 2021-11-12 >> step_generate_cd_bi.log 2>&1 &
			【
				echo "--开始执行 cd_by_ammount.sh 脚本"
				sh /root/shell/hive/purchase_bi_shell/step_shell/cd_by_ammount.sh $l_date  >> /root/shell/hive/purchase_bi_shell/step_shell/cd_by_ammount.log  2>&1 &&
				echo "-cd_by_ammount.sh 脚本执行完毕-"

				echo "--开始执行 cd_by_material_cut.sh 脚本"
				 sh /root/shell/hive/purchase_bi_shell/step_shell/cd_by_material_cut.sh $l_date  >> /root/shell/hive/purchase_bi_shell/step_shell/cd_by_material_cut.log 2>&1 &&
				echo "-cd_by_material_cut.sh 脚本执行完毕-"

				echo "--开始执行 cd_by_material_type.sh 脚本"
				sh /root/shell/hive/purchase_bi_shell/step_shell/cd_by_material_type.sh $l_date  >> /root/shell/hive/purchase_bi_shell/step_shell/cd_by_material_type.log  2>&1 &&
				echo "-cd_by_material_type.sh 脚本执行完毕-"

				echo "--开始执行 cd_by_supplier.sh 脚本"
				 sh /root/shell/hive/purchase_bi_shell/step_shell/cd_by_supplier.sh $l_date  >> /root/shell/hive/purchase_bi_shell/step_shell/cd_by_supplier.log 2>&1 &&
				echo "-cd_by_supplier.sh 脚本执行完毕-"

				echo "--开始执行 cd_by_area.sh 脚本"
				 sh /root/shell/hive/purchase_bi_shell/step_shell/cd_by_area.sh $l_date  >> /root/shell/hive/purchase_bi_shell/step_shell/cd_by_area.log 2>&1 &&
				echo "-cd_by_area.sh 脚本执行完毕-"

				echo "--开始执行 cd_by_material_name.sh 脚本"
				sh /root/shell/hive/purchase_bi_shell/step_shell/cd_by_material_name.sh $l_date  >> /root/shell/hive/purchase_bi_shell/step_shell/cd_by_material_name.log  2>&1 &&
				echo "-cd_by_material_name.sh 脚本执行完毕-"
				】
  	5、生成update数据（维度表update 以及 eas【生成的update中，appoint等其他字段置为''】，磁材。结构件，赛尔康的detail的update）
				【:%s/table=/table_name=/g 】  【| sed -e '/backup/d' 】 
			
			
				【hive -e "set hive.cli.print.header=flase
 show partitions dwmiddle.dwb_purchase_report_cd" | sed -e '/backup/d' |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'】
			
			-- ： 备注 eas的update已启用，采用删除更新方式
				-- 1、nohup sh generate_eas_detail_update.sh 2020-11-18 2020-10-31 >> generate_eas_detail_update.log 2>&1 &  
				【
							nohup sh generate_eas_detail_update.sh 2020-11-18 2020-10-30 >> generate_eas_detail_update.log 2>&1 &  
							nohup sh generate_eas_detail_update_sap_all.sh  2020-12-27 2020-11-18>> generate_eas_detail_update_sap_all.log 2>&1 &  
				 1-、本次需手动执行：2020-10-31 的最近日期 2020-11-03 ，因为后续又重新跑了数据
				 2-、unit，unit_number,price_unit后续的数据需要参考这个来
				 3-、CD新的规则可能计算的都不一样。 
					解决： 可以根据生成detail表的执行日期，查询对应的当天的导入最大日期，作为此前day分区下的最近日期。
				 】
				  
				1-、获取old_date
				【hive -e "set hive.cli.print.header=flase
 show partitions dwmiddle.dwb_purchase_report_cd" | sed -e '/backup/d' |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'】
				2-、获取sap报表old_date下的最近日期
				【select max(reserved2) from dwdetail.dwd_jituan_cd_detail where day = '${old_date}' and origin in ('sap.ods_sap_zfmm_044')】
				【select max(reserved2) from dwdetail.dwd_jituan_cd_detail where day = '2020-10-03' and origin in ('sap.ods_sap_zfmm_044_jishou')】
				
				
			2、-- nohup sh generate_zidonghua_detail_update.sh 2020-12-27 2020-11-18 >> generate_zidonghua_detail_update.log 2>&1 &
			--  nohup sh generate_zidonghua_detail_update.sh 2021-06-21 2021-05-18 >> generate_zidonghua_detail_update.log 2>&1 &
			  nohup sh generate_zidonghua_detail_update.sh 2021-11-12 2021-05-18 >> generate_zidonghua_detail_update.log 2>&1 &
				1-、获取old_date
				【hive -e "set hive.cli.print.header=flase
 show partitions dwdetail.dwd_huadongzidonghua_cd_detail" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'】
				2-、获取sap报表old_date下的最近日期
				【select max(reserved2) from dwdetail.dwd_huadongzidonghua_cd_detail where day='2020-10-03' and origin in ('sap.ods_sap_zfmm_048')】
				【select max(reserved2) from dwdetail.dwd_huadongzidonghua_cd_detail where day='2020-10-03' and origin in ('sap.ods_sap_zfmm_048_ecc')】
				
			3、-- nohup sh generate_cicai_detail_update.sh 2021-02-24 2021-01-27   >> generate_cicai_detail_update.log 2>&1 &
			-- nohup sh generate_cicai_detail_update.sh 2021-06-21 2021-05-18    >> generate_cicai_detail_update.log 2>&1 &
			nohup sh generate_cicai_detail_update.sh 2021-11-12 2021-05-18    >> generate_cicai_detail_update.log 2>&1 &
				1-、获取old_date
				【hive -e "set hive.cli.print.header=flase
 show partitions dwbase.dwb_sap_cicai_by_cd" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'】
				2-、获取sap报表old_date下的最近日期
				【select max(update_day) from dwbase.dwb_sap_cicai_by_cd where day='2020-10-03' and origin in ('sap.ods_sap_zfmm_044')】
				【select max(update_day) from dwbase.dwb_sap_cicai_by_cd where day='2020-10-03' and origin in ('sap.ods_sap_zmmr008_ecc')】
				3-、新增线下数据写入，后续更新待优化。  update_day =2021-04-27   !!!!!!!!!!!!!!!!!!!
				
			4、-- nohup sh generate_jiegoujian_detail_update.sh 2021-02-24 2021-01-27 >> generate_jiegoujian_detail_update.log 2>&1 &
			-- nohup sh generate_jiegoujian_detail_update.sh 2021-06-21 2021-05-18 >> generate_jiegoujian_detail_update.log 2>&1 &
			nohup sh generate_jiegoujian_detail_update.sh 2021-11-12 2021-05-18 >> generate_jiegoujian_detail_update.log 2>&1 &
				1-、获取old_date
				【hive -e "set hive.cli.print.header=flase
 show partitions dwbase.dwb_sap_jiegoujian_by_cd" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'】
				2-、获取sap报表old_date下的最近日期
				【select max(update_day) from dwbase.dwb_sap_jiegoujian_by_cd  where day='2020-10-03'】
			

			5、nohup sh generate_salcomp_detail_update.sh  2020-11-18 2020-10-31 >> generate_salcomp_detail_update.log 2>&1 &
				1-、获取old_date
				【hive -e "set hive.cli.print.header=flase
 show partitions dwdetail.dwd_salcomp_cd_detail" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'】
				2-、获取sap报表old_date下的最近日期
				【select max(reserved2) from dwdetail.dwd_salcomp_cd_detail where day='2020-10-31'】
					
					最新逻辑 : 
					--、最新赛尔康的数据，需要删除所有。
						-、完善2021的1月数据至 deatil表。【C:\Users\wang.ying.nan\.dbeaver4\General\Scripts  】
						-、写入other generate_salcomp-backup.sh
						-、删除phoenix所有， 使用generate_salcomp_detail_update_bakup.sh
			
			
			上述脚本合并： nohup sh step_detail_dim_update.sh 2021-06-21 2021-05-18>> step_detail_dim_update.log 2>&1 &
			同步脚本； nohup sh ceshi_to_zhengshi_report.sh 2021-05-18 2021-05-18  >> ceshi_to_zhengshi_report.log 2>&1 &
				【校验同步是否正常  /root/shell/hive/distcp/detail_distcp.sh  
					执行 ： nohup sh detail_distcp.sh  >> detail_distcp.log 2>&1 &
					】
				sh /root/shell/hive/purchase_bi_shell/step_shell/generate_dimension_update.sh $l_date $old_date >> /root/shell/hive/purchase_bi_shell/step_shellgenerate_dimension_update.log 2>&1 &&
			6、nohup sh generate_dimension_update.sh  2021-01-27 2020-12-27 >> generate_dimension_update.log 2>&1 &
		-- nohup sh generate_dimension_update.sh  2021-02-24 2021-01-27 >> generate_dimension_update.log 2>&1 &
		-- nohup sh generate_dimension_update.sh  2021-04-27 2021-04-21  >> generate_dimension_update.log 2>&1 &
		--  nohup sh generate_dimension_update.sh  2021-05-18 2021-04-27   >> generate_dimension_update.log 2>&1 &
		 -- nohup sh generate_dimension_update.sh  2021-06-21 2021-05-18  >> generate_dimension_update.log 2>&1 &
		 nohup sh generate_dimension_update.sh  2021-11-12 2021-05-18  >> generate_dimension_update.log 2>&1 &
			/*  弃用
			 -- 7、nohup sh generate_supplier_recon_rate_update.sh 2020-10-03 2020-09-18 >> generate_supplier_recon_rate_update.log 2>&1 &
				1.day=2020-10-03, table_name=DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH
				  day=2020-10-03, table_name=DW.DWS_CD_BY_RECON_RATE_MONTH
				  day=2020-10-03, table_name=DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH
				  day=2020-10-03, table_name=DW.DWS_BUYER
				  day=2020-10-03, table_name=DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH
			*/
	6、生成 几个额外维护表数据。以及维护增量更新，以及数据删除
			【2021-01~2021-12  因为前端修改了区间 最近一年，故无需改， 后续修改区间，逻辑修改。！！！！！】
			1、nohup sh generate_area_company_and_update.sh  2021-04-27 2021-02-24    >> generate_area_company_and_update.log 2>&1 &
				-- nohup sh generate_area_company_and_update.sh  2021-05-18 2021-04-27     >> generate_area_company_and_update.log 2>&1 &
				-- nohup sh generate_area_company_and_update.sh  2021-06-21 2021-05-18     >> generate_area_company_and_update.log 2>&1 &
				-- nohup sh generate_area_company_and_update.sh  2021-11-12 2021-05-18     >> generate_area_company_and_update.log 2>&1 &
			2、nohup sh generate_area_and_update.sh   2021-04-27 2021-02-24  >> generate_area_and_update.log 2>&1 &
				-- nohup sh generate_area_and_update.sh   2021-05-18 2021-04-27 >> generate_area_and_update.log 2>&1 &
				-- nohup sh generate_area_and_update.sh   2021-11-12 2021-05-18  >> generate_area_and_update.log 2>&1 &
			3、nohup sh generate_material_name_and_update.sh  2021-04-27 2021-02-24   >> generate_material_name_and_update.log 2>&1 &
				-- nohup sh generate_material_name_and_update.sh  2021-05-18 2021-04-27  >> generate_material_name_and_update.log 2>&1 &
				-- nohup sh generate_material_name_and_update.sh  2021-11-12 2021-05-18  >> generate_material_name_and_update.log 2>&1 &
	7、生成物料未降价表数据，以及维护增量更新，以及数据删除
			1、nohup sh generate_no_price_and_update.sh    2021-02-24  2021-01-27  >> generate_no_price_and_update.log 2>&1 &
				-- nohup sh generate_no_price_and_update.sh    2021-05-18 2021-04-27  >> generate_no_price_and_update.log 2>&1 &
				-- nohup sh generate_no_price_and_update.sh    2021-11-12 2021-05-18  >> generate_no_price_and_update.log 2>&1 &
			
			
	8、dimenson以及额外增量更新表 ，同步到正式 ： /root/shell/hive/purchase_bi_shell/distcp/zhengshi/ceshi_to_zhengshi_dimenson.sh
			nohup sh /root/shell/hive/purchase_bi_shell/distcp/zhengshi/ceshi_to_zhengshi_dimenson.sh 2021-06-21 >> /root/shell/hive/purchase_bi_shell/distcp/zhengshi/ceshi_to_zhengshi_dimenson.log 2>&1 &
	
				echo "--开始同步 《供应商对账数据至正式》 脚本"
				nohup sh  /root/shell/hive/purchase_bi_shell/distcp/pro/test_to_pro_supplier_recon.sh.sh  $l_date >> /root/shell/hive/purchase_bi_shell/distcp/zhengshi/test_to_pro_supplier_recon.sh.log 2>&1 &&
				echo "-- 《供应商对账数据至正式》  脚本执行完毕"	
				
				echo "--开始同步 《CD数据至正式》 脚本"
				nohup sh  /root/shell/hive/purchase_bi_shell/distcp/pro/test_to_pro_dimenson.sh  $l_date >> /root/shell/hive/purchase_bi_shell/distcp/zhengshi/test_to_pro_dimenson.log 2>&1 &&
				echo "-- 《供应商CD数据数据至正式》  脚本执行完毕"	
				
	【:%s/10.0.24.113/10.0.24.114/g】
	:%s/10.0.24.114/10.0.24.113/g
	9、供应商对账数据 ，
				nohup sh generate_no_muju_recon.sh  2022-06-12 >> generate_no_muju_recon.log 2>&1 &   【2021-11-12 2021-07-21 2021-06-21  2021-05-18】
				nohup sh generate_no_muju_recon_update.sh 2022-06-12 2222-01-01  >> generate_no_muju_recon_update.log 2>&1 &
				
				nohup sh generate_muju_recon.sh   2021-11-12 >> generate_muju_recon.log 2>&1 &   【2021-07-21 2021-06-21】
				nohup sh generate_muju_recon_update.sh 2021-11-12 2021-07-21 >> generate_muju_recon_update.log 2>&1 &
						备注：模具的代码，要去掉FATP的数据， 18,19,20   -- 已添加
					-- 2021-07-21
				/**
						echo "--开始更新 《供应商对账-非模具数据》 脚本"
						nohup sh /root/shell/hive/purchase_bi_shell/step_shell/generate_no_muju_recon.sh $l_date $old_date >> /root/shell/hive/purchase_bi_shell/generate_no_muju_recon.log 2>&1 &&
						echo "-- 《供应商对账-非模具数据》 脚本执行完毕"	
						
						echo "--开始更新 《供应商对账-非模具数据-数据更新》 脚本"
						nohup sh /root/shell/hive/purchase_bi_shell/step_shell/generate_no_muju_recon_update.sh $l_date $old_date >> /root/shell/hive/purchase_bi_shell/generate_no_muju_recon_update.log 2>&1 &&
						echo "-- 《供应商对账-非模具数据-数据更新》 脚本执行完毕"
						
						echo "--开始更新 《供应商对账-模具数据》 脚本"
						nohup sh /root/shell/hive/purchase_bi_shell/step_shell/generate_muju_recon.sh $l_date $old_date >> /root/shell/hive/purchase_bi_shell/generate_muju_recon.log 2>&1 &&
						echo "-- 《供应商对账-模具数据》 脚本执行完毕"	
						
						echo "--开始更新 《供应商对账-模具数据-数据更新》 脚本"
						nohupsh /root/shell/hive/purchase_bi_shell/step_shell/generate_muju_recon_update.sh $l_date $old_date >> /root/shell/hive/purchase_bi_shell/generate_muju_recon_update.log 2>&1 &&
						echo "-- 《供应商对账-模具数据-数据更新》 脚本执行完毕"
				**/
				
	10、供应商对账数据 ->同步数据至正式
				nohup sh /root/shell/hive/purchase_bi_shell/distcp/zhengshi/ceshi_supplier_recon.sh 2021-07-21 >> /root/shell/hive/purchase_bi_shell/distcp/zhengshi/ceshi_supplier_recon.log 2>&1 &
			-、正式环境-数据加载
				prodata01 : nohup sh /root/shell/hive/purchase_bi_shell/msck_repair/msck_recon.sh >> /root/shell/hive/purchase_bi_shell/msck_repair/msck_recon.log 2>&1 &
		
		
/**
			#正式同步
			# nohup sh msck.sh  >> msck.log 2>&1 & 
msck REPAIR table dwservice.dws_cd_delete;
select 'dwservice.dws_cd_delete',day,table_name,count(1) from dwservice.dws_cd_delete group by day,table_name;

msck REPAIR table dwmiddle.dwb_purchase_report_cd_update;
select 'cd',day, count(1) from  dwmiddle.dwb_purchase_report_cd_update  group by day;

msck REPAIR table   dwbase.dwb_purchase_report_by_5g ;
select '5g',day,count(1) from  dwbase.dwb_purchase_report_by_5g group by day;

msck REPAIR table dwdetail.dwd_salcomp_cd_detail_update;
select 'salcomp',day,count(1) from   dwdetail.dwd_salcomp_cd_detail_update group by day;
			
msck REPAIR table dwdetail.dwd_huadongzidonghua_cd_detail_update;
select 'zidonghua',day,count(1) from dwdetail.dwd_huadongzidonghua_cd_detail_update group by  day;

msck REPAIR table dwbase.dwb_sap_cicai_by_cd_update;
select 'cicai',day,count(1) from   dwbase.dwb_sap_cicai_by_cd_update group by  day;

msck REPAIR table dwbase.dwb_sap_jiegoujian_by_cd_update;
select 'jiegoujian',day,count(1) from   dwbase.dwb_sap_jiegoujian_by_cd_update group by  day;
		

msck REPAIR table dwservice.dws_cd_by_material_cut_price_month_update;
select 'material_cut',day,count(1) from dwservice.dws_cd_by_material_cut_price_month_update group by day;		
		
msck REPAIR table dwservice.dws_cd_by_material_type_month_update;
select 'material_type', day,count(1) from dwservice.dws_cd_by_material_type_month_update group by day;	

msck REPAIR table dwservice.dws_cd_by_material_month_update ; 
select 'material',day,count(1) from dwservice.dws_cd_by_material_month_update group by day;	

msck REPAIR table dwservice.dws_cd_by_supplier_month_update;
select 'supplier',day,count(1) from dwservice.dws_cd_by_supplier_month_update group by day;

msck REPAIR table dwservice.dws_cd_by_amount_month_update;
select 'cd_amount',day,count(1) from  dwservice.dws_cd_by_amount_month_update group by day;

msck REPAIR table dwservice.dws_cd_by_area_day_month_update;
select 'area_data',day,count(1) from  dwservice.dws_cd_by_area_day_month_update group by day;

msck REPAIR table dwservice.dws_area_company_update;
select 'area_company',day,count(1) from dwservice.dws_area_company_update group by day;

msck REPAIR table dwservice.dws_area_update;
select 'area_index',day,count(1) from dwservice.dws_area_update group by day;

msck REPAIR table dwservice.dws_material_name_update;
select 'material_index',day, count(1) from dwservice.dws_material_name_update   group by day; 

msck REPAIR  table dwservice.dws_no_price_reduce_material_update;
select 'no_price',day, count(1) from dwservice.dws_no_price_reduce_material_update  group by day  ;


msck REPAIR table dwservice.dws_cd_by_recon_rate_month_update;

msck REPAIR table dwservice.dws_cd_by_buyer_recon_rate_month_update;
msck REPAIR table dwservice.dws_cd_by_supplier_recon_rate_month_update;
msck REPAIR table dwservice.dws_cd_by_supplier_recon_rate_detail_month_update;
msck REPAIR table dwservice.dws_buyer_update;

select 'dws_cd_by_recon_rate_month_update',day,count(1) from  dwservice.dws_cd_by_recon_rate_month_update  group by day;
select 'dws_cd_by_buyer_recon_rate_month_update',day,count(1) from  dwservice.dws_cd_by_buyer_recon_rate_month_update  group by day;
select 'dws_cd_by_supplier_recon_rate_month_update',day,count(1) from  dwservice.dws_cd_by_supplier_recon_rate_month_update group by day;
select 'dws_cd_by_supplier_recon_rate_detail_month_update',day,count(1) from  dwservice.dws_cd_by_supplier_recon_rate_detail_month_update  group by day;
select 'dws_buyer_update',day,count(1) from  dwservice.dws_buyer_update  group by day;

msck repair table dwservice.dws_cd_by_muju_recon_rate_month_update;
select 'dws_cd_by_muju_recon_rate_month_update', day,count(1) from  dwservice.dws_cd_by_muju_recon_rate_month_update group by day;
msck repair table dwservice.dws_cd_by_muju_supplier_recon_rate_detail_month_update;
select  'dws_cd_by_muju_supplier_recon_rate_detail_month_update',day,count(1) from  dwservice.dws_cd_by_muju_supplier_recon_rate_detail_month_update group by day;


**/
		
 * 脚本注意事项：
 * 	1、shell中要替换split(B.warehouse_name,'\\|') ->  split(B.warehouse_name,'\\\\|')
 *  2、step_supply_info_common_unit.sh 脚本因为sql的原因，目前只能在dbeaver中执行， 在shell中执行会导致数据，concat异常。  【目前已解决。】
 *  3、step_remove_cicai_fangyi.sh脚本
 * 		location_code 置为'' -> 现逻辑修改为 此字段不置为''，因为计算CD基准价需要剔除赠品，不良品
 * 
 *  4、目前CD表中是不包含 ‘unknown’的数据的，大概200w+
 *  5、新的逻辑  入库审核日期 格式化为 yyyy-MM-HH  /  BG修复了，没有值得情况。 【由此可能导致  这次的数据与上次的数据，会出现很多更新数据】
 *    [1、修改 eas，模具的old_date,手动指定  2 、修改SAP手动取全部数据  ， 代码暂时去掉  -->  and remarks > '${old_date}']
 */
  https://www.lvhy.top/api/school/getRecList
 
 Q:
	1、物料类型，  磁材的数据，日期异常。
		-、后端sql写死
		-、前端控制。
		
2021-05-13需求：		
1、设备规则
	2、FAtp-设备,pa金额，(没有入库金额，使用po金额。)
3、单位
    预览 显示当月。
4、磁材线下数据 ，线上化
5、设备自动化， 无料号的基准价 
6、其他线下数据 排时间表。
7、修改SOP，加权限
8、组装改为 ‘softgoods’
9、白色背景 ，导出按钮，不明显。
	10、设备剔除，固定资产
	11、3月31日，组装对账达成率，那条记录再抽一次测试。
	14、对账达成率有空格（实际上是没有按天跑的原因）。  
	18、FATP的对账达成率，没有添加，6080  -> 解决使用2021-04-27的数据即可。
12、通信 + SAP
	-、对账添加（1、先手动根据backup的数据，根据A08，拼接至2021-04-27分区，后续，完善044根据A08判断生成“5G”数据。）
	-、报表添加 （044，添加公司 领泰？是否可以根据公司组织来确定。）
13、磁材ecc + 磁材集团（目前就是这样）。
	
15、zmm045，结算 （VMI结算） 。  【另外华西冲压也会存在】
	-、需要用户提单。
	
16、优先根据采购组判断，然后采购员。

17、phonnix的java请求， 多个regionserver ，如果一个节点挂掉，请求其他节点。

18、FATP设备为0的PA
19、厂区表，加上导出详情功能。

20、是否有分页的SAP的接口。

21、设备加上，厂区。

22、通信事业部的对账 -需要修改，只要对账，就不需要核对。 
		-、需要修改为 ，根据月报数据，关联  应付表
		-、判断对账日期有，就无须对账。

	22、供应商  21 20 都有的， 
		by  供应商，BG,法人公司，.年， PA(RMB)。
			（RMB）

2021-05-24
24、-、 赛尔康仓位-> 看他们对于仓位的一个具体区分规则是啥样的
	-、后台接口上传的接口推进。


2021-05-25
[捂脸哭]总结不是重点，重点是啥时候能把FATP的CD统计出来，现在他们月报几个事情：
1.汇率转换（PA剔除部分公司数据）
2.土耳其按仓位区分 设备，总务，材料，只有材料算PA，设备需算入FATP设备模块，总务的目前直接剔除掉。但是这些供应商的交易记录又都需要在供应商交易明细里体现
3.包辅材CD计算
4.厂区交易额模块需要增加按厂区的明细导出
5.FATP设备模块需要增加订单金额字段，目前PA好多是0

1.PA核算中需剔除的公司：ZN01 南京紫牛软件科技有限公司 / ZM07 江苏紫米电子技术有限公司 / XM0001 小米通讯技术有限公司（Xiaomi H.K. Limited）
2.土耳其数据中需剔除的组别：总务、设备。组别可按仓码区分，需采购提供具体区分规则
		-、

总结一下：
1.包辅材需要计算直降，因为FATP是今年才成立的BG，所以取的是对应料号21年首次下单那个月的加权平均值为基准价。如到22年，则取21年12月的加权平均，这个与其他BG规则一致
2.包辅材目前只在土耳其赛尔康里有，按料号与仓码规则区分，具体如下：
土耳其：TEDM  辅料仓  EDM Warehouse
料号： 18F*, 11F*, 585*
	那就是包辅材这块取第一次交易的那个月该物料的加权平均：第一月采购金额/第一月采购数量=基准价，此基准价作为全年的基准价
		如果到了2022年，就取2021年12月的加权平均
3.PPV和账期折扣这块还暂未纳入计算

-、po = 4500297424  物料 = '18F-RSM50500A'
	订单中数量 = 35 ， 入库 =4 ，  入库日期 = 2021-02-22  ，  月报中 = 31 ，过账日期 = 2021-04-06
	
-、11F-JSNP6003  po  =4500301347   数量= 384 ，  对应有净价， 但是月报中净价为0 ， 也没计算CD。
 


1、土耳其月报  ，设备。
+
采购员。（FAtp-设备）
+
PA
+
101（原材料） ，
103（非原材， 设备）
设备-固定资产
总务-固定资产（暂时没有）-->  采购员区分
	101区分完，再根据物料区分 
	
BOM料列表：  【Cosumable PKG Parts，Sheet4，C3M，J19S，K7B（excel未找到）】
11F-JS7037BR
11F-JSNP6003
11F-JSNS3303
11F-JSPUR533
11F-JSTIS420
11F-JSTP3513
18F-BDP26100A
18F-BQJ19S00A
18F-BQJ19S070
18F-BQL66510A
18F-BQM52100A
18F-FDT88510
18F-GBM50500A
18F-HJCJ19S0
18F-HJCM5050
18F-HJGJ19S0
18F-HJGM5050
18F-HJGM5051
18F-JDM51600A
18F-KTJ19S00A
18F-KTL66500A
18F-KTM50500A
18F-KTM51600A
18F-LDT88510A
18F-PEJ19S10A
18F-PEL66510A
18F-PTJ19S00A
18F-QJESD001
18F-RMM51100
18F-RSM50500A
18F-TGJ19S00A
18F-TPJ19S154
18F-WTJ19S00A
18F-WTM50500A
18F-WTM50501A
18F-ZBJ19S11
18F-ZBM51100
18F-ZBM51600A
19F-820100004V9T
19F-820600002J9T
585-F162010

对比FATP月报发现少了。11F-JSTP3511，585-F162115

对比月报多的：
， 	 ->  赛尔康暂无
11F-JSPUR533
11F-JSTP3513
18F-BQM52100A
18F-HJCJ19S0
18F-HJGJ19S0
18F-HJGM5051
18F-TGJ19S00A
18F-WTJ19S00A
18F-WTM50501A
18F-ZBM51600A
	， -> cd = 0
18F-BQJ19S00A
18F-BQJ19S070
18F-PEJ19S10A
19F-820100004V9T
19F-820600002J9T

当前月报中，既有101，又是bom （但是赛尔康数据少抽了）
11F-JSNP6003
11F-JSNS3303
18F-BDP26100A
18F-BQL66510A
18F-FDT88510
18F-GBM50500A
18F-HJCM5050
18F-HJGM5050
18F-JDM51600A
18F-KTL66500A
18F-KTM50500A
18F-KTM51600A
18F-LDT88510A
18F-PEL66510A
18F-RMM51100
18F-RSM50500A
18F-WTM50500A
18F-ZBM51100
19F-820100004V9T  【4500300826   单价= 0.025  4月  58250.000   0.9   5月 34750.000   0.82】
19F-820600002J9T【4500300826    4月 65000.000   0.9   5月 35000.000    0.82】】




》》》》》

报表进度：
	数据：
		-、数据增量更新优化-去重（未完成）
		-、数据提供（已完成）【1~9报表已提供】
	后端：1,2,4,7,9
	前端：1,2,9

备注：
	1：模切达成周报   
	2：模切达成日报
		3：稼动率日报
	4：稼动率周报
		5：AOI产品
		6：非AOI产品
	7：当班物料损耗   +++
		8：NUD良率（石墨）	+++
	9：工单进度

	
2021-12-06 
当前进度以及计划：
人事（预计本周完成）：
	1、数据已抽取（已完成）
	2、逻辑（预计周三完成）
	3、前端（已完成）
	4、后端（预计周五完成）

模切：
	1、NUD良率（石墨），工单进度-模切，手工详情 （周一完成[联调]）

成品：
	1、成品（手工）达成周报 （预计周3完成）
	2、成品（手工）达成日报 （预计周3完成）
	3、AOI稼动率周报（预计周5完成）
	4、AOI稼动率日报（预计周5完成）
	
	
	
2021-12-13
上周进度以及本周计划：
	上周完成：
		数据组：手工达成周报/日报 ，AOI稼动率周报/日报 ，
		后端：成品（手工）达成周报 ，成品（手工）达成日报 ，AOI稼动率周报-汇总，HR人力-接口。
		前端：OK
	上周逾期：
		数据组：HR人力数据接口异常，数据不可用。 
		后端： AOI稼动率周报-明细， AOI稼动率日报 。
		前端：AOI稼动率周报-明细， AOI稼动率日报 
	本周计划：
		数据组：手工效率报表 （周二），直通率 （周三），手工工单进度报表 （周四），HR考勤数据抽取（周二），HR人力数据异常（周四）。
		后端：HR考勤-接口（周三），手工效率报表-接口（周三），直通率-接口（周四），手工工单进度报表-接口（周五）。
		前端：AOI稼动率周报-明细（周一）， AOI稼动率日报（周二），
		HR考勤页面（周二）,手工效率报表-接口（周三），直通率-接口（周四），手工工单进度报表-接口（周五）




模切报表：
	1、达成周报	(已完成)
	2、达成日报	(已完成)
	3、稼动率日报	(已完成)
	4、稼动率周报	(已完成)	
	5、AOI产品良率报表	(已完成)
	6、非AOI产品良率报表	(已完成)
	7、当班物料损耗日报	(已完成)
	8、NUD良率报表（石墨）	(已完成)
	9、工单进度报表	(已完成)
	10、模切人力工时分布报表	(需求修改，待开发)

成品（手工）报表：
	1、达成周报	(已完成)
	2、达成日报	(已完成)
	3、AOI稼动率周报	(已完成)
	4、AOI稼动率日报	(已完成)
	5、AOI产品效率报表	(已完成)
	6、非AOI产品效率报表	(已完成)
	7、手工效率日报	(代开发)
	8、直通率	(代开发)
	9、手工工单进度报表	(代开发)
	10、手工人力工时分布报表	(需求修改，待开发)

运营报表：
	未开始




问题：
	还剩3,5,6,8 四个报表 ，3天、
	
修改：
	1、nud，date字段改为年月日
		
	2、稼动率日报，  同一个机台，只取一个产品。
		 dwservice.dws_moqie_utilization_rate_day -> DW.DWS_MOQIE_UTILIZATION_RATE_DAY
		 
		 dwservice.dws_moqie_nud_yield_rate_by_prod -> DW.DWS_MOQIE_NUD_YIELD_RATE_BY_PROD 
		 
		dwservice.dws_moqie_nud_yield_rate_by_reason -> DW.DWS_MOQIE_NUD_YIELD_RATE_BY_REASON
		
		dwservice.dws_moqie_nud_yield_rate_by_lineemp ->  DW.DWS_MOQIE_NUD_YIELD_RATE_BY_LINEEM
	
	3、厂区位置表
	4、db表
	5、工单进度报表 ，详情数据(模切,手工) 
	6、nud ， 不良品的总数是怎么计算， ？？  
		1、by 产品，不良现象 ， 总数=产品总数
		2、by 产品，姓名，不良现象 ， 总数 = by 产品，姓名的总数
		3、by 产品，线体，姓名，不良现象 ， 总数 = by 产品，线体，姓名的总数
	7、工单进度，详情表需要传日期吗？
		不需要：
	
	8、修改 模切达成日报 ，区间范围定义。
		1、ent_date ，白晚班 ， 
		2、再根据moduleinfo.logdate时间段。 若是 晚班 9~10点，  也算 晚班5~9点时间段、
		
		-、odspro_ls_mes_tagprint 表。同一个计划单号，会不会对应多个ftram？
			：不会
		-、odspro_t_mes_moduleinfo 分组修改：不能根据计划单号分组，取logdate， 会存在一对多。
			61000014005912051354	["2019-12-05 09:52:58","2019-12-05 11:38:57","2019-12-05 14:51:25","2019-12-05 17:17:58","2019-12-05 18:18:46"]
		-、需要ent_date与 logdate的年月日对比， 然后获取时分秒？还是根据print.fteam, 获取logdate的时分秒，确定区间？
				： 后者。
	
	9、手工
	
	10、人力工时，  
		1、生产1，生产2 ，只有mq是这样的。 其他库统称为《生产》
		2、间接 固定*10  需要修改。（郑州的库） ？怎么修改业务没告知。


	11、成品达成日报， FMRP为null或者''，需要显示。   
	
2022-01-07 16:18 新增需求
	12、serverice表的所有字段，必须group by， 若存在使用middle不group by, 则middle表也需要COALESCE处理。
	13、校验模切流程是够正常。
		校验手工sh脚本，放在linux是否报错
		删除手工数据，以及索引
		完善手工，脚本以及update流程
	
	14、factory  新增了seq字段， 根据seq排序，优先显示数据。
	
	15、 手工-直通率  ：目前导入的2021-10-01的数据。
			明天对比， 2022-01-11 ，2022-01-10 的数据， 更新 2022-01-11的数据
	16、DW.DWS_HAND_EFFIC_DAY_BY_DETAIL  手工效率日报详情：
		1、phoenix ，修改副本数？
		2、拆表。  √
		
	2022-02-15
		1、手工效率日报 - 详情表 ，
			-、主键去掉 工龄
			-、工龄计算， 负数转为正数。 -->  放在前端执行
			-、工龄字段 -  改为  入职日期。
	
	
	
2022-01-14
	1、数据模型构建，思维导图
	2、运营周报开搞。
	

2022-01-18
线体，工序，法人，厂区，楼层，项目，

1、维度自定义
2、维度底表建模
	
	
模切：	
	1、模切达成日报：
		1、计划产出和总产出  ， 原数据单位为pcs，3.8错误 
		2、计划产出，不需要汇总。
		3、时间段(period)有问题。  --> 以我们的为主
		前端显示：
		3、同一个计划单号，，，  需要汇总为一条记录，
			按照
					db,FplanNumber,entdate,period,
					Fteam,fmrp,fmanuorder,fproduct,factory_name,
					factory_location,fmachine,personname,skill,liableperson,
					plan_qty,
						达成情况，  总产出 - 计划产出  >0  则为 OK ,否则 NG .
	
	
mes系统数据：
过滤日期=substring(CONVERT(varchar(100),createtime,20),0,11)  = '2022-01-03'	
	
	
	1、新数据 ，  
	- ： 对比前，
		保存新数据 至，   new表
	-、根据   表名，日期倒排 ， 获取最新 状态码
	-、状态码为1， 则可以写入new表
		反之， 需要重跑 （new 与old ） 对比程序。
	-、对比完成，写入phoenix时， 写入状态表。 new_state
		表名（DW.dws_moqie_by_achieve_week_report）
		状态码（ 0 ），
		写入日期 （ 2022-10-25 17:24:24），
	-、对比成功，修改状态码 （1）
	
2022-03-22
	1、ls_mes_tagprint.fplanqty 和t_mes_moduleinfo.qty  数据库中单位都是K吧
	2、ls_mes_tagprint
		print的这个表，是不是还需要，userdate这个日期作为修改？
	
	2022-03-28
	1、dwservice.dws_operation_by_moqie_achieve  phoenix数据需要重新构造， achieve_qty,plan_qty 修改为 保留4位。   √
	2、ls_mes_tagprint  ，  合并至dwbase时，茂泉未加userdate过滤，目前已添加，需要重跑合并dwbase。  【模切达成】   √
		-- 1、2022-03-24 批次达成  2022-03-24	0.9073 【0.911】	1.0294	14924.2	15362.8
		-- 68000019705203240145
		-- select FplanNumber,FplanQty, Fcreatime,userdate from dwbase.dwb_ls_mes_tagprint where db= 'CNCPROMQ' and  FplanNumber = '68000019705203240145'
		select FplanNumber,FplanQty, Fcreatime,userdate from ods_product.odspro_ls_mes_tagprint where db = 'CNCPROMQ' and  FplanNumber = '68000019705203240145'
	2022-03-29
	3、模切稼动和模切达成， 数据保留4位本分比，测试未修改。
	4、目标值，按照创建日期，取最新的addtime
	5、  模切工时
		-、关联handstart表之后， 是否需要分组，entdata，等   【OK】
		-、同一个控制者，同一天，同一个人，工时需要叠加。   【OK】
			【 dwb_t_mes_moduleinfo 表， 需要先根据fplannumber关联 连机，副手，计算worktime， 再根据  人员聚合工时，】
			-、计算工时， 根据，计划单号，人员 

		-、间接工时，模切teamid是否去null?    【OK】
			不需要
		-、,if(tn.type is null or tn.type = '','间接',tn.type) as post_type    【OK】
				模切计算间接， 新厂，不存在type为null的情况。这样写不影响新厂。
		-、手工直接工时， handstart有啥过滤条件么。 【OK】
			-、除了dwbase.dwb_t_mes_handinfo	 where fstatus = '1'   无其他
			
		-、间接工时， 
			-、人员是否去重*10 ?   【OK ，OK】
				dwb_t_mes_transfer ， 录数据会覆盖同一个人的信息，理论上一个人只有一条记录，所以不需要去重 * 10 	
				加上去重，数仓逻辑更完善。	【后续发现，3.8存在同一天，同一个tranfer，同一个人多条记录， 故需要加distinct】
			-、t_mes_transfername，存在数据延迟，导致间接工时计算有误.( name = '模切学徒')
					select * from ods_product.odspro_t_mes_transfername where db = 'CNCPROMQ'and name = '模切学徒' 
					解决:需要全表抽取
			-、t_mes_transfer,3.8存在数据删除，   
					解决： 暂时下班时间段，全表抽取， 后续曹斌加删除标识。
					问题补充， 发现是因为，抽取3.8的数据至大数据，spark代码未处理null, NULL变为''字符串，。 大数据需要加上 != '' 条件筛选。 
						后续茂泉修改spark代码。 
						业务代码暂时加上  and  ShiftId != '' 【目前不影响】
			-、	t_mes_handinfo	状态修改，大数据抽取模式下，存在数据延迟。 【OK】
				
		-、模切直接工时
			 1、concat,不能拼接null，拼接null，导致整个concat都变为null     【OK】
				解决： concat(if(info.EmpNo is null,'',info.EmpNo),',',
	 				-- 连机手，为空，设置为empno, 方便后续set计数时不统计
	 				if(print.LineEmpNo is null or print.LineEmpNo = '',if(info.EmpNo is null,'',info.EmpNo),print.LineEmpNo),',',
	 				-- 副手，为空，设置为empno, 方便后续set计数时不统计
	 				if(print.SlaveEmpNo is null or print.SlaveEmpNo = '',if(info.EmpNo is null,'',info.EmpNo),print.SlaveEmpNo)) 
					
	 2、collect_set不能存null， size时，如果存在null，则整个size-1  【OK】
		-、考勤，工时比，hive serverice多个表，字段 decimal(18,4) . 以及phoenix
	6、出勤 -- 在职/出勤 。 t_mes_handstart 新增userdate增量更新，解决【OK】
	7、模切稼动 --
			机台数：t_mes_plcinfo ，改为全表抽（存在删除数据） 【OK】
			开机数： 前端放开小数点. 【OK】
			开机率 ，稼动率 【OK】
	8、成品达成 -- 
			1、批次达成率：t_qc_check表（存在数据修改，updatetime字段未更新，导致数据不一致）  【OK】
			数量达成率：t_qc_check表（存在数据修改，updatetime字段未更新，导致数据不一致）  【OK】
				已修改：  -、 800-BBB604-A0-B  3.8少的数据
						t_mes_prodnoreview存在数据删除，改为全表，【OK】 
			
			2、hive表转化为 decimal(18,4)  	batch_rate num_rate  (正式+测试) 【OK】 
			alter table dwservice.dws_operation_by_num_batch_rate  change column batch_rate  batch_rate  decimal(18,4);
			alter table dwservice.dws_operation_by_num_batch_rate  change column num_rate  num_rate  decimal(18,4);
			alter table dwservice.dws_operation_by_num_batch_rate_update  change column batch_rate  batch_rate  decimal(18,4);
			alter table dwservice.dws_operation_by_num_batch_rate_update  change column num_rate  num_rate  decimal(18,4);
			3、phoenix dws_operation_by_num_batch_rate 表添加 decimal(18,4)
			
	9、
		-、目标值bug   【OK】 
			1、制成良率-通用AOI良率
				fai直通率
				fqc直通率
		-、工时比，yd，AOI后面两项以及汇总显示，  【OK】 
		-、百分比小数点   【OK】 
				保留百分比小数点1位（例：60.7%）
					人力出勤-模切直接工时比  
					人力出勤-手工直接工时比
					模切稼动-开机率(%)
					模切稼动-稼动率(%)
					成品达成-批次达成率
					成品达成-数量达成率
					成品达成-产值达成率
			
	10、工时比，hive表，phoneix表修改格式 decimal(18,4)    【OK】  
		-、代码  工时比合并serverice加上分区  【OK】 
		-、合并至human表，工时比保留4位。decimal(18,4)    【OK】 
	11、denny模型
		-、BG BU拆分Wie2层
		-、制程良率的看不出F表的颗粒度
		-、同样这个表我理解是机台稼动率我的理解是到单台设备机器，那为什么还有要机台数呢？这个要结合业务时间情况来验证
		-、人员表没有可度量字段，为什么是事实表呢？ 为什么MRP controller，等是主键呢？，
		-、为什么要强调是在职呢？如果有人离开公司了，数据就要被抹去吗？
		-、 Slow change dimension?
		-、另外你对数据源（3.8,SAP HR接口）也要熟悉[从数据的各自属性，特征等。]
		-、但是你可能要考虑贴源层，ODS层，DWS， DWD ，概念拉通。
		
	12、张亚东-集团周报做记录、
	13、运营模块-点开展示是否需要第二层。   【OK】
		-、需要， 2022-04-15 完成 
	14、刘进，接华东数据，可视化报表
	
	
	2022-04-11
	15、通用AOI逻辑修改 -- 钟海
	16、人力出勤- 直接工时比 修改为 “工时比”
	17、运营-控制者 ， 需要根据db表取。
		 SELECT DISTINCT fmrp  FROM  DW.DWS_MOQIE_DB WHERE db = 'CNCPROMQ' AND bu = '新厂' and dim='20' ORDER BY FMRP


	运营可视化-1期
		技术层面：
			1、数据范围广（整合不同DB厂区生产数据）
			2、数据安全（数据副本，分布式存储）
			3、数据响应快（数据预处理/高性能DB）
			4、数据规范化（统一数据规范）
			5、数据解耦(数据分层)
		展示层面：
			1、数据渲染效果好
			2、访问方便快捷

			
	2、服务器整合，忠相。
	3、验收走审批
M01 热熔胶
M02 电池胶
M03 石墨
M04 普通平板
M05 普通圆刀
M06 NPI车间
M07 RCAM FOAM
M00 
	
	2 
  1   0 
0  0 





上周待跟进问题：
	1、WMS梳理人力情况 -- 梁新茂/敖建文（跟进中 4.15）
	2、系统测试由实施人员及用户测试@各组  -- ALL （放到系统发布流程中解决）
	3、系统发布申请流程定稿 -- 杨仕梅 （跟进中 4.15  TSM/大数据/3.8需确认审批人 ）
	
2022/04/11 -- 本周会议纪要：
	TMS：
		1、成本中心数据不完整跟进,协调谢燕跟进   -- 罗文海 4.15
		2、跟进SRM项目讨论 	     			     -- 梁新茂/罗文海  4.15
	PLM：
		1、服务器异常8D报告最终版,持续跟进中。 -- 梁新茂/刘平平  4.15
	QMS：
		1、黄江冲压二厂QMS2.0,需求开发（进行中 40%）  		 -- 敖建文
		2、远程协助东台冲压＆汽车件QMS 2.0上线 （进行中）    -- 敖建文 
	数据组：
		1、大数据运营报表-1期结案与2期立项要分开结案。-- 王英楠 4.15
		2、大数据华东KB/TP项目，持续跟进。			  -- 王英楠/钟海  4.15
		3、大数据采购CD报表，问题反馈跟进。-- 王英楠
	ALL:
		1、任务要按照既定时间节点来，把控时间，避免任务延期。-- ALL  
		2、系统发布申请流程定稿，ALL分享问题讨论使用 -- ALL
	
	Q1总结，Q2重点工作：
		1、Q2之后绩效如何划分，与各模块沟通落实  -- 梁新茂  4.15
		2、各模块确定开发环境，需搭建3套环境。 -- ALL 
		3、Q1，Q2各模块重点工作总结，重点问题以及改善计划，细化推广。 -- 梁新茂 	
	
	

2022-04-25 
1、2期，立项5年的投资回报，算进去。
2、1期，前端和建文沟通协调资源。
3、1期，交付，资料整合
3、跟进忠相服务器的事情。
4、管理者，
	-、未雨绸缪，预先发现问题。
	-、想做什么，怎么把他做好
	-、问题及时回复。
5、lyitech_bigdata Lstech.2020#
因大数据平台账号信息与AD域同步，目前同步账号账号失效，在AD域账号信息校验中，需运维把此lyitech_bigdata账号/密码设置长期有效。
AD账号校验地址：ldap://192.168.3.135:389
账号：lyitech_bigdata


周会，茂哥反馈问题需要处理：
1、QMS服务器扩容，做集群
2、WMS3.0 版本的评审定时间
3、WMS实施推广指南
	-、比如推东台冲压，推送之前，谁来做基础数据梳理，检查
	-、要保证推广的目标是唯一的。（准备如何做？）
	

EHS问题：
1、1期 5个功能
	by 厂区 
	范围：
		深圳模切。冲压，成都领汇没问题
		推广至集团
	外购未找供应商
		钉钉集成（架构+人员）  -- 邓明亮（20人/天）
		
		1、内部评估的精细化（是否加上钉钉，兰陵OA）
		2、7月份的人力（没人出TBD）
		


2022-05-09
1、Q2目标	
	1期补全，2期立项
2、TPKB 项目跟进
	1、开发了部分dashboard，得到客户认可。
	2、持续开发dashboard中。
	3、目前没有需要协助的内容。
3、服务器跟进
方案1 ：
	-、测试服务器资源池 迁移至正式资源池（关机迁移）
	-、UAT资源释放，整合至测试，5台虚拟机，保留1套环境
方案2 ： 
	-、UAT资源释放，整合至测试，5台虚拟机，在原有测试集群基础上搭建UAT环境(需重新搭建UAT环境)。
		风险：
			1、应用层需要调整端口、url等，可能会有遗漏，导致集群异常
			2、需重新构建UAT集群
		
4 数仓建模的驱动（托的标签），【非业务流程等，拖拽表单】
5 本地OP安装


2022-05-17
1、可视化看板迁移到正式。
2、低代码800
	-1、约详细价格会议
	-2、10+人，私有化标准版， 大概10w以内，   私有化-功能齐全 ，大概20w以内
		后期运维需要付费，二次开发以及定制需要具体收费。
	-3、我们公司的采购， 是走招标还是直订？


茂哥，有时间没，下面的几个问题和你汇报和沟通下。
一、TPKB 项目跟进
	1、开发了部分dashboard，得到客户认可。
	2、持续开发dashboard中。
	3、目前没有需要协助的内容
二、低代码800沟通
	1-、电话沟通粗略费用如下：
		人数10+，私有化标准版， 大概10w以内，
		人数10+，私有化-功能齐全 ，大概20w以内
		后期运维需要付费，二次开发以及定制需要具体收费。
	2-、如需详细报价，供应商反馈需拉线上会议详细沟通
	3-、供应商询问，我们公司的采购方案，是招标还是直订？
三、大数据服务器整合
	1、测试服务器资源已迁移至正式/UAT服务器所在资源池（在同一资源池，才可以资源共享）
	
	
22 23 21 16 23
3-14 ~ 3-18


2022-05-20 
1、1期验收报告，按照模板来

2022-05-27
1、服务器，茂哥密码简单
	大数据说明不修复原因

知识库大概场景：
1、有一个场景，是他们的整理一份调机，维修的葵花宝典（他们是从自己经验维护成excel的）
2、我们的设备维修知识是未形成体系化，结构化、标准化的
3、一个是从体系制度建设，我们的离职率，很多工程知识都存在员工电脑上，或大脑，人员离职后啥都没有
4、我们的MIL ，质量、IE 改善活动沉淀的知识都没形成结构化管理，同样的问题每周检讨，每周都发生
5、还有我们设备、现场、暴露出来的问题，现场处理了，没人去管它，没人去形成知识和经验，没有闭环


2022-05-30
1、t_mes_machineutidata  每天1000W数据， java heap space
	改为增量抽取
2、联系奥哲 /medix
3、预约低代码沟通会议
4、prodata04  /var/lib/mysql  数据清理20G。
5、proweb02 /usr/local/zookeeper/data_dir/version-2  根目录挂载多

dws_hand_effic_day.sh
	1、详情根据时间段汇总
	2、后面的值，需要汇总计算， 当前字段不满足计算。
		生产效率	良品数/（工时-DeductTime）
		约当产量(PCS)	良品数/约当系数
		约当产能(PCS/H)	良品数/(约当系数*(工时-DeductTime))

dws_hand_through_rate.sh

2022-06-10
1、异常事故处理会议。【系统异常上报】
现状：
	1、关注度不够，异常习以为常
	2、没有统一的异常收集来源
		-、服务台转化为服务工单和事件工单		
		
		IOP服务项完善--> 各负责人提供团队名单 -> 余镇洪  06/14 begin
		全面实施工单管理 --> 服务工单和事件工单	 -> 张子彬  06/15 begi	
		应用系统盘点 -->   Powerbo  
		异常日报		--> 值班经理轮班钉钉报  -> 每天
		异常汇总报表 	--> 日报  -> 余镇洪  每天
		http://10.0.0.143/web


04-28 user
04-29 user
05-03 Vicky.Zeng  zeng.wan.xiu chen.jia.min jim.liao
05-04 chen.jia.min
05-05 Melinda.zhan user 
05-06 liu.hong.xia wang.lu.yang
05-07 lu.xing.qian wang.hong.fei zhu.xiao.yan shao.jiang.tao han.li.juan
05-08 lu.xing.qian	user
05-10 xu.min3 user
05-12 wang.hong.fei shao.jiang.tao zhu.xiao.yan Jelly.Cheng	
05-13 wendy.wang chen.jia.min user
05-14 wang.lu.yang wang.li.jie
05-17 huang.ming.qian
05-19 rain1.chen	huang.dai.di
05-20 huang.zhen	li.qian5
05-21 user	sun.wan.qing	

04-22 下班
05-13 上班
05-19 下班

2、看板同步正式
	-、hive、phoenix表结构同步   √
	-、dolphin调度同步  √
	-、mes库kettle抽取历史数据同步
		hadoop distcp -skipcrccheck -update hdfs://mycluster/apps/hive/warehouse/mes.db/ODS_GET_AOIYIELD_AND_UTI hdfs://10.0.24.114:8020/apps/hive/warehouse/mes.db/ODS_GET_AOIYIELD_AND_UTI ;
		msck REPAIR table mes.ods_get_aoiyield_and_uti ;
		
		hadoop distcp -skipcrccheck -update hdfs://mycluster/apps/hive/warehouse/mes.db/ods_wms_pda_outstorage_goods hdfs://10.0.24.114:8020/apps/hive/warehouse/mes.db/ods_wms_pda_outstorage_goods ;
		msck REPAIR table mes.ods_wms_pda_outstorage_goods ;
		
		hadoop distcp -skipcrccheck -update hdfs://mycluster/apps/hive/warehouse/mes.db/ODS_MODULEUPH_KAN hdfs://10.0.24.114:8020/apps/hive/warehouse/mes.db/ODS_MODULEUPH_KAN ;
		msck REPAIR table mes.ODS_MODULEUPH_KAN ;
		
		最近一个月： /apps/hive/warehouse/mes.db/ODS_MODULEUPH_KAN    , /apps/hive/warehouse/mes.db/ODS_T_HANDDALIYRECORD_KAN ,
		/apps/hive/warehouse/mes.db/ODS_T_HANDFINFOUPH_KAN
		历史所有： /apps/hive/warehouse/mes.db/ODS_T_BADINFOLIST_KAN  ,  /apps/hive/warehouse/mes.db/ods_wms_pda_outstorage_goods
		最近半年：/apps/hive/warehouse/mes.db/ODS_T_HANDCOMPLETION_KAN ,  /apps/hive/warehouse/mes.db/ODS_T_MODULECOMPLETIONRATE_KAN
		
		
		hadoop fs -chown -R admin.ly:hdfs /apps/hive/warehouse/mes.db/ODS_MODULEUPH_KAN/
		
	-、确认是否有索引？   无索引  √
	-、标签表 & 出货表 同步，   √
	-、右上角人力 ，DW.DWB_SAP_HR_FACTORY_PEOPLE 同步  √

3、下周代办：
	800 预约现场沟通， 黄江  【1、试用版 2、安全认证】
   冲压项目
   服务器整合
   
   
2022-06-02
1、前后端架构
2、 业务架构， 技术架构，功能描述
	 -、前端技术 VUE 
	 
1、知识库方案
2、800低代码试用
3、大数据方向
4、冲压大数据
   
 
1、述职报告
	-、16~17年中述职报告
	-、半年做了啥，未来做啥？
		-、介绍团队，
		-、介绍负责的模块，干啥的，价值是什么？
2、共享流程，需要出2个人测试流程功能
	-、黄江办公 
3、未来方向 
	-、模切2期
	-、冲压知识文库

4、800远程技术交流
	1、导入数据库，需要2开
	2、组织信息，支持Excel，微信，钉钉， 其他如OA需要二开。
	3、评论，自己开发
	
5、 请各模块统计一下各模块负责的系统，以及每套系统覆盖的覆盖的范围
明天早上9:30 给我，谢谢

2022-06-13
1、微软6.18  下午  ， 龙哥沟通  
2、找王磊沟通，共享流程支持
2.1、总监会，每个模块给到重点内容。
3、会议记录给到     √  
4、采购供应商对账数据更新  
5、 2022/05/19  下午 √×
	2022/05/30 下午    √×
    2022/05/31  一天    √×
    2022/06/06  一天    √×
	6/10 下午    蓝牙已打
	5/27 下午    蓝牙已打
	5/19 下午  √×
	5/13  下午  √×
	5/16 一天  √×
	
2022-06-20 
1、冲压文档修改
	1、现有的葵花宝典
	2、通过设备提取出来
	3、萃取知识。
2、模切2期，数据建模，业务建模找denny再沟通
3、1期，郑州接入跟进
		4、述职建议--->给出反馈。  解决方案，完成日期。
5、流程测试跟进，王磊
6、系统上线，跟进人员使用情况。反馈情况。
7、"各模块针对已上线系统，进行盘点
（系统使用数据、带来的价值）"
8、低代码demo2 --> 工时上报，
背景：当前每月工时是手工上报，做成系统化。
需求：
   1-需要开账号登录
   2-做了什么事情，大分类：项目，运维。 ，具体事项： 对应工时： 
	走流程审批（员工-主管-经理->）
   3-每个人都要填

	主要功能
-工时看板：直观的展示用户积分，商品库存，以及商品兑换趋势情况
-项目档案：可以新建填写或批量导入项目信息
-项目工时：可以申请工时填报，个人工时合计到项目工时

主要特点
-直观的展示项目工时的总体情况
-可以实时申请，支持历史数据导入
-可与第三方系统、应用进行扩展
	
9、大家各自负责的项目项目周报，当天要发出来，抄送给运营，给denny   
内容，部分，整体情况如何，本周做了什么，有什么问题， 未来2周要做什么。需要什么的资源和支持


-->>2022-07-01
1、述职建议--->给出反馈。  解决方案，完成日期。  周四开会讨论
2、周三过低代码的会议。
3、AR虚拟现实&安全网络 ， 分享PPT

-->>2022-07-06
1、HR招聘大数据
	1、从数据模型 -> 反推流程 
		需求：
			1、设计维度的业务模型（效果：能方便用户用BI自己选择维度，自己生成报表）
			2、走立项，规范项目流程
			3、搭建这个HR招聘的数据平台，独立于现有的数据平台（HR数据量小，可不用hadoop这一套，）。
		我们需要做的啥？
			1、业务流程梳理
			2、表单字段（确定每个流程的数据来源，数据字段）
			3、核心指标提供，以及展示要求-是否钻取（业务方）
			4、模型需满足现有指标-效率/稳定/， 且支持扩展。
			5、ETL&DB库选择（Kettle & doris/mysql ）
		资料：
			1、员工管理类
			2、人力资源职能类
			3、人力资源发展类
	2、关注哪些指标
	3、事实分类：
			岗位
			人员
	4、流程问题汇总
		1、IT申请单具体时候什么？
	5、多级穿透

-->>2022-07-07
1、HR建模培训
2、
	-各个流程节点详情  - suki ,吴浩，谭鹏
	-、沟通要带着问题
	-、技术选型后续研究，doris是否可以对接BI,数据权限怎么分配
3、Q2评价
4、周报发邮件



-->>2022-07-11
1、郑州厂区接入--  问题模块，修改张世明  √
2、AR，数据安全分享PPT， 周4晚上   【待办 ☆☆】
3、周报周五10点前  
4、其他厂区落实时间？二期是否可以做？  √
5、应用系统权限，
	开通人员权限是否匹配（离职，调职，权限是否更新）
6、统计开发需求达成率。  
7、领益学堂课程积极看  √
8、请各模块通知下去，7月18日 ：17:30 -18:30 安排储干部门见面会，  导师需要参加  √
9、招聘数据分析有什么进展？  -- 截止日期：2022-07-15 16:35  √
	1、highlight，lowlight
	2、进度， 需要协调那些？ 
		1）围绕项目目标，项目的进展是什么。切记”以终为始“原则报告项目进展，和把控项目进度。
		2）碰到什么问题，打算怎么解决。如需要帮助，什么帮助
		3）看到什么风险，（从风险发生的几率和风险发生带来的后果说明），打算怎么应对风险，需要什么帮助
		4）一周中，有什么highlight , lowlight.
10、运营1期：五厂等开通权限    -- 2022-07-15     【待办 ☆☆】
11、任务阶段仕梅   -- 2022-07-15  √
12、ikbase知识库会议后，有什么感想， ---  2022-07-18   【待办 ☆☆☆】
	-、记录能力已经有了，总结，深入探索到哪步？

-->>2022-07-15 denny沟通。
1、供应商介绍。
	-、1、准备问题。EXCEl，
	-、2、和suki，话我们有什么，  胡萝卜： 做这个事情对suki有什么好处。
	风险：	
		-、报告分析， 判断，预测式的，  在于招聘团队，他希望按什么的方式。kpi，反应在业务建模。 增加指标，增加
		-、技术问题：抽数，
		-、面向业务建模
		-、业务建模的主题是suki。
	边界确认。
		-、支持。
			以目标为出发点点，搞清楚谁来搞？
		-、协助suki面向业务的建模。
			-、他理想模型和现实模型的差异。
			
-->>2022-07-18
1、大易数据 -->  数据 -> 接口 
	大易API:
		3.3
		5.6,5.7,5.10,5.11  ~ 5.18 
		14.1,14.2
		8.1,
		3.1 ,5.11
2、SAP数据对接人。	？ --> 林黄祥
3、设计思路：					【待办 ☆☆☆】
	流程 + 现有数据模型
		-- > 业务建模 
	denny反馈
	1、数据呈现（对错） -> 数据分析（原因，问题） -> 预测  -> 结合现实决策。
	2、要根据用户需要设计业务模型。
4、SAP升级：  √
	1、升级前需要各系统测试现有业务是否有问题？ 每周连接方法都要测试1-2个接口。
	2、对接人:左持兴
	3、升级时间：2022-7-23 00:00~03:00  预计需要3H左右
5、储干需求：
	1、考核周期
	2、班车时间，班车地点
	3、怎么开展工作
6、储干英语水平：  √
	1、英语好的
	2、选两个人作为对接海外，denny直接带 
	3、工作地点东莞。
		各位领导同事，储干上午好，现需统计各位储干的英语水平，
		详情如下：
			背景：公司现有海外业务（印度、越南等）发展迅速，亟需英语能力优秀或热爱英语交流沟通的储干，高层直接辅导学习，对接海外IT业务。
			地点：东莞黄江
			名额：2人（储干）
		请各位储干在附件《储干英语水平统计-制造&物流IT》填写，截止日期今天下午16:00。  
7、模切1期：新厂、成都、郑州，已在使用，五厂、苏州、东台接入中。

-->>2022-07-20 denny总监会： （截止2022-07-21 下午4点  ，项目总结）
1、要求：明下午--> 		【待办 ☆☆☆】
			内容：负责重点事项的进度，清单。 最新状态，面向业务结果汇报，成绩，风险，问题，（根据）
				 示例：模切运营可视化1期：总结性报告，目的，方向。 ---> 龙雄
					HR招聘数据看板：筹备，目标，进展 （非技术话，意义，风险怎么解决）   ---> 王英楠
2、目标：每个月25号都交？（每个月整个总结：复盘团队，人员，组织，管理，问题，改进方法）  【待办 ☆☆】
3、报告规定：
		1、选择模板1,2
		 
8、资料  【待办 ☆☆☆ 】  √
2022-06-22 下午 1:00 ~5:30 
2022-07-08 

9、初版模型


分析问题&原因：
	-、招聘达成率低的原因
		-、渠道少  - 可统计
		-、人员不作为，未落实招聘    -- 招聘流程，节点时间统计（OA,大易，SAP，易入职）
		-、招聘岗位要求不合理	-- 可统计
		-、投递人员少，质量差	-- 可统计
		-、入职周期太长			-- 时间统计（投递简历->入职，时间统计）
		....
		
	-、离职原因收集
		-、不能胜任				-- 信息录入
		-、个人发展				-- 信息录入
		-、工作方式不满意		-- 信息录入
		-、同事关系矛盾			-- 信息录入
		....
	
	-、离职原因分析
		
	
1、招聘流程，节点时间统计，	
2、岗位要求审核机制。
		
怎么实现？


10、800低代码演示
11、储干培训计划。  下周二
12、salcomp,感想。 NAIR沟通要数据模型
13、数据库权限   √
14、suki沟通需求分析
	1、亿图
	2、ER缺少，入职，时长， 离职
	3、权限
	4、数据穿透， 从BG-BU,厂区， 
	5、suki提供，指标原因 ，  数据组分析数据来源

-->> 2022-7-25
1、	1.1、每月述职，周3。（本月计划，达成，  第二页团队人员，改进）  √
	1.2  述职建议  本周4     
		1、冲压质量知识库的搭建合并到集团知识库，由parker负责
		2、目前工作面铺得太大，建议以BG为试点，专项某一项，做质量预测，人力预警等
			1、落实HR招聘需求，由点到面
			2、模切BG业务跟进
		3、多和业务部门沟通赋能。
			1、每月组织一次业务能力培训。
			
2、微软开发大会分享（MR在领益智造的应用场景完善） -- > 集团IT， 廖淑兰   本周4  √
	我们也是准备通过这种技术，指导印度等等工艺调整、设备维护/调机
3、各系统梳理僵尸账号。 -- > 本周4 
4、本周梳理BUG类型，达成率  -- >  本周4   
5、HR人力，和suki沟通立项的事情【资料】。  本周4
6、确定东台，其他厂区的接入计划。		本周3   √
7、数据库权限方案。    周2    √
8、储干计划。  本周2      √
	-、根据调岗058岗位异动单。（吴恒，建文）
 
9、微软分享本地地址：   √
C:\Users\wang.ying.nan\Documents\DingConference\20220728-181626_王英楠_微软数据安全&MR分享
C:\Users\wang.ying.nan\Documents\DingConference\20220728-181626_王英楠_微软数据安全&MR分享

20417032706
410728199010157020

20417100823
411381199105110314
tp kb ， 主数据测试。
流程拉通（mes生产记录，良率分析，sqe来料，没有用Qms。）
自动化监控
自动生成程序报告
不太需要技术
TPKB大数据项目进展：
1、ETL流程主数据拉通使用
2、开发了一系列相关指标报表（MES,SQE）
3、完善了自动化监控，自动生成程序报告（用户反馈）
4、目前不需要技术支持


2022-08-01
1、仕梅计划。  -- 周五
2、每月一次业务培训
3、更新Q3 7-8月目标是否达成。达成原因。  √

4、问题深挖  ，钻取 
	
5、doris模型是否BI是否可以调用。
	首先要理解什么CUBE，通俗点讲你可以把理解成一个立方体，在立方体的不同位置放着数据。
	CUBE的好处就是按照你设计好的维度，把事实表的数据进行直接聚合得到结果，然后存放在CUBE里面，需要的时候用维度去切CUBE。
	finebi在cube取数方面的表现就相当优异。
6、大易数据
	1、新增，修改，删除 怎么更新， 	1、规则确定取数类型
	2、接口调用频次是怎么样的	1、目前5min读取一次
	3、接口有数据字典吗	

7、指标 & 问题+原因

	1、招聘达成率 = 实际招聘到岗人数/招聘需求人数*100％
		1、招聘需求人数是怎么定义？  （事先统计的还是根据时间过滤得来的。）
		2、实际招聘人数，按照是否入职计算？
	2、时间维度，  招聘达成率，面试达成率，月度留存率等一些指标， 日期取的是 招聘发布时间，入职时间？
	3、职位层级  指的是， 面试人还是招聘人？
	4、	招聘团队是怎么定义的？（类似于部门的概念？）
	
	RECRUITER_KEY	招聘人工号
	CANDIDATE_KEY	应聘人ID
	INTERVIEWER_KEY	面试人工号
	21680952cd0d088e54f7bf02c343878d7a6528f	2022-08-18 08:20:07	2022-08-18 08:20:07	2022-08-18	1412333260.17	1342962034.192	1456039183.372	0.969983	0.922339	2022-08-17
	入职结果（0 入职1 待入职 2 放弃入职）
	
	
	
2022-08-22
1.模型到数据，模型到图形
2.slow.change
3.命名以及事实表，（请求，申请），评测，简历等，AWS表分层清晰
一岗一人






4、苏州+东台进度， 
  TH，TC厂区接入。
  
  

1、流程操作是否规范
	1-、OA每个单据时间节点
	2-、OA流程是否有规范？
2、OA数据推送到大易 ， 岗位申请， HR招聘需求申请， 录用审批， IT需求单。


1、单个创建， 不能批量（附件）  【10个需求， 不能一次】
2、传输给大易的这套，不能直观反应需求。  大易HC管理，对表单优化。  【需求先做进去，后续有数据，直接显示 】
3、录用审批单，   大易触发录用审批-> OA单据-> 大易， 没问题，   同一个岗位多人录用，审批不变。 拟录用人【加字段，时间间隔，离职日期等】 

4、TPKB 项目是否需要协助？需要搞的项目。


2022-08-29/2022-09-02

1、更新开发考核KPI.  √
2、项目周报要发给运营。
3、周报， 模切按照工厂来，写进度    √
   二期，暂停到，不报了
4、仕梅 低代码  
5、围绕数据模型和数据源把具体ETL要开发的清单列好计划好  & 把open issue代讨论的管起来，加快推进节奏
6、wms，sap库存对比， 2022-9-13
7、HR系统配置图
9、数据库是否用大数据的，还是用谭鹏那边的数据库  √  --> HR
8、招聘需求人数 和计划到岗人数 是否是一个意思？
	1、工作台 - IT服务申请 - IT立项申请单 
	2、SAP抽数是否可以取大易
	另外，如果取这些状态信息，是直接取大易就可以，还是要取SAP ？SAP现在有现成的接口吗？
	3、OA抽数怎么抽？
10、领益文库路径： √
	0_集团公共->0-2_IT
	公司文档>0_集团公共>0-2_IT>0-0-1_内部文档>0-0-1-12_IT项目文档>HR招聘数据分析
11、3.8账号  √
	新厂模切：10013490    qqqq.1234
	郑州模切：01        123456
	苏州模切： 10028107          qw.1234
	东台3.8：10028107          123456
	华为直供/印刷： 10013223  qqqq.1234
	成都：10029408   1
	中炎模切/壳厂：10013223 123456
12、HR立项成本分析
	37 * 3 * 1000 = 111000
	45 * 1 * 1000 = 45000
	35 * 3 * 1000 = 105000
	45 * 1 * 1000 = 45000
	SAP,大易招聘系统，易入职，蓝凌OA
	150
	304000
	HR招聘数据分析，方案概述如下：
	1、梳理招聘HR业务，落地技术方案&数据分析模型。
	2、数据ETL(抽取,转化，加载)输出至PowerBI。
	3、迭代开发&运维。
13、doris需要监控系统的数据日志，操作日志   √
14、HR服务器IP地址：10.0.8.222 10.0.8.215 10.0.8.212


15、-、源数据源负责人写上， 
	-、提前沟通抽数事宜
	-、HR系统配置图
	-、wms仓库管理交流
	-、运营逻辑修改。  -- 暂时不修改  √


16、1、suki推进， OA，大易拉通进度
	2、PowerBI出一个人，研究
	3、项目提前到10月15
	4、每周开项目周会
	5、项目周报邮件
	6、每天发日报
	7、面试流程，评价，测评 接口是否可用？
		8、HC管理，拟录用审批， 入离职审批。  催促邓铭亮
		9、大易接口和流程管理 一一核对。 
		
	
	10、
		-、岗位申请 & HC管理  -->  OA招聘需求申请。
		-、
			3.3
			5.6,5.7,5.10,5.11  ~ 5.18 
			14.1,14.2
			8.1,
			3.1 ,5.11
		
			3.1 & 3.3  	
			
			5.6，5.10 ，5.13 （候选人库），5.14（人才库） ， 全状态
			应聘ID  --> 职位ID，
			简历ID  1 对多 应聘ID
			
			5.8 offer状态
			
			入离职接口回传 
			
		-、hcStatus Integer	否  hc状态(1：草稿，6：暂停，10：关闭，11：已完成，30：招聘中)
			-、参数需要填哪些？  1、多选， 2、 可以不传 
			-、增量更新怎么做？
					HC接口，增量如何抽？ 

2022-09-14  一天
2022-09-15 下午 14:30
2022/8/22  
S35244
S35264

cat /etc/redhat-release
	
	11、会议记录  2022-09-23

1、197审批单据异常跟进   礼拜一给出报告（2022-09-26） @张志忠 
2、工单给出报告 @张志忠
3、ups采购申请审批跟进 @张亚东
4、事故管理需指定责任人  @邓永斌
5、ssl安全加固下周组织会议核对 @王绪
6、国庆放假工作计划和安排要安排好 @all
	
	
刘丽鑫(求职意向：Java 开发工程师) -- java ，mysql，spring	 ，matlib,linux
	苏佳丽(求职意向：未知)-硕士 -- ytorch+深度学习，偏算法。
	吴晓(求职意向：大数据开发工程师)-- Hadoop、Hive，能够使用Hadoop和Hive开展数据
姚倩倩 --  求职意向：售前技术支持
张航（ 求职意向：Java 开发工程师）
	--李迅 ： 大数据  2022-09-30  14:30 - 15：00 


取消吧，但是要求大家提交报告，要求各位高级经理在放假结束前一定要读报告，要把里面的问题的行动计划拿出来。09:03要求报告人在钉闪会把需要其它部门和管理团队关注的项，用文字标红描述出来。

因总监会时间冲突，本周IT例会取消。另外需各模块负责人完成以下事项：
1、各位高级经理节前需读报告，highlight有问题的行动计划。
2、各位报告人需要与其他部门及管理团队关注的项目，在钉闪会上hightlight。

2022-09-30
1、系统部署架构等技术相关的文档要放在知识库，方便大家查阅文件，业务内容相关的和Suki约定
2、OK， 开发&阶段可以用powerbitest.lstech.com, 但是生产环境应该给HR新建一套hbi.lstech.com


1、更新Q3进度
2、国庆约suki过异常问题（两个风险问题要往里面挖，表述要更具体，要提出如果我们做什么可以化解这个风险）
3、模型图

 22
========================================================================================================================================
========================================================================================================================================

111、git设置远程仓库登录， 账号验证生成token， 
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

git remote set-url 远程仓库的名称（默认为origin） https://刚刚复制的口令@github.com/你的仓库的用户名称/仓库名称.git
git remote set-url origin https://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@github.com/harrily/utils.git

参考地址： https://blog.csdn.net/qq_42592823/article/details/123913963

2、git 清理大文件
问题：
Enumerating objects: 119, done.
Counting objects: 100% (119/119), done.
Delta compression using up to 8 threads
Compressing objects: 100% (95/95), done.
Writing objects: 100% (100/100), 137.60 MiB | 1.65 MiB/s, done.
Total 100 (delta 30), reused 0 (delta 0)
remote: Resolving deltas: 100% (30/30), completed with 12 local objects.
remote: error: Trace: 9dfd0dd90a7d9d673aa9827a2ed0a352eddd6cce45b3524c4051341c269edd0c
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File conf/hive婧愮爜/hive.tar.gz is 101.01 MB; this exceeds GitHub's file size limit of 100.00 MB
remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
To https://github.com/harrily/utils.git
 ! [remote rejected] master -> master (pre-receive hook declined)
error: failed to push some refs to 'https://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@github.com/harrily/utils.git'

解决： 查找大文件，删除
git rev-list --objects --all | grep "$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk '{print$1}')"
git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch your_file_name' --prune-empty --tag-name-filter cat -- --all
git push origin --force --all

git撤回add：

git reset HEAD 后面什么都不跟的，就是上一次add 里面的内容全部撤销
git reset HEAD conf/hive源码/hive.tar.gz 后面跟文件名，就是对某个文件进行撤销

参考资料： https://blog.csdn.net/Bynine9/article/details/125798625


直接删除大文件： 
git rm --cached conf/hive\346\272\220\347\240\201/hive.tar.gz
git rm --cached conf/hive源码/hive.tar.gz
git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch conf/hive源码/hive.tar.gz'
git commit --amend -CHEAD
git push --force origin master


【git commit --amend -CHEAD】日志： 
 delete mode 100644 conf/hive\346\272\220\347\240\201/hive-exec-1.2.1000.2.5.3.0-37.jar
 delete mode 100644 conf/hive\346\272\220\347\240\201/hive.tar.gz
参考资料： https://blog.csdn.net/SjwFdb_1__1/article/details/109499214


	最终解决：
		1、git rm --cached conf/hive源码/hive.tar.gz  
		  提示文件不存在 （fatal: pathspec 'conf/hive源码/hive.tar.gz' did not match any files）
		2、在文件夹中新增此文件 后 
				执行 git add . 
			执行 git rm --cached conf/hive源码/hive.tar.gz  提示 （rm 'conf/hive源码/hive.tar.gz'）
		3、git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch conf/hive源码/hive.tar.gz'
		4、git commit --amend -CHEAD
		5、git push （git push --force origin master）

	资料：https://segmentfault.com/a/1190000023471485
			http://wjhsh.net/flying_bat-p-4172435.html  finall

参考资料：https://blog.csdn.net/Heney33/article/details/125641483
https://blog.csdn.net/weixin_46306232/article/details/126546441

112、审车

要车主亲自办理，车子不在也可以。
车贷还清后需要做三件事：

第一件：办理解押业务

因为办理车贷时的车辆登记证书被抵押在银行，需要还清贷款后开具结清证明，同时将车辆登记证明、车辆合格证明、购车合同、抵押材料等领回。然后带上上述材料、个人身份证明、还款银行卡到车管所办理解除抵押登记手续，就可以办理过户和上牌手续了。

第二件：变更车险受益人

在办理贷款购车时，往往银行或车贷机构为了规避风险，将车险受益人填写为对应的银行或车贷机构，如果还清车贷不把车险受益人变更为车主本人，车辆出险，车主本人就不能获得保险赔偿，因此变更车险受益人很有必要。

第三件：拆除GPS定位装置

贷款购车的车辆，银行或车贷机构为了将风险降到最低，一般都会安装GPS装置，很多车主并不知道这么一回事，但是在结清车贷后，最好将车辆开到4s店检查一遍，将隐秘的GPS定位装置拆除，保障个人隐私。当然也不排除有些车辆是没有安装GPS定位装置的。

在办理完车贷结清手续、变更车险受益人、拆除GPS装置后，就可以安心驾驶自己的车辆，如果觉得贷款几年开的车也够了，打算将这台车卖掉或过户给别人，重新再买一辆也是可以的。


sr-mysql-hr01 | 老领益DC
10.0.8.212

hbase-site.xml 备份
主机：lymaster01 :
路径：/opt/hbase-site_backup/hbase-site.xml


unable to find index cache
1、修改hbase配置
添加
<property>
		<name>phoenix.coprocessor.maxServerCacheTimeToLiveMs</name>
		<value>6000000</value>
	</property>
	
参考资料：
	https://blog.csdn.net/u012551524/article/details/86084256
	https://blog.csdn.net/qq_36732988/article/details/87915449
scp /usr/hdp/2.5.3.0-37/hbase/conf/hbase-site.xml  root@lymaster02:/usr/hdp/2.5.3.0-37/hbase/conf/


1、模切达成周报	【主键：db,dim,week,week_times,end_date,Fteam,fmrp,flag】，
				【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_by_achieve_week_report  -> DW.DWS_MOQIE_BY_ACHIEVE_WEEK_REPORT 

1.1、模切达成周报-目标值 【主键： db,dim,fmrp,target 】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_by_achieve_week_goalnum ->  DW.DWS_MOQIE_BY_ACHIEVE_WEEK_GOALNUM

2、模切达成日报 【主键：db,dim,FplanNumber,end_date,period,Fteam,fmrp,fmanuorder,fproduct,factory_name,
			factory_location,fmachine,personname,skill,liableperson】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_by_achieve_day_report  ->  DW.DWS_MOQIE_BY_ACHIEVE_DAY_REPORT

3.1、稼动率周报-by机器类型 【主键：db,dim,week,week_times,flag,start_time,factory_location,machine_type,type_count,fteam】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_utilization_rate_week_by_type ->  DW.DWS_MOQIE_UTILIZATION_RATE_WEEK_BY_TYPE

3.2、稼动率周报-by机器【主键：db,dim,week,week_times,flag,start_time,factory_location,machine_type,machineno,fteam】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_utilization_rate_week_by_machine -> DW.DWS_MOQIE_UTILIZATION_RATE_WEEK_BY_MACHINE

4、 稼动率日报 【主键：dim,db,ent_date,flag,fteam,period,factory_location,machineno】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_utilization_rate_day -> DW.DWS_MOQIE_UTILIZATION_RATE_DAY 

5、工单进度报表 【主键： 所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_work_order_progess   ->  DW.DWS_MOQIE_WORK_ORDER_PROGESS 

5.1、工单进度报表-手工详情【主键： 所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_work_order_progess_detail_by_hand -> DW.DWS_MOQIE_WORK_ORDER_PROGESS_DETAIL_BY_HAND

5.2、工单进度报表-模切详情【主键： 所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_work_order_progess_detail_by_moqie -> DW.DWS_MOQIE_WORK_ORDER_PROGESS_DETAIL_BY_MOQIE


6、当班物料损耗日报 【主键： 所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_material_loss_day_report -> DW.DWS_MOQIE_MATERIAL_LOSS_DAY_REPORT

7.1、 NUD良率报表 （石墨）- by 产品 (左图)【主键：db,dim,flag,ent_date,fproduct】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_nud_yield_rate_by_prod -> DW.DWS_MOQIE_NUD_YIELD_RATE_BY_PROD 

7.2、 NUD良率报表 （石墨）- by 不良原因（中间图） 【主键：所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_nud_yield_rate_by_reason -> DW.DWS_MOQIE_NUD_YIELD_RATE_BY_REASON

7.3、 NUD良率报表 （石墨）- by 产品，操作手，不良原因明细 【主键：所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_nud_yield_rate_by_lineemp ->  DW.DWS_MOQIE_NUD_YIELD_RATE_BY_LINEEMP

7.4、 NUD良率报表 （石墨）- by 产品，操作手，每个机台，不良原因明细 【主键：所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moqie_nud_yield_rate_by_lineemp_machine  -> DW.DWS_MOQIE_NUD_YIELD_RATE_BY_LINEEMP_MACHINE

8、厂别 【主键 ： db,fid,dim】
			【第二次导入：l_date=2022-01-05  old_date='2021-01-04'】
dwservice.dws_moqie_factory  -> DW.DWS_MOQIE_FACTORY

9.1、模切人员工时明细 - 不传组别    【主键：所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moiqe_manpower -> DW.DWS_MOIQE_MANPOWER 

9.2、模切人员工时明细 - 传组别    【主键：所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moiqe_manpower_by_single  -> DW.DWS_MOIQE_MANPOWER_BY_SINGLE
9.3、模切项目工时明细 - 不传组别    【主键：所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moiqe_item_work_time -> DW.DWS_MOIQE_ITEM_WORK_TIME 

9.4、模切项目工时明细 - 传组别    【主键：所有字段（除了分区字段day）】
			【第一次导入：l_date=2022-01-05  old_date=''】
dwservice.dws_moiqe_item_work_time_by_team_item   -> DW.DWS_MOIQE_ITEM_WORK_TIME_BY_TEAM_ITEM

10、组别工具表 【主键 ：所有字段（除了分区字段day）】
	dwservice.dws_mes_group -> DW.DWS_MES_GROUP

/**
	手工
**/

dwservice.dws_hand_by_achieve_week_report  ->  DW.DWS_HAND_BY_ACHIEVE_WEEK_REPORT

dwservice.dws_hand_achieve_day_by_item_merge_fmrp->DW.DWS_HAND_ACHIEVE_DAY_BY_ITEM_MERGE_FMRP
dwservice.dws_hand_achieve_day_by_item ->DW.DWS_HAND_ACHIEVE_DAY_BY_ITEM

	
	
dwservice.dws_hand_aoi_utilization_rate_week -> DW.DWS_HAND_AOI_UTILIZATION_RATE_WEEK 
dwservice.dws_hand_aoi_utilization_rate_week_by_offline_data -> DW.DWS_HAND_AOI_UTILIZATION_RATE_WEEK_BY_OFFLINE_DATA
dwservice.dws_hand_aoi_utilization_rate_week_by_detail -> DW.DWS_HAND_AOI_UTILIZATION_RATE_WEEK_BY_DETAIL
	
dwservice.dws_hand_effic_day -> DW.DWS_HAND_EFFIC_DAY
dwservice.dws_hand_effic_day_by_detail -> DW.DWS_HAND_EFFIC_DAY_BY_DETAIL

dwservice.dws_hand_through_rate - > DW.DWS_HAND_THROUGH_RATE
	
2021-12-19

dwservice.dws_hand_manpower -> DW.DWS_HAND_MANPOWER 
dwservice.dws_hand_item_work_time -> DW.DWS_HAND_ITEM_WORK_TIME 
dwservice.dws_hand_item_work_time_by_team_item   -> DW.DWS_HAND_ITEM_WORK_TIME_BY_TEAM_ITEM
dwservice.dws_hand_manpower_by_single  -> DW.DWS_HAND_MANPOWER_BY_SINGLE
重新导入2021-12-19分区数据

dwservice.dws_mes_group -> DW.DWS_MES_GROUP


-- 2021-12-29
dwservice.dws_operation_by_moqie_utilization ->  DW.DWS_OPERATION_BY_MOQIE_UTILIZATION



2022-01-04
dwservice.dws_hand_effic_day_update -> DW.DWS_HAND_EFFIC_DAY
dwservice.dws_hand_effic_day_by_detail_update -> DW.DWS_HAND_EFFIC_DAY_BY_DETAIL




2022-03-19 
1、正式环境 ，  模切+ 手工索引构建

》》》》》






	4月 = 1310.625 +  1462.5  = 2773.125
	5月 =  1429.875

 nohup sh step_start3.sh 2021-05-18  false >> step_start3.log 2>&1 &

2-、过账日期 怎么来的
3-、根据 采购员 区分不了  材料和设备 （余建春的数据中，包含 19F* 开头的数据。）
4-、根据101， 区分不了原材料。  +  【18F*, 11F*, 585*】 (danshi  585* 的物料，没有入库，故没有 “移动类型”)



1-、添加 FATP设备的数据至 ，计算CD时，
2-、添加FATP的CD计算。
3-、FATP的数据按时剔除， “深圳市领懿科技发展有限公司” ， 供应商=以及公司等于的数据
4-、土耳其的数据，先判断是否是101， 然后加上物料编码BOM判断。
5-、会存在mein 的订单单位， 和收货的不一致， 因为用的是收货的数量，需排查‘。

6-、设备的5月达成率，以及月报。

	EKPO-PSTYP = '3'
	0 标准 ，2 寄售，3 委外
4500471093



2021-06-11
本周任务进度：：
1、抽取赛尔康移动类型相关表bwart （已完成）
2、FATP逻辑修改（已完成）
	-、根据移动类型+BOM物料区分土耳其数据
	-、计算otherCD（免费料号）
3、提供BOM数据列表后端上传入口。（已完成）



2021-06-21
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
FATP数据核对：
step0 :  【脚本pkid中已添加step_start3.sh】
	生成FATP赛尔康，设备数据 sap.ods_sap_zfmm_044_fatp_salcomp_equip_pkid 表。
	脚本：generate_fatp_sakcomp_jituan_by_jichu.sh 
	
echo "--开始执行 generate_fatp_sakcomp_jituan_by_jichu.sh 脚本"
 sh /root/shell/hive/purchase_bi_shell/step_shell/generate_fatp_sakcomp_jituan_by_jichu.sh $l_date >> /root/shell/hive/purchase_bi_shell/step_shell/generate_fatp_sakcomp_jituan_by_jichu.log 2>&1 &&
echo "- generate_fatp_sakcomp_jituan_by_jichu.sh脚本执行完毕-"
step1：
	【脚本pkid中已添加】
-- 044 新增工厂append数据写入，到044指定分区。
insert overwrite table sap.ods_sap_zfmm_044 partition(day='2020-01-01')
SELECT data_loadtime, ekgrp, appln, werks, gsber, butxt, zqj, char6, class1, class2, class3, inum, matnr, lifnr, name1, kostl, idnlf, wglif, urztp, urzzt, maktx, zguige, menge, netpr, waers, zterm, bpmng, meins, wkurs, zsl, zbd1t, zje5, zje6, zprice1, zprice2, zje1, zje2, schpr, zje3, zje4, zjz1, zjz2, zjz3, zjz4, zjz5, zjz6, rueck, urznr, icode, mblnr, zeinr, zex3, zex4, zex5, zex6, zex7, zex8, zex10, zex9, proportion, unitprice, account, updatedprice, replacecd, totalcd, zfzr1, zfzr2, zfzr3, zjobnumber, name2, eknam, zbg
FROM sap.ods_sap_zfmm_044_append

step2:
	惠州剔除：
		ZX854	东莞市万胜劳保用品有限公司
		CCKF0001	惠州长城开发科技有限公司
		A6081	深圳市领懿科技发展有限公司
		
		supplier_name not in ('东莞市万胜劳保用品有限公司','惠州长城开发科技有限公司','深圳市领懿科技发展有限公司','南京紫牛软件科技有限公司','江苏紫米电子技术有限公司','小米通讯技术有限公司')
	珠海：
		需要剔除供应商列表：
			
			ZN01 南京紫牛软件科技有限公司 / ZM07 江苏紫米电子技术有限公司 / XM0001 小米通讯技术有限公司（Xiaomi H.K. Limited）
		深圳市领懿科技发展有限公司
		
	
	对比数据发现：
		1、珠海公司， 5月PA计算了 ，'南京紫牛软件科技有限公司', '江苏紫米电子技术有限公司'
			代码此供应商不移除， 加上后 5,6月PA正常。
		2、惠州的数据， 5月只到日期2021-04-26 ， 6月没数据
			:发现是append数据写入到 044数据少了。【Permission denied: user=root, access=WRITE, inode】
				已手动修改044分区的2020-01-01的写入权限。
		3、FATP赛尔康的  汇率2， 单独处理，根据origin ， 后续优化。
		4、FATP日期优化，如果是 FATP-设备的 ，使用 char6， 需要计算月报的使用 zex9
				： 发现 赛尔康的FATP的bom料， 入库日期都是有值的，使用char6（入库没有，取订单的）也是可以的。
			
		
		5、加上弹框提示， 系统升级
		
		6、对比发现， bom料
			3月少了
				11F-JSTP3511，
				585-F162115
			
			4月和6月多了
				19F-820100004V9T
				19F-820600002J9T
			
			5月，11F-JSNP6003  月报净价 = 0，月报2条，   订单中，1条净价=15.9  有3条记录
			
			step0.0001 
			step0.0002 更新汇率值
				(case 
			when `date` = '2021-03' then 0.9
			when `date` = '2021-04' and material_code in ('18F-RSM50500A','18F-ZBM51100','18F-JDM51600A') then 0.82
			when `date` = '2021-04' and material_code not in ('18F-RSM50500A','18F-ZBM51100','18F-JDM51600A') then 0.9
			when `date` = '2021-05' and material_code in ('11F-JS7037BR','11F-JSTIS420','18F-PTJ19S00A','18F-QJESD001','585-F162010','585-F162115','18F-TPJ19S154') then 0.76
			when `date` = '2021-05' and material_code not in ('11F-JS7037BR','11F-JSTIS420','18F-PTJ19S00A','18F-QJESD001','585-F162010','585-F162115','18F-TPJ19S154') then 0.82
			when `date` = '2021-06' then 0.737
		else 0.82 end )
step3：分区表维护
jituanhr.ods_jituanhr_hrms_db_20170714_t_employee  需按天抽取 且 2020-10-03不要清除数据（用来获取老工号，匹配订单中的用户工号） 【已手动添加至 2021-06-21】
sap.ods_sap_zffi_009	已按天抽取。
sap.custom_rate     目前写死分区 2020-12-06

Step4:
	2、土耳其区分：
		1-、采购员+公司
		and butxt = 'Salcomp Turkey Co., Ltd' and zjobnumber in ( 'EXTYUJI' ,'ORALOK','WANGMI','Ahmet Kaplan','HBusra Elmali')
		
			1-、计算PA,CD
				101（原材料） ，
				103（非原材， 设备）
				总务-固定资产（暂时没有）-->  采购员区分
			2-、根据bom料号。
				('11F-JS7037BR','11F-JSNP6003','11F-JSNS3303','11F-JSPUR533','11F-JSTIS420','11F-JSTP3513','18F-BDP26100A','18F-BQJ19S00A','18F-BQJ19S070','18F-BQL66510A','18F-BQM52100A','18F-FDT88510','18F-GBM50500A','18F-HJCJ19S0','18F-HJCM5050','18F-HJGJ19S0','18F-HJGM5050','18F-HJGM5051','18F-JDM51600A','18F-KTJ19S00A','18F-KTL66500A','18F-KTM50500A','18F-KTM51600A','18F-LDT88510A','18F-PEJ19S10A','18F-PEL66510A','18F-PTJ19S00A','18F-QJESD001','18F-RMM51100','18F-RSM50500A','18F-TGJ19S00A','18F-TPJ19S154','18F-WTJ19S00A','18F-WTM50500A','18F-WTM50501A','18F-ZBJ19S11','18F-ZBM51100','18F-ZBM51600A','19F-820100004V9T','19F-820600002J9T','585-F162010')

		-- 新规则
				-- 1-、剔除深圳领懿科技发展有限公司  为公司以及供应商
                -- 2-、根据044，赛尔康S4，集团S4区分数据
                  when trim(stock_org_name) in ("领懿实业（珠海）有限公司","领懿实业（珠海）有限公司惠州分公司" )
                  and purchase_group_code = "A18" and  supplier_name != "深圳市领懿科技发展有限公司"   then "18"
                -- when  trim(stock_org_name) = "领懿实业（珠海）有限公司"  and purchase_group_code = "A15" then "19"
                when ZBG = "FATP" and trim(stock_org_name) in ("领懿实业（珠海）有限公司","领懿实业（珠海）有限公司惠州分公司" )
                and supplier_name != "深圳市领懿科技发展有限公司"  then "18"    -- 赛尔康基础表获取FATP数据
                when ZBG = "FATP-EQUIP" and trim(stock_org_name)in ("领懿实业（珠海）有限公司","领懿实业（珠海）有限公司惠州分公司" )
                and supplier_name != "深圳市领懿科技发展有限公司" then "19"  -- 基础表获取FATP-EQUIP数据


					-- new新规则
						-- 1-、剔除深圳领懿科技发展有限公司  为公司以及供应商
						-- 2-、根据044，赛尔康S4[bom,非bom，设备]，集团S4区分数据	
					when  origin in ("sap.ods_sap_zfmm_044","sap.ods_sap_zfmm_044_jishou") 
							and trim(stock_org_name) in ("领懿实业（珠海）有限公司" ,"领懿实业（珠海）有限公司惠州分公司")  
							and purchase_group_code = "A18" 
							and supplier_name not in ("东莞市万胜劳保用品有限公司","惠州长城开发科技有限公司","深圳市领懿科技发展有限公司","南京紫牛软件科技有限公司","江苏紫米电子技术有限公司","小米通讯技术有限公司")
					then "FATP"
					when  origin in ("salcomp_s4") 
							and trim(stock_org_name) in ("Salcomp Turkey Co., Ltd")  
							and ZBG in( "FATP")
					then "FATP"
					when  origin in ("salcomp_s4") 
							and trim(stock_org_name) in ("Salcomp Turkey Co., Ltd")  
							and ZBG in( "FATP-NOBOM")
					then "FATP-NOBOM"
					when  origin in ("salcomp_s4") 
							and trim(stock_org_name) in ("Salcomp Turkey Co., Ltd")  
							and ZBG in( "FATP-EQUIP")
					then "FATP-EQUIP"
					when  origin in ("jituan_s4") 
							and trim(stock_org_name) in ("领懿实业（珠海）有限公司" ,"领懿实业（珠海）有限公司惠州分公司")  
							and ZBG in( "FATP-EQUIP")
							and supplier_name not in 
							("东莞市万胜劳保用品有限公司","惠州长城开发科技有限公司","深圳市领懿科技发展有限公司","南京紫牛软件科技有限公司","江苏紫米电子技术有限公司","小米通讯技术有限公司")
					then "FATP-EQUIP"
						
						
					-- 新规则
					-- 1-、剔除深圳领懿科技发展有限公司  为公司以及供应商
					-- 2-、根据044，赛尔康S4[bom,非bom，设备]，集团S4区分数据
					when  origin in ("sap.ods_sap_zfmm_044","sap.ods_sap_zfmm_044_jishou") 
							and trim(stock_org_name) in ("领懿实业（珠海）有限公司" ,"领懿实业（珠海）有限公司惠州分公司")  
							and purchase_group_code = "A18" 
							and supplier_name not in ("东莞市万胜劳保用品有限公司","惠州长城开发科技有限公司","深圳市领懿科技发展有限公司","南京紫牛软件科技有限公司","江苏紫米电子技术有限公司","小米通讯技术有限公司")
					then "18"
					when  origin in ("salcomp_s4") 
							and trim(stock_org_name) in ("Salcomp Turkey Co., Ltd")  
							and ZBG in( "FATP")
					then "18"
					when  origin in ("salcomp_s4") 
							and trim(stock_org_name) in ("Salcomp Turkey Co., Ltd")  
							and ZBG in( "FATP-NOBOM")
					then "20"
					when  origin in ("salcomp_s4") 
							and trim(stock_org_name) in ("Salcomp Turkey Co., Ltd")  
							and ZBG in( "FATP-EQUIP")
					then "19"
					when  origin in ("jituan_s4") 
							and trim(stock_org_name) in ("领懿实业（珠海）有限公司" ,"领懿实业（珠海）有限公司惠州分公司")  
							and ZBG in( "FATP-EQUIP")
							and supplier_name not in 
							("东莞市万胜劳保用品有限公司","惠州长城开发科技有限公司","深圳市领懿科技发展有限公司","南京紫牛软件科技有限公司","江苏紫米电子技术有限公司","小米通讯技术有限公司")
					then "19"
step5: 
	-1、format 的 FATP的币别，
	-2、更新所有公司的area值。
	-3、CD表，添加 salcomp_s4 ， jituan_s4  计算CD
	
	
		case 
		when  trim(stock_org_name) = 'LY INVESTMENT (HK) LIMITED'  then  'HK'
		when  trim(stock_org_name) = 'LY INVESTMENT (VIETNAM) LIMITED' then '海外'
		when  trim(stock_org_name) = 'LY INVESTMENT(HK) LIMITED' then 'HK'
		when  trim(stock_org_name) = 'Salcomp Turkey Co., Ltd' then '海外'
		when  trim(stock_org_name) = 'TLG INVESTMENT (HK) LIMITED'  then 'HK'
		when  trim(stock_org_name) = 'TLG INVESTMENT(HK)LIMITED'  then 'HK'
		when  trim(stock_org_name) = 'TRIUMPH LEAD (SINGAPORE)'  then '海外'
		when  trim(stock_org_name) = '东台市富焱鑫五金产品有限公司' then '华东'
		when  trim(stock_org_name) = '东莞市鑫焱精密刀具有限公司' then '华南'
		when  trim(stock_org_name) = '东莞盛翔精密金属有限公司'  then '华南'
		when  trim(stock_org_name) = '东莞领杰金属精密制造科技有限公司' then '华南'
		when  trim(stock_org_name) = '东莞领汇精密制造科技有限公司' then '华南'
		when  trim(stock_org_name) = '东莞领益精密制造科技有限公司' then '华南'
		when  trim(stock_org_name) = '成都领泰科技有限公司' then '华西'
		when  trim(stock_org_name) = '成都领益科技有限公司' then '华西'
		when  trim(stock_org_name) = '江门安磁电子有限公司' then '华南'
		when  trim(stock_org_name) = '深圳市合力通电子有限公司' then '华南'
		when  trim(stock_org_name) = '深圳市诚悦丰科技有限公司' then '华南'
		when  trim(stock_org_name) = '深圳市领懿科技发展有限公司' then '华南'
		when  trim(stock_org_name) = '深圳市领滔科技有限公司' then '华南'
		when  trim(stock_org_name) = '深圳市领略数控设备有限公司' then '华南'
		when  trim(stock_org_name) = '苏州领裕电子科技有限公司' then '华南'
		when  trim(stock_org_name) = '苏州领镒精密技术有限公司' then '华南'
		when  trim(stock_org_name) = '郑州领胜科技有限公司' then '华南'
		when  trim(stock_org_name) = '领先科技(东台)有限公司' then '华东'
		when  trim(stock_org_name) = '领懿实业(珠海)有限公司' then '华南'
		when  trim(stock_org_name) = '领懿实业(珠海)有限公司惠州分公司' then '华南'
		when  trim(stock_org_name) = '领益科技(深圳)有限公司' then '华南'
		when  trim(stock_org_name) = '领益科技(深圳)有限公司' then '华南'
		when  trim(stock_org_name) = '领胜城科技(江苏)有限公司' then '华东'
		when  trim(stock_org_name) = '领胜城科技(江苏)有限公司' then '华东'
		when  trim(stock_org_name) = '领胜电子科技(深圳)有限公司'  then '华南'
		when  trim(stock_org_name) = '领胜电子科技(成都)有限公司 外购模具入库单' then '华西'
		when  trim(stock_org_name) = '领胜电子科技(深圳)有限公司' then '华南'
		when  trim(stock_org_name) = '领胜科技(苏州)有限公司' then '华东'
		when  trim(stock_org_name) = '领镒(江苏)精密电子制造有限公司' then '华东'
		when  trim(stock_org_name) = '领镒精密五金制造(无锡)有限公司' then '华东'
		when  trim(stock_org_name) = '领镒(江苏)精密电子制造有限公司' then '华东'
	else '' end as area



step6、回溯
		赛尔康的数据 ，精确到  2021-06-15
		集团S4 基础 2021-06-21
	
	-、salcomp_s4 的数据，存在pkid为null。 暂时md5处理。rand()

	
4275.526316 -> 3190

2021-06-25 需求
1、FATP设备模块想挪到角落去，不用放在那么明显的位置
2、目前厂区采购额的主页面上显示不清晰，他们想要看到总额，然后总额后直接跟着分列
	-、“月报数据一览” 与 “厂区采购额” 联动 ，前者日期变动 -> 后者数据跟随变化。
		-、pa小tap
	-、“厂区采购额” 放置 页面中心
	-、图表的 柱状图顶部显示金额
3、系统弹框提示	

4、物料类型优化
物料类型细分。未知类型。 其他-> 未知
物料类型->轮播关掉
物料类型->页面展示百分比扩大了100倍 【已修改】

5、公司名称-> 简称



1、FATP设备模块想挪到角落去，不用放在那么明显的位置   √
2、目前厂区采购额的主页面上显示不清晰，他们想要看到每个公司的PA，CD信息  √
	- “厂区采购额”图形修改位置 【新样式类似于“物料类型采购额”图表】
		-、（X轴=公司名称， Y抽=PA，CD，CD比例， 
		-、右上角= 显示日期范围   ，
		-、空白处=显示by月份的PA，CD值 ，
		-、柱状图顶部显示金额 
	-、“厂区采购额” 图表与 “FATP设备基础交易记录”图表 交换位置
3、首次进入“CD月报”页面->系统弹框提示【内容暂定，数据取自mysql/phoenix】	  √
4、页面所有轮播图隐藏自动轮播功能。   √

5、“厂区采购额”  公司采用简称。  -> 是否可行待测试。   
		-、汤加丽提供的图片，显示简称的，暂时未找到出处。
		-、燕工反馈的 ZFMM_012 暂时没有公司简称，且存在中文乱码。
		-、使用sap.base_t001查看，没发现有公司简称
		-、lfa1
	
	
	
物料类型细分。未知类型。 其他-> 未知
物料类型->轮播关掉
物料类型->页面展示百分比扩大了100倍 【已修改】


蓝图：
	排个计划
	

赛尔康->原因
设备->线下数据。
通信->问题点
	拍个计划

弹框提示。

-、线下数据推送。


T_ZTMM_F044

正式：
dolphinscheduler -> 问题排查
master: prodata02,04
apiserver:prodata02,03
alterserver:prodata02
worker:prodata03,04

查看master是否活跃：netstat -tunlp | grep 5678
日志目录： /opt/dolphinscheduler/1.3.6/dolphinscheduler_install/logs/
查看服务：	 ps -def |grep  org.apache.dolphinscheduler.server.master.MasterServer

dolphinscheduler-master.log
ll -th | head -n15

dolphinscheduler  正式  服务器监控脚本：
监控任务主机：prodata03、prodata04
测试监控目录：/home/dolphinscheduler/moniter
操作用户：dolphinscheduler
定时任务：contab -l


测试：
master: lyzk01,02
apiserver:lyzk01
alterserver:lyzk02
worker:lyzk02,03


dolphinscheduler 定时监控脚本：

*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk03_worker.sh >> moniter_lyzk03_worker.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk02_worker.sh >> moniter_lyzk02_worker.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk02_master.sh >> moniter_lyzk02_master.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk01_master.sh >> moniter_lyzk01_master.log 2>&1


*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_prodata03_worker.sh >> moniter_prodata03_worker.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_prodata04_worker.sh >> moniter_prodata04_worker.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_prodata02_master.sh >> moniter_prodata02_master.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_prodata04_master.sh >> moniter_prodata04_master.log 2>&1


/home/dolphinscheduler/moniter
ssh root@$hostname 'ps -fe|grep org.apache.dolphinscheduler.server.master.MasterServer |grep -v grep'
jps -lm | grep org.apache.dolphinscheduler.server.master.MasterServer


dolphinscheduler 测试服务器监控脚本：
监控任务主机：lyzk01、lyzk02
测试监控目录：/home/dolphinscheduler/moniter
操作用户：dolphinscheduler
定时任务：contab -l
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk03_worker.sh >> moniter_lyzk03_worker.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk02_worker.sh >> moniter_lyzk02_worker.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk02_master.sh >> moniter_lyzk02_master.log 2>&1
*/1 * * * * source /etc/profile && cd /home/dolphinscheduler/moniter/  && sh moniter_lyzk01_master.sh >> moniter_lyzk01_master.log 2>&1


=====================================================================================================================================
=====================================================================================================================================
=====================================================================================================================================



#!/bin/bash
################################################################################################
##  监控dolphinscheduler   Master服务进程。
##	执行命令: nohup sh /home/dolphinscheduler/moniter/moniter_lyzk01_master.sh   >> moniter_lyzk01_master.log 2>&1
################################################################################################

hostname=lyzk01
l_date=`date +'%Y-%m-%d %H:%M:%S'`
echo "--------> 监控 start :${hostname} Master 进程是否正常   <--------"
ssh dolphinscheduler@$hostname "ps -def  | grep org.apache.dolphinscheduler.server.worker.WorkerServer | grep -v grep"
if [ $? -ne 0 ]
then
	echo "${l_date} 【dolphinscheduler-Master 监控 - ERROR】 机器:${hostname} Master 5678端口异常退出，若进程存在，则kill进程，尝试重启 "
	pid=`jps -lm | grep org.apache.dolphinscheduler.server.master.MasterServer | awk -F ' ' '{print $1}'`
	if [ "$pid" = "" ]
	then 
		echo "${l_date} 【dolphinscheduler-Master 监控 - ERROR】 机器:${hostname} Master 进程不存在，无须kill"
	else	
		echo "${l_date} 【dolphinscheduler-Master 监控 - INFO】 机器:${hostname} Master 进程pid=$pid，开始kill进程"
		kill -9 $pid
	fi
	echo "${l_date}【dolphinscheduler-Master 监控  - ERROR 】 机器:${hostname} Master 进程异常，尝试重启"
	/opt/dolphinscheduler/1.3.6/dolphinscheduler_install/bin/dolphinscheduler-daemon.sh start master-server  
		if [ $? -ne 0 ]
			then
			echo "${l_date}【dolphinscheduler-Master 监控】 机器:${hostname} Master 进程重启失败，请登陆机器查看详情。"
		else
			echo "${l_date}【dolphinscheduler-Master 监控】 机器:${hostname} Master 进程重启成功。"
		fi
else
	echo "${l_date} 【dolphinscheduler-Master 监控 -INFO】 机器:${hostname} Master 服务正常"
fi
echo "--------> 监控 end  :${hostname} Master   <--------"





#!/bin/bash
################################################################################################
##  监控dolphinscheduler   worker 服务进程。
##	执行命令: nohup sh /home/dolphinscheduler/moniter/moniter_lyzk02_worker.sh   >> moniter_lyzk02_worker.log 2>&1
################################################################################################

hostname=lyzk02
l_date=`date +'%Y-%m-%d %H:%M:%S'`
echo "--------> 监控 start :${hostname} Worker 进程是否正常   <--------"
pid=`ssh dolphinscheduler@$hostname 'jps -lm | grep org.apache.dolphinscheduler.server.worker.WorkerServer | awk -F ' ' '{print $1}''`
#pid=`jps -lm | grep org.apache.dolphinscheduler.server.worker.WorkerServer | awk -F ' ' '{print $1}'`
if [ "$pid" = "" ]
then
	echo "${l_date}【dolphinscheduler-Worker 监控  - ERROR 】 机器:${hostname} Worker 服务不存在，尝试重启"
	/opt/dolphinscheduler/1.3.6/dolphinscheduler_install/bin/dolphinscheduler-daemon.sh start worker-server  
		if [ $? -ne 0 ]
			then
			echo "${l_date}【dolphinscheduler-Worker 监控】 机器:${hostname} Worker 进程重启失败，请登陆机器查看详情。"
		else
			echo "${l_date}【dolphinscheduler-Worker 监控】 机器:${hostname} Worker 进程重启成功。"
		fi
else
	echo "${l_date} 【dolphinscheduler-Worker 监控 -INFO】 机器:${hostname} Worker 服务正常"
fi
echo "--------> 监控 end  :${hostname} Worker   <--------"


=====================================================================================================================================
=====================================================================================================================================
=====================================================================================================================================



您好，我在使用Xtract univeral时有一下问题，麻烦解答下：
1、数据源至mysql出现中文乱码
	-、中文没做限制 （但是目前出现中文乱码）
2、目标数据源没有HDFS吗？
	-、暂不提供HDFS作为数据源
3、此工具如何定时调度抽取SAP数据？
	-、不提供调度工具。 （是否提供RESTFUL接口来调用定时调度?）
4、此工具性能如何，支持多大的吞吐量？
	-、受制于SAP和目的地数据源的性能
5、数据返回集是否可以分页？
	-、返回集不能分页，这对于海量数据抽取没意义

6、函数返回值，多了两个字段。
	-、outset中不选择此字段即可。



Hello Wang,

1. I'm not so familiar with the serialization\encoding features in MySQL. Is there a specific reason, why you would like to extract to MySQL and not to an SQL db hosted on Azure, for instance? From our experience, MySQL has not a good extraction performance and is not best suited for mass data extractions. Have you tried it out?
2. We have a dedicated Hadoop destination on our list of feature requests, but it has not the highest implementation priority because not many customers were asking for it. Would you be willing to contribute to the development costs so that we can give it a higher priority?
3. Yes, extractions can be called via web service, if that's what you mean. This is possible and explained in the online documentation: https://help.theobald-software.com/en/xtract-universal/execute-and-automate-extractions/call-via-webservice  





622823	0975297980969
622823	0975297982965

14112410

	珠海数据核对： 
				4月月报：正确
				5月月报：
					4500466545  -> 月报漏统计。
					4500468406  044少了一条记录，（15-1=14条） 【044少抽了一条数据，2021-04-25 入库的数据。】  
						-、根据基础表关联获取：
								ekbe = 15条  【belnr=5003331715	buzei=0001  没匹配上MSEG】
								ekpo = 5条
								ekko = 1条
								sap.ods_sap_zfmm_044_by_jichu 当前关联关系 = 5条。
								mseg = 36条， 【belnr=5003331715	buzei=0001   MSEG表没有这条数据】
							【select * from sap.ods_sap_zfmm_044_by_jichu  where day='2021-05-31'  and icode = '4500468406'】
						-、5、判断入库的数量是否为负数 ， 根据借贷标识？shkzg？、
								： shkzg = H , 入库数量为负数。
						-、6、 mb51的过账日期 ，  应该是mkpf或者ekbe的日期。
						-、 7、  如果根据数量order by,需要转化为decimal
							
					4500503516  2021-05-08入库没取到  【月报计算CD时，分区 ${l_date}_purchase_group未包含FATP数据】
					4500504605 	2021-05-12月入库没取到 【月报计算CD时，${l_date}_purchase_group未包含FATP数据】
					
					4500485900	044多了2条记录数量为0的数据【不影响】
					4500490931  044多了1条记录数量为0的数据【不影响】
					4500505891	044多了16条记录数量为0的数据，【不影响】
					
					4500479359   044有数据， （但是cd月报中没有）->  最新的逻辑又了

	分公司：
		1-、 因关联集团hr数据，导致此订单数据冗余，已修正
			4500462099  
		剔除：“深圳市领懿科技发展有限公司”数据。 （属于内部交易）
		2-、044的数据  剔除 供应商= “深圳市领懿科技发展有限公司” 的数据， 月报中没有，暂时不算、【询问佳丽】
				-、且，剔除 公司 =  “深圳市领懿科技发展有限公司”  的数据
		
		3-、4500475932 订单数据少了，唯一码= 5003334323  收货数量=55870  收货日期= 2021/4/28
					： 根据基础表关联， ekbe需要加上 VGABE = '1' 


		4-、4500471093  这个订单，我根据ekpo和ekbe刚刚的关联能关联到， 044的月报中没有这个记录 
				： 需要关联 



24846000 + 23850000 = 

(162320 - 159000)/10000 * 8.25  * 0.82 *  5 =  11.2299



2021-06-05 需求：
1、101,102这个表，开发，赛尔康这边周二可以加上，周二下午，核对下数据，更新系统。
2、hebe目前暂未给出土耳其月报日期字段来源。（与余建春共同，土耳其的数据来自于ME2N,后续是hebe操作，生成的对账日期，此对账日期确认不是订单日期。）
这个等hebe沟通完，看具体月报的区分周期是啥。（这个周一下午核对差异）
	-、需要根据 S ,H 来确定是否 正负，ekbe
	-、过账日期 = mkpf.budat
	-、EKBE需要和eine关联获取，物料信息记录号，确定唯一。  保证ebeln取的至当前物料的信息，  
	
3、公司接口： zfmm_012  ,
  ZMM097 -> 对应函数模块 ？ZSRM_003  [item SRM预制发票清单接口]
4、组装4月对账，未对账的数据核对。  
	-、无数据 <-- （select * from sap.ods_sap_zfmm_049  where EBELN = '4500453933'  ）-- 【马尔软件技术开发(上海)有限公司东莞分公司】
			实际上，po= 4500453933 【supplier_name=马尔软件技术开发(上海)有限公司东莞分公司】 对账表中已对账 ，sap对账单日期=2021.04.07	
					po= 4500467953，4500492500 【supplier_name=根德(广州)国际贸易有限公司】   对账表中已对账 ，sap对账单日期=2021.04.27	
					po= 4500470900   【supplier_name=富见雄国际贸易(上海)有限公司】   对账表中已对账 ，sap对账单日期=2021.06.02	
		结论：大数据抽取对账表，数据遗漏，因为按天抽取的按照过账日期，导致后加入的数据丢失，
			
			问题： 和燕平飞沟通如何来确定数据不丢失，增量更新优化。
			
	-、  4月 HK 公司 大数据的订单 = ('4500467592','4500468208','4500468214' ,'4500487121')   【LY HK 买  Plansee(Shanghai)HighPerformanceMat 】
					 月报中的订单  =   ('4500468038','4500467538','4500468121','4500468028')   【领胜 买  LY HK】、
				对账单中，只有月报中的这些订单，没有大数据的订单。
						大数据的订单 = ('4500476535','4500476538')
						月报中的订单  =  ('4500476508' ,'4500476250')

				-、对比3月，内部交易是否有记录。
		
	1-、存在订单，入库的都是101，但是月报只取了，其中一个料号 【PO=4500300826】
	2-、收货类型101的包含有其他订单（月报《土耳其公式》中没有），如下列表：
			5500003710
			5500003745
			5600000212
			5500003734
			5600000206
			4500297429
			5600000205
			5500003752
	-、ekbe中，不能根据ekbe.dmbtr(本位币金额) 和 ekbe.wrbtr （原币金额） ，都不为0的取 ，  的这种方式取。
		4500299465 ，中，为0的也属于入库数据
		('4500299465','4500300826','4500301845','4500301930','4500302749')
		-、4500301845等，是因为数据没抽取。
	-、根据101月报中没取到的订单， 	
		4500301347  少抽
		4500301845	少抽
		4500301930	少抽
		4500302749	少抽
		4500303139	少抽
		4500303316	少抽
	
	
			
-、赛尔林服务器直连：
U20一直都可以， Q20上周才搞定， P20还在等合适的时间，重启服务器


2021-06-09 
1、激活抽数器，
2、抽取工具。


1、三条路走法 （目前走第二条路，快速迭代开发）。
2、EDW建模， 全局规范，不要被业务牵着鼻子走。
3、数据科学家方向，与业务场景结合。

1、底层实力比较强。技术基础比较完善。

需要改进：
	1、本身模型不太清晰，自上至下。
	2、最终用户主导，模型设计需要系统。（与应用负责人）



2021-06-16
	1-、设备，通信，磁材，赛尔康原因查找
	2-、关键用户线下数据上传。

	帆软会议：
		-、数据接入不具备
		-、相比较Excel的优劣势： 
			优点：
				-、直连数据库。
				-、支持常规的表关联。
				-、图标拖拽方便。
			缺点：
				-、学习成本高。IT和用户都需要学习。（数据表，工具，维度，数据集的学习与理解等）
				-、仍需要IT来完善基础数据
				-、复杂业务报表展示，可能需要二次迭代开发
				-、付费
			至于他们说的模式 ：基础表—>维度组合->图表展示
				基础数据已经有了，用帆软也只是自己随性拖拽实现简单的表关联，拖拽生成图表。 （Excel也可以实现，不过没他的这个方便），
				他这个工具更侧重动态的不确定的BI展示，一般的公司面板，应该都是讨论后确定的，不是不确定的BI展示， 一般不需要这么灵活。
					
				
		-、机器学习等。。


5、1、4、这边和前后端同事沟通了，预计周四下午上。
2、3  的话本周没时间了，他们给出确切的区分规则后，下周5可以搞定。

1、 DW.DWS_CD_BY_SUPPLIER_MONTH  表新增字段PO_AMOUNT （订单金额）。   -->  可能会影响索引。
2、 前端模块  FATP 的“FATP设备基础交易数据”模块，详情和导出，添加 “PO金额”字段。放置 “PA金额” 前。

	后续需完善：
		1-、DW.DWS_CD_BY_SUPPLIER_MONTH  表索引是否影响？
		2-、hive的供应商CD生成脚本，添加字段
		3-、hive的供应商update脚本更新。
		

需要访问的赛尔康服务器列表如下：
BW-测试 ： 213.28.45.73
BW-正式 ： 213.28.45.60
测试-u20 ： ciu20.ad.salcomp.com
测试-q20 ： ciq20.ad.salcomp.com
正式-P20 ：  cip20.ad.salcomp.com



2021-05-27


注塑核对：
	1、2021-01 ~ 2021-04 月月报， 根据用户订单，发现只需要 'A05','A12'  ->  (buyer in ('陈倩','陈小兰','王毅鹏','张领') and dim = '8') or dim = '15'

无线充电数据核对：
	1、2021-03 的PA有问题， 貌似月报多出了 ”模切工厂“ 数据

马达 ：
	1、模具系统，优先根据 bg区分，
	2、然后马达根据采购员。 工厂。	
		模具： data_sources not in ('eas', 'sap.ods_sap_zfmm_044','sap.ods_sap_zfmm_044_jishou' ) and buyer in ('徐萍','徐平平',,'丁雪晴' ,'李随林','刘小青')
		1月： po_number in ('4500314796','4500318424','4500325234','4500317465','4500234720','4500317600','4500281299','4500314790','4500318430','4500316388','4500332570','4500332184','4500316386','4500325235','4500341778','4500318482','4500336135','4500336131','4500336125','4500316456','4500346513','4500317585','4500291800','4500324092','4500317594','4500325156','4500317602','4500316447','4500291864','4500324911','4500316445','4500291848','4500317588','4500325232','4500316384','4500270051','4500314838','4500318303','4500325230','4500321916','4500319438','4500318479','4500319439','4500281297','4500340535','4500325273','4500344377','4500317581','4500347371','4500343908','4500346460','4500341777','4500349931','4500353974','4500353981','4500201811','4500359963','4500360038','4500363329','4500359966','4500359971','4500288554','4500366327','4500366574','4500366358','4500204712','4500366398','4500344390','4500344398','4500344384','4500353570','4500344240','4500370870','4500360051','4500362995','LSCPO20201123001','LSCPO20201210001','LSCPO20201028001','LSCPO20201120001','LSCPO20201020001','WXCK20201215001','LSCPO20200630001','LSCPO20200715003','LSCPO20200902001','LSCPO20200922002','LSCPO20201106001','LSCPO20201222003','LSCPO20201230004','LSCPO20201013001','LSCPO20200706001','LSCPO20200421003','WXCK20210111001','LSCPO20201229001','LSCPO20201217002','LSCPO20201217003')
		1月之后：
			dim = '17' or  (data_sources not in ('eas', 'sap.ods_sap_zfmm_044','sap.ods_sap_zfmm_044_jishou' )
				and  buyer in ('徐平平','丁雪晴' ,'李随林'))

CNC：  
	1、采购员 “余建春” ，采购组=A18,但是不是 惠州，珠海的公司，所以根据 by buyer时，被判断成为CNC的数据， 
		测试去掉 step_muju_by_buyer.sh 脚本。


组装：	
	1、1月，2月 加上 “杨甲香”
	2、3月，杨甲香，'邱露冰','阳贤'
	3、4月，杨甲香



总结：
	1、CNC根据物料修正基准价 （已完成）
		差异原因分析：
			1、CNC和组装数据因库位存在重合，有部分数据未区分出来。导致PA以及CD计算差异（已完成）
			2、汇率差的CD数据，2021年不存在这种数据，委外rebate的cd，方轶反馈目前采用自谈的，按照比例每个月对账都有，目前属于下线数据，未线上化。
	3、冲压，存在少部分数据采购组 选择=A02，但是月报中无对应数据，（对比月报数据）
	4、注塑添加 A05区分。（已完成）
	5、马达，优化添加采购员信息区分BG（已完成）
	6、无线充电月报存在内部交易，待采购确认。

当前所有BG的PA以及CD差异原因分析：
CNC&组装:
	1-、CNC和组装数据因库位存在重合，有部分数据未区分出来。导致PA以及CD计算差异
	2-、CNC存在其他Reate的CD数据未线上化。
冲压：
	PA影响：
	1-、存在月报中数据，月报中无对应数据，
模切：
	CD影响：存在线下数据未上传完全。
	
马达：
	1、存在根据采购员区分，导致PA，CD差异。
赛尔康：
	1、赛尔康月报数据，剔除规则中，部分字段未取到值，导致PA，cd差异
通信事业部：
	1、核对数据，KSI系统的月报数据，偶发存在数据抽取丢失的情况，待优化抽取系统，导致PA，cd差异
磁材、结构件：
	1、目前使用单独的报表系统，添加剔除规则。需定期与采购核对剔除规则，保证PA和CD的准确性。
整体BG问题：
	1、2021-01的数据和2020年的不同系统（EAS+SAP）数据存在，不同单位的数据，(ST，pcs)，导致基准价存在不正确的情况。之后的数据暂无此情况。
	2、基础表以及其他报表抽取增量更新，存在数据冗余以及丢失情况（偶发）。 需与SAP沟通，增量的字段
	3、保密CD。
	
2021-05-17
1、财经+采购，
基础表，报表， （描述）
2、Excel上传添加财经模块.



CNC数据：
PA：58.89+57.38+28.39 = 144.66
CD:	1.68 + (-3.66)	+ 2.25 = 
组装：
PA: 38.99
CD:	1.29 
折扣率： 85W

注塑/马达/通信/无线/冲压/CNC

结构件，磁材，模切，赛尔康，设备自动化，FATP


您好，截图是采购统计的最新的部分CD来源（目前数据平台未处理的CD），
针对 “备品”，“包材回收”，“降损”，“货款打折”有如下疑问，麻烦解答一下：
一、“备品”相关：
1、 “备品”以及“备品协议”在系统（SAP）中怎么体现？ 
2、针对“备品”的解析B[下一张订单及时下对应几个点0单价产品],是否就是若此物料是备品，则会下对应的数量的0单价此物料,根据‘物料单价’*‘当前数量’=备品CD？
二、“包材回收”相关：
1、 那些物料属于“包材回收”范畴，在系统（SAP）是否有标识？ 
2、‘回收数量’，‘回收相关成本’在系统中是否体现？
三、“降损”相关：
1、 ‘约定良率’，‘达成良率’，‘素材成本’ 在系统（SAP）中是否存在？
四、“货款打折”相关：
1、 那些物料或者供应商的产品需要“货款打折”，系统（SAP）中是否又标识？
2、“货款打折”的折扣率系统（SAP）是否有体现。



1、HR快照，每天增加。
2、RFC常见错误。
3、log日志，拉取数据，效率。



1、area  (已有)
2、
	1-、首先确定dim对应的报表
		1-、如果dim=10 
			select distinct dim  from  
			DW.DWS_CD_BY_AREA_MONTH  
			where dim != '10'
			and area= ''
			and `date` = '2021-01'
		2-、dim!=10 ,例如dim = 1  


nohup java -jar lydata-system-0.0.1-SNAPSHOT.jar &
nohup java -jar demo2-1.0-SNAPSHOT.jar >> demo2.log 2>&1 &
nohup java -jar demo2-1.0-SNAPSHOT-jar-with-dependencies.jar >> demo2.log 2>&1 &


hadoop  checknative -a
/usr/hdp/2.5.3.0-37/hadoop

export  HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export  HADOOP_HOME=/usr/hdp/2.5.3.0-37/hadoop/hadoop
export  HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_COMMON_LIB_NATIVE_DIR"

export  HADOOP_HOME=/usr/hdp/2.5.3.0-37/hadoop
export  HADOOP_COMMON_LIB_NATIVE_DIR=${HADOOP_HOME}/lib/native
export  HADOOP_OPTS="-Djava.library.path=${HADOOP_HOME}/lib:${HADOOP_COMMON_LIB_NATIVE_DIR}"
#export  HADOOP_OPTS="-Djava.library.path=${HADOOP_HOME}/lib"
export  PATH=${HADOOP_HOME}/bin:$PATH


————————————————
版权声明：本文为CSDN博主「高达一号」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/u010003835/article/details/81127984

1、copy文件至服务器（/usr/hdp/2.5.3.0-37/hadoop）
	-、修改 hadoop-env.sh  jdk的路径
2、设置环境变量
export  HADOOP_HOME=/usr/hdp/2.5.3.0-37/hadoop
export  HADOOP_COMMON_LIB_NATIVE_DIR=${HADOOP_HOME}/lib/native
export  HADOOP_OPTS="-Djava.library.path=${HADOOP_HOME}/lib:${HADOOP_COMMON_LIB_NATIVE_DIR}"
#export  HADOOP_OPTS="-Djava.library.path=${HADOOP_HOME}/lib"
export  PATH=${HADOOP_HOME}/bin:$PATH
## 最重要的就是这一步骤
export JAVA_LIBRARY_PATH=$HADOOP_HOME/lib/native
参考资料：https://blog.csdn.net/u013303361/article/details/80054217

 -、生效 source /etc/profile
 -、测试环境变量是否生效：
 hadoop  checknative -a  

备注：
	10.0.40.112  测试 
	10.0.24.120	 正式  【/usr/local/jdk1.8.0_201】



1备品
2包材回收
3降损
4货款打折  ×  -> 


磁材：1、无CD ，2,3,4线下数据。  -> 郑期尹
结构件：1、线下数据 ，2、sap代码MB51，可以直接导出包材回收的数据有数量 ，但是部分手工记录。 3、线下数据 4、线下数据。  -> 刘萱玲
CNC:  1、类似于对账扣钱或下免费订单， 2、包材回收，标识只有部分可以区分。 3、线下数据（良率由SQE同供应商谈的，走审批。素材成本由经管提供） 4、线下数据 -> 罗正钧
注塑：1、备品采用免费订单的形式，2,3，4暂无使用   ->  ×
马达：暂无使用->  ×
组装：1、备品体现在折扣率 2、暂无使用 3、暂无使用 4、暂无使用（贷款折扣类似于折扣率）  ->  ×
赛尔康：1、备品下单为0单价， 2、线下数据 3、线下数据 4、线下数据    -> 王静
无线充电：暂无回复    -> Alpha Zhang 张旭春
模切：暂无回复  -> Rita  刘青玲
冲压：暂无回复  -> 钱静

buffer，对应物料的报价。
15  = 9 + 2 + 4

04-22  早
04-23  晚
04-25  早
2021/4/27  早
2021/4/30  早
2021/5/8  早晚
2021/5/11 早
2021/5/12 早
2021/5/17 早
2021/5/18 早晚
2021/5/20 早





1、打折率 放。
2、确定包材回收的mb51，zmm038，确认包材区分规则。
	-、包菜回收是否算直降
包材回收数量 x 包材价格 - 相关回收成本

无线充电，冲压，模切，CNC.

模切
2月：
	非模具：PA = 392.9  cd=6.9
	模具：PA = 11.15  cd=1.18
	PA=404.05  CD=8.08
3月：
	非模具：PA = 200  cd=6.28
	模具：PA = 9.28  cd=0.8
	PA=209  CD=7.08
4月：
	非模具：PA = 255  cd=8.6
	模具：PA = 9.27  cd=0.81
	PA=264.3  CD=9.4


1-、CNC
4月：
	PA=141   (137960981.140021 -> 141450941.34231   =  3489960.202289)  
	CD=3.53 (1343228.055267  -> 3533432.055327  = 2190204.00006)    0.0249799119171369
2月：
	PA=177.6   (84010845.25+ 55842248.31 + 37804211 = 179364768.98)
	CD= 3.72   (  1500224 +2227700)
3月：
	PA= 148.7 (46848539 + 79755560 + 22132612)
	CD= 3.44   (  899461 +2542508)
	
2-、组装
4月： 
	PA=38.99   (38993023) 	 大数据=25.19
	CD= 1.29   1291057       大数据=14.65 
2月：
	PA=39.5 (39511657)
	CD= 1.96 (1963260)
3月：
	PA= 20 (20061817)
	CD= 0.46  (464514)

1、磁材数据修正
PA =51  (46010018.59079 -> 51310448.24342   = 5300429.65263 ) 
CD =4.3  (-4368352.795748  -> 4322423.5123  = )    0.0842406110309961
2月：
	PA=   
	CD=    大数据=  -1.7   -> -0.011
3月：
	PA=   		 大数据28 -> 27
	CD=  		 大数据-2.3 -> 1.3


2、结构件 
CD=8.2   （3367646.449988  -> 8247326.44428）

东莞 158   9.1
2月：
	PA= 205   
	CD= 8.47    大数据= 12.16 -> 6.8
3月：
	PA=  145		
	CD=  8.11		 
	
深圳 204.37  16.41

2月：
	PA= 183     大数据=   213->185
	CD= 12.14    大数据=   4.5 -> 
3月：
	PA=  137		 大数据 35 -> 134 
	CD=  8.71		 大数据  1.2-> 7.9

3、冲压修正
4月：
	PA=121.5  (93566064.626339 -> 121562064.23445)
	CD=11  (66183348.459675 ->11185244.4235 )
2月：
	PA= 125(125350868)  大数据=229  -> 127
	CD=  8.9(8949892)  cd=-45   -> 7.4
3月：
	PA= 97.4(97440158)   93 -> 96
	CD=  8.5 (8519424)   54-> 11

4、通信
PA=4.9  (667553.56  -> 4903223.2323)
CD=0.065  (3337777.392982 -> 65242.123)


3月：
	PA=7.39    大数据 ( 0.35->7.2 )
	CD=0.16 大数据 ( 0.12-> )
2月：
	PA=0.52  大数据 ( 0.33->0.5 )
	CD=0.007   大数据 ( -0.25->0.005)


5、注塑
4月：
CD=0.8  (-19370.139563 -> 802636.2367)

3月：
	PA=4.23    
	CD=0.54  大数据 ( 0.049 ->0.49)
2月：
	PA=5.57   大数据 ( 6->5.7 )
	CD=0.27  大数据 ( 0.11 ->0.21 )
	
5.1、无线充电
		
4月：
	PA=19.25
	CD=1.27

3月：
	PA=18.32     大数据 ( 14.6->17.6 )
	CD=0.71
2月：
	PA=21.62 大数据 ( 16.8->20.8 )
	CD=1.18
	
6、马达
4月：
PA=6.7  (5197526.59137  -> 6735823.23423)
CD=0.57 (730118.961334 -> 570118.932234)


3月：
	PA=2.09  
	CD=0.38
2月：
	PA=1.78   大数据 ( 1.47->1.7 )
	CD=0.16 

7、设备自动化
PA=357.6 (222793430.174893  -> 357568234.62423)
CD=45.6  (178174.220412  -> 30524523.4225)

2月：
	PA=245   大数据 ( 102->230)
	CD=16  大数据 ( 0.96 ->14 )
	
3月：
	PA=449   大数据 ( 630->460 )
	CD=30.7 大数据 ( 0.18 ->21 )
	
=(G197-F197)/G197

114074680.2
1450309116


41d1255495ed1eb5d8152c3cdb8cfafc	2021-04-26 09:40:43	2021-04-26 09:40:43	3343228.055267	0.009736	141960981.140021	1	2021	04	2021-04	2021-04-21	CNC		
fe546efe2ef556b1934e4d703f05f4e1	2021-04-30 18:14:55	2021-04-30 18:14:55	125576303.64567	0.098647	1272973955.57054	10	2021	04	2021-04	2021-04-27	汇总		
ed2e2c09d67c4c51a3cf4de49fec1180	2021-04-30 18:14:55	2021-04-30 18:14:55	3337777.392982	5.000014	667553.56	12	2021	04	2021-04	2021-04-27	通信事业部		
ab25bb667e834bf9f6b84609e0b724b5	2021-04-30 18:14:55	2021-04-30 18:14:55	178174.220412	0.000799	222793430.174893	14	2021	04	2021-04	2021-04-27	设备自动化		
95efa55cdc3bff5998687b90727ce815	2021-04-26 09:40:43	2021-04-26 09:40:43	-19370.139563	-0.002782	6961620.086664	15	2021	04	2021-04	2021-04-21	注塑		
99326af8113a19ffb4ca4ac3cff974eb	2021-04-30 18:14:55	2021-04-30 18:14:55	1335714.062965	0.074574	17911239.224483	16	2021	04	2021-04	2021-04-27	无线充电		
c8add275faa490f462f932d92a0b276e	2021-04-26 09:40:43	2021-04-26 09:40:43	730118.961334	0.140474	5197526.59137	17	2021	04	2021-04	2021-04-21	马达		
0198e5c7eb46f102b2d785d1577a7465	2021-04-30 18:14:55	2021-04-30 18:14:55	0	0	19641096.759381	18	2021	04	2021-04	2021-04-27	FATP		
81f7e9fe57d766815e8fb9f57ca53a4e	2021-04-30 18:14:55	2021-04-30 18:14:55	0	0	510052.8482	19	2021	04	2021-04	2021-04-27	FATP-EQUIP		
b02dea6e32e6ba36797c6a44d1514830	2021-04-30 18:14:55	2021-04-30 18:14:55	66183348.459675	0.707343	93566064.626339	2	2021	04	2021-04	2021-04-27	冲压		
c05b81de521e942e2bc893ab909edd82	2021-04-30 18:14:55	2021-04-30 18:14:55	12441120.693176	0.043172	288174028.093811	3	2021	04	2021-04	2021-04-27	模切		
152053171a3d240b26439e40cb90ea14	2021-04-26 09:40:43	2021-04-26 09:40:43	25199511.422321	1.719778	14652768.737384	5	2021	04	2021-04	2021-04-21	组装		
4f11db29fed1fba3a396aac6cdf33744	2021-04-30 18:14:55	2021-04-30 18:14:55	15847386.862861	0.064641	245157843.685	6	2021	04	2021-04	2021-04-27	深圳结构件		
08dbb4d32541076f84b7c349adb931df	2021-04-30 18:14:55	2021-04-30 18:14:55	3367646.449988	0.019379	173769731.4522	7	2021	04	2021-04	2021-04-27	东莞结构件		
05307d4a2f9a87c135135fc2d521c506	2021-04-30 18:14:55	2021-04-30 18:14:55	-4368352.795748	-0.094943	46010018.59079	9	2021	04	2021-04	2021-04-27	磁材		


写数据至hdfs：
https://blog.csdn.net/weixin_30902675/article/details/95653809
读取配置文件写数据至HDFS:
https://blog.csdn.net/weixin_29168675/article/details/114520567

HR需求：
1、需要保存状态的表抽取处理方式：
	1、增量抽取（RFC传输根据表的主键，增量更新数据）。
	2、大数据保存每天的数据状态（根据主键）。
2、不能增量抽取的表，全量抽取。
3、RFC接口传输中遇到的最多问题？
	1. 数据量过大，报OOM
	2. 接口数据类型转换报错 （日期，数字转换等）


 
							
echo " ---->  dwmiddle.dwb_purchase_report_cd 的old_date"						
hive -S -e "set hive.cli.print.header=flase
 show partitions dwmiddle.dwb_purchase_report_cd" | sed -e '/backup/d' |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'

echo "---->  dwdetail.dwd_huadongzidonghua_cd_detail 的sap更新时间临界值"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwdetail.dwd_huadongzidonghua_cd_detail" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'

echo "---->   dwbase.dwb_sap_cicai_by_cd 的sap更新时间临界值"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwbase.dwb_sap_cicai_by_cd" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'

echo "---->  dwbase.dwb_sap_jiegoujian_by_cd 的sap更新时间临界值"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwbase.dwb_sap_jiegoujian_by_cd" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'

echo "---->  dwdetail.dwd_salcomp_cd_detail 的sap更新时间临界值"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwdetail.dwd_salcomp_cd_detail" |sort|tail -n 2|head -1 | awk -F '=' '{print  $2}'
		

echo "---->   物料降价的 old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_material_cut_price_month" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->   供应商CD 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_supplier_month3" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->   物料类型detail 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_material_month3" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->   物料类型 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_material_type_month3" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->   区域 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_area_day_month3" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->   按月的CD统计  的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_amount_month3" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
					
echo "---->  供应商对账的基础表  的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_supplier_recon_rate_month" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->  供应商对账的BG达成率  的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_recon_rate_month" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->  供应商对账的采购员达成率  的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_buyer_recon_rate_month" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->  供应商对账的采购员列表  的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_buyer" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
echo "---->  供应商对账的BG的二级详情列表  的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_cd_by_supplier_recon_rate_detail_month" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'		
	
echo "---->  额外维护的区域公司表 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_area_company" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'	
echo "---->  额外维护的区域表 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_area" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'	
echo "---->  额外维护的物料名称表 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_material_name" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'	

echo "---->  额外维护的物料未降价表 的old_date"
hive -S -e "set hive.cli.print.header=flase
 show partitions dwservice.dws_no_price_reduce_material" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'	




-- 新建hive表
CREATE EXTERNAL TABLE `dwservice.dws_recon_rate_detail_2`(
   `factory_code` string COMMENT '工厂编码', 
  `factory_name` string COMMENT '工厂名称', 
  `company_code` string COMMENT '公司编码', 
  `company_name` string COMMENT '公司名称', 
  `supplier_code` string COMMENT '供应商编码', 
  `supplier_name` string COMMENT '供应商名称', 
  `buyer_code` string COMMENT '采购员编码', 
  `buyer` string COMMENT '采购员', 
  `amount` decimal(28,16) COMMENT '金额', 
  `quantity` decimal(28,16) COMMENT '数量', 
  `stock_in_audit_time` string COMMENT '入库审核日期', 
  `cope_amount` decimal(28,16) COMMENT '应付金额', 
  `cope_quantity` decimal(28,16) COMMENT '应付数量', 
  `cope_date` string COMMENT '应付业务日期', 
  `year` string COMMENT '年份', 
  `month` string COMMENT '月份', 
  `date` string COMMENT '日期（年月）', 
  `flag` string COMMENT '', 
  `dim` string COMMENT '维度达成标识', 
  `bg` string COMMENT 'BG')
COMMENT '对账详情表'
PARTITIONED BY ( 
  `day` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc tblproperties('orc.compression' = 'snappy')



CREATE EXTERNAL TABLE `dwservice.dws_cd_by_supplier_recon_rate_month_2`(
  `bg` string COMMENT 'BG名称', 
    `factory_code` string COMMENT '工厂编码', 
  `factory_name` string COMMENT '工厂名称', 
  `company_code` string COMMENT '公司编码', 
  `company_name` string COMMENT '公司名称', 
  `supplier_code` string COMMENT '供应商编码', 
  `supplier_name` string COMMENT '供应商名称', 
  `buyer_code` string COMMENT '采购员编码', 
  `buyer` string COMMENT '采购员', 
  `quantity` decimal(28,16) COMMENT '应付数量', 
  `amount` decimal(28,16) COMMENT '应付金额', 
  `cope_quantity` decimal(28,16) COMMENT '应付数量', 
  `cope_amount` decimal(28,16) COMMENT '应付金额', 
  `recon_rate` decimal(28,6) COMMENT '对账达成率', 
  `dim` string COMMENT '维度', 
  `year` string COMMENT '年份', 
  `month` string COMMENT '月份', 
  `date` string COMMENT '日期（年月）', 
  `cope_date` string)
COMMENT '对账详情表'
PARTITIONED BY ( 
  `day` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc tblproperties('orc.compression' = 'snappy')


CREATE TABLE `dwservice.dws_cd_by_supplier_recon_rate_detail_month_2`(
  `bg` string COMMENT 'BG名称', 
     `factory_code` string COMMENT '工厂编码', 
  `factory_name` string COMMENT '工厂名称', 
  `company_code` string COMMENT '公司编码', 
  `company_name` string COMMENT '公司名称', 
  `supplier_code` string COMMENT '供应商编码', 
  `supplier_name` string COMMENT '供应商名称', 
  `quantity` decimal(28,6) COMMENT '应付数量', 
  `amount` decimal(28,6) COMMENT '应付金额', 
  `cope_quantity` decimal(28,6) COMMENT '实付数量', 
  `cope_amount` decimal(28,6) COMMENT '实付金额', 
  `recon_rate` decimal(28,6) COMMENT '此供应商是否达成', 
  `dim` string COMMENT '维度', 
  `year` string COMMENT '年份', 
  `month` string COMMENT '月份', 
  `date` string COMMENT '日期', 
  `bg_tw` string COMMENT 'BG繁体', 
  `bg_us` string COMMENT 'BG英文', 
  `cope_date` string)
COMMENT 'CD月报 供应商对账 -- BG对账率'
PARTITIONED BY ( 
  `day` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '^' 
stored AS orc tblproperties('orc.compression' = 'snappy')




					
--CNC 7月 SAP： 260490074.5 - 98830714.13 = 161659360.37
--  
存在问题：						
	1、采购修改逻辑后，未告知大数据平台，导致数据差异
	2、存在采购数据统计周期与大数据平台统计周期不一致的情况，以及采购未剔除内部交易数据。导致数据差异，
	3、当前BG区分规则：sap中的BG字段+采购员。
		-、存在BG字段新增（例如新增“组装3“，”东台”等，未告知大数据方，此新增BG字段，属于哪个BG.）
		-、存在采购员信息不同步的情况。


SAP工厂列表
-----------------------------------------------------
put("1070","江门安磁电子有限公司")

put("1080","东莞市鑫焱精密刀具有限公司")

put("1170","广东领益智造股份有限公司东台分公司")

put("1270","深圳市合力通电子有限公司")

put("2010","苏州领裕电子科技有限公司")

put("2020","领胜科技（苏州）有限公司")

put("2030","领胜城科技（江苏）有限公司")

put("2040","领镒（江苏）精密电子制造有限公司")

put("2050","领镒精密五金制造（无锡）有限公司")

put("2060","东台市富焱鑫五金产品有限公司")

put("2070","领先科技(东台)有限公司")

put("2090","苏州领镒精密技术销售组织")

put("3010","成都领益科技有限公司")

put("3040","成都领泰科技有限公司")

put("4010","郑州领胜科技有限公司")

put("4020","郑州领业科技有限公司")

put("8810","东莞结构件")

put("8800","深圳结构件")

put("8820","东莞板材")

put("5010","LY INVESTMENT(HK)")

put("5020","TLG INVESTMENT(HK)")

put("5021","TLG(HK)江益")

put("6030","安磁电业有限公司")

put("CN01","Country Template CN")

----------------------------------------------------

  -- 集团 厂区表
  select day,count(1) from sap.ods_sap_zfmm_011_ztmm_t001w group by day

 -- ecc 厂区表
   select *  from sap.ods_sap_zfmm_001_ztmm_t001w_ecc where day='2020-01-31'

新增公司：

put("1010","领益科技（深圳）有限公司")

put("1020","领胜电子科技（深圳）有限公司")

put("1030","深圳市领略数控设备有限公司")

put("1040","东莞盛翔精密金属有限公司")

put("1050","东莞领益精密制造科技有限公司")

put("1060","东莞领杰金属精密制造科技有限公司")

put("1100","广东领益智造股份有限公司-EHR")

put("1200","江门江益磁材有限公司-EHR")

put("1300","江门江益磁材有限公司蓬江分公司-EHR")

put("1370","深圳市领懿供应链管理有限公司")

put("1500","鹤山市江粉磁材新材料有限公司-EHR")

put("2080","深圳领益纳米智造有限公司(停用)")

put("2100","苏州一道医疗科技有限公司")

put("2700","鹤山市江磁线缆有限公司-EHR")

put("3050","绵阳市维奇电子技术有限公司-EHR")

put("3060","绵阳伟联科技有限公司-EHR")

put("3700","江门江菱电机电气有限公司-EHR")

put("5030","TRIUMPH LEAD GROUP USA")

put("5040","TRIUMPH LEAD GROUP LIMITE")

put("5050","HONG KONG CRYSTALYTE")

put("5080","LY INVESTMENT VIETNAM LT.")

put("6010","东莞领汇精密制造科技有限公司")

put("6020","深圳市诚悦丰科技有限公司")

put("6040","深圳市领滔科技有限公司")

put("9300","TRIUMPH LEAD (SINGAPORE)")

------------------------------------------------------------------------


	
CREATE TABLE `test.supplier_1_1`(
  `supplier_code` string COMMENT 'from deserializer', 
  `supplier_name` string COMMENT 'from deserializer', 
  `currency` string COMMENT 'from deserializer', 
  `pay_condition` string COMMENT 'from deserializer', 
  `is_refer` string COMMENT 'from deserializer', 
  `company_code` string COMMENT 'from deserializer', 
  `company_name` string COMMENT 'from deserializer', 
  `tax_amount` decimal(28,6) COMMENT 'from deserializer')
COMMENT 'cnc月报数据'
PARTITIONED BY ( 
  `day` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 


 hive -e "load data local inpath '/root/test/supplier.txt' overwrite into table test.supplier_1_1 partition(day='2021-03-24')
"

01.01.06	领胜城科技(江苏)有限公司	2030
01.01.08	深圳市领略数控设备有限公司	1030
01.01.09	领胜电子科技(深圳)有限公司	1020
01.01.11	领胜科技（苏州）有限公司	2020
01.01.12	郑州领胜科技有限公司	4010
01.01.16	深圳市 诚悦丰 科技有限公司	
01.02.01	苏州领裕电子科技有限公司	2010
01.02.04	领镒(江苏)精密电子制造有限公司
01.02.05	成都领益科技有限公司	3010
01.02.06	东莞领益精密制造科技有限公司	1050
01.02.07	领益科技(深圳)有限公司	1010
01.02.08	东莞盛翔精密金属有限公司	1040
01.02.09	东莞领杰金属精密制造科技有限公司	1060
01.02.11	东莞市鑫焱精密刀具有限公司	1080
01.02.12	领镒精密五金制造（无锡）有限公司	2050
01.02.13	东莞领汇精密制造科技有限公司	6010
01.03.01	苏州领镒精密技术有限公司	2040
01.05.03	TLG INVESTMENT (HK) LIMITED
01.05.04	LY INVESTMENT (HK) LIMITED	5010

/**
-- 相关代码
 select  alll_1.supplier_code, alll_1.supplier_name, alll_1.currency, alll_1.pay_condition,
	alll_1.is_refer, alll_1.company_code, alll_1.company_name,
	if(alll_1.tax_amount is null ,0 , alll_1.tax_amount ) +  if(alll_2.tax_amount is null ,0, alll_2.tax_amount) as tax_amount from 
 (
	select all_1.supplier_code, all_1.supplier_name, all_1.currency, all_1.pay_condition,
	all_1.is_refer, all_1.company_code, all_1.company_name,
	if(all_1.tax_amount is null ,0 , all_1.tax_amount ) +  if(all_2.tax_amount is null ,0, all_2.tax_amount) as tax_amount  from 
	(
		select al_1.* ,al_2.tax_amount,al_2.amount from 
		( SELECT supplier_code, supplier_name, currency, pay_condition, is_refer, company_code, company_name 
		FROM test.supplier_1_1  where day='2021-03-24') al_1 
		left join 
		-- 关联EAS+SAP+模具 数据（模切等）
		(select A.supplier_code,A.stock_org_number,
		    sum(A.amount) as amount,sum(A.tax_amount) as tax_amount
		    from 
		    (select  supplier_code,supplier_name,
		       case  stock_org_name 
		    	when  '领胜城科技(江苏)有限公司' then '2030'
		    	when  '深圳市领略数控设备有限公司' then '1030'
		    	when  '领胜电子科技(深圳)有限公司' then '1020'
		    	when  '领胜科技（苏州）有限公司' then '2020'
		    	when  '郑州领胜科技有限公司' then '4010'
		    	when  '苏州领裕电子科技有限公司' then '2010'
		    	when  '成都领益科技有限公司' then '3010'
		    	when  '东莞领益精密制造科技有限公司' then '3010'
		    	when  '领益科技(深圳)有限公司' then '1010'
		    	when  '东莞盛翔精密金属有限公司' then '1040'
		    	when  '东莞领杰金属精密制造科技有限公司' then '1060'
		    	when  '东莞市鑫焱精密刀具有限公司' then '1080'
		   		when  '领镒精密五金制造（无锡）有限公司' then '2050'
		    	when  '东莞领汇精密制造科技有限公司' then '6010'
				when  '苏州领镒精密技术有限公司' then '2040'
				when  'LY INVESTMENT (HK) LIMITED' then '5010'
		    	else stock_org_number end as stock_org_number
		    	,stock_org_name, 
		    amount,tax_amount from dwmiddle.dwb_purchase_report_cd where day= '2021-02-24'
		    	and  `date`  between  '2020-01' and '2020-12' 
		    ) A
		  group by A.supplier_code,A.stock_org_number
		  order by A.supplier_code,A.stock_org_number
		  ) al_2 
		 on al_1.supplier_code = al_2.supplier_code
		 and al_1.company_code = al_2.stock_org_number
	) all_1
	left join 
	-- 关联 赛尔康，通信事业部，设备自动化
	(
		select A.supplier_code,A.company_code,sum(A.amount) as amount  ,sum(A.tax_amount) as tax_amount  from
			(select supplier_code,
		 		case  company_name 
		    	when  '领胜城科技(江苏)有限公司' then '2030'
		    	when  '深圳市领略数控设备有限公司' then '1030'
		    	when  '领胜电子科技(深圳)有限公司' then '1020'
		    	when  '领胜科技（苏州）有限公司' then '2020'
		    	when  '郑州领胜科技有限公司' then '4010'
		    	when  '苏州领裕电子科技有限公司' then '2010'
		    	when  '成都领益科技有限公司' then '3010'
		    	when  '东莞领益精密制造科技有限公司' then '3010'
		    	when  '领益科技(深圳)有限公司' then '1010'
		    	when  '东莞盛翔精密金属有限公司' then '1040'
		    	when  '东莞领杰金属精密制造科技有限公司' then '1060'
		    	when  '东莞市鑫焱精密刀具有限公司' then '1080'
		   		when  '领镒精密五金制造（无锡）有限公司' then '2050'
		    	when  '东莞领汇精密制造科技有限公司' then '6010'
				when  '苏州领镒精密技术有限公司' then '2040'
				when  'LY INVESTMENT (HK) LIMITED' then '5010'
				when  '领先科技(东台)有限公司' then '2070'
				when  'LingYi iTech Investment(HK) Li' then '5010'
				when  '成都领泰科技有限公司' then '3040'
				when  '深圳市领滔科技有限公司' then '6040'
				when  '绵阳领益通信技术有限公司' then 'KIS01'
				when  '苏州益道医疗科技有限公司' then '2100'
		    	else '' end as company_code,amount,tax_amount
	    	 from dwmiddle.dwm_dim_cd_by_other
		where  day='2021-02-24'
		and `date`   between  '2020-01' and '2020-12' 
		) A group by A.supplier_code,A.company_code
	 ) all_2
	on   all_1.supplier_code = all_2.supplier_code
		 and all_1.company_code = all_2.company_code
) alll_1
-- 关联江磁
left join 
	(select supplier_code,if(company_des = '江门安磁电子有限公司','1070','') as company_code , 
	sum(amount),sum(in_tax_amout) from dwbase.dwb_sap_cicai_by_cd
	where day='2021-02-24'
	and in_date   between  '2020-01' and '2020-12' 
	group by supplier_code,if(company_des = '江门安磁电子有限公司','1070','') ) alll_2
	on alll_1.supplier_code = alll_2.supplier_code
			 and alll_1.company_code = alll_2.company_code
**/



 


1010	领益科技（深圳）采购组织
1020	领胜电子科技（深圳）采购组织
1030	深圳市领略数控采购组织
1040	东莞盛翔采购组织
1050	东莞领益采购组织
1060	东莞领杰采购组织
1070	江门安磁采购组织
1080	东莞鑫焱精密刀具采购组织
1270	深圳合力通采购组织
2010	苏州领裕电子科技采购组织
2020	苏州领胜采购组织
2030	领胜城科技（江苏）采购组织
2040	领镒（江苏）精密电子制造采购组织
2050	领镒精密五金制造（无锡）采购组织
2060	东台市富焱鑫五金产品采购组织
2070	领先科技（东台）有限公司采购组织
2090	苏州领镒-结构件采购组织
2100	苏州益道医疗科技有限公司采购组织
3010	成都领益科技采购组织
3040	成都领泰采购组织
4010	郑州领胜采购组织
4020	郑州领业采购组织
5010	LY（HK）Purch Org.
5020	LSC（HK）Purch Org.
6010	东莞领汇采购组织
6040	深圳领滔采购组织
6060	江门恩富信采购组织
6080	深圳领懿采购组织
6090	
6090	珠海领懿采购组织
9300	LX（SG）Purch O
KIS01	绵阳领益通信技术有限公司





SAP RFC调试全部配置
######################################################
saptest.s4.description=sap东台测试
saptest.s4.jco_ashost=10.0.8.207
saptest.s4.jco_sysnr=10
saptest.s4.jco_client=300
saptest.s4.jco_user=ly9999
saptest.s4.jco_passwd=ly@99int
saptest.s4.jco_lang=zh
saptest.s4.jco_pool_capacity=10

saptest.ecc.description=sap磁材测试
saptest.ecc.jco_ashost=10.100.1.22
saptest.ecc.jco_sysnr=00
saptest.ecc.jco_client=210
saptest.ecc.jco_user=1036
saptest.ecc.jco_passwd=asdfasdf
saptest.ecc.jco_lang=zh
saptest.ecc.jco_pool_capacity=00


sap.s4.description=sap东台正式
sap.s4.jco_ashost=10.0.8.201
sap.s4.jco_sysnr=10
sap.s4.jco_client=888
sap.s4.jco_user=ly9999
sap.s4.jco_passwd=ly@99int
sap.s4.jco_lang=zh
sap.s4.jco_pool_capacity=10

sap.ecc.description=sap磁材正式
sap.ecc.jco_ashost=10.100.1.20
sap.ecc.jco_sysnr=00
sap.ecc.jco_client=800
sap.ecc.jco_user=DATA_PRD_RFC
sap.ecc.jco_passwd=zxcvbnm.1234567
sap.ecc.jco_lang=zh
sap.ecc.jco_pool_capacity=00

saptest.bw.description=SAP 赛尔康测试 bw
saptest.bw.jco_ashost=213.28.45.73
saptest.bw.jco_sysnr=25
saptest.bw.jco_client=199
saptest.bw.jco_user=ZHOUJA
saptest.bw.jco_passwd=welcome123
saptest.bw.jco_lang=EN
saptest.bw.jco_pool_capacity=10

sap.bw.description=SAP 赛尔康正式 bw
sap.bw.jco_ashost=213.28.45.60
sap.bw.jco_sysnr=55
sap.bw.jco_client=199
sap.bw.jco_user=ZHOUJA
sap.bw.jco_passwd=welcome123
sap.bw.jco_lang=EN
sap.bw.jco_pool_capacity=10

saptest.u20.description=SAP 赛尔康测试 U20
saptest.u20.jco_ashost=ciu20.ad.salcomp.com
saptest.u20.jco_sysnr=50
saptest.u20.jco_client=199
saptest.u20.jco_user=SALCOMPTEST
saptest.u20.jco_passwd=123456
saptest.u20.jco_lang=EN
saptest.u20.jco_pool_capacity=10

saptest.q20.description=SAP 赛尔康测试 Q20
saptest.q20.jco_ashost=ciq20.ad.salcomp.com
saptest.q20.jco_sysnr=20
saptest.q20.jco_client=199
saptest.q20.jco_user=ALEPORTAL
saptest.q20.jco_passwd=Salcomp@123
saptest.q20.jco_lang=EN
saptest.q20.jco_pool_capacity=10

sap.p20.description=SAP 赛尔康正式 P20
sap.p20.jco_ashost=cip20.ad.salcomp.com
sap.p20.jco_sysnr=10
sap.p20.jco_client=199
sap.p20.jco_user=ALEPORTAL
sap.p20.jco_passwd=May19@2@19
sap.p20.jco_lang=EN
sap.p20.jco_pool_capacity=10


SAP系统连接配置
◆S4测试
连接类型：自定义应用程序服务器
描述：S4_DEV
应用服务器：10.0.8.207
实例编号：10
系统标识：EP1 /ED1
集团：300
账号：it052
密码：abcd.1234
◆S4正式
连接类型：自定义应用程序服务器
描述：S4_PRD
应用服务器：10.0.8.201
实例编号：10
系统标识：EP1
集团：888
用户：it061
密码：abcd.1234
◆ECC测试
注意：深圳ly_office网络，需要开启vpn才能连接
连接类型：自定义应用程序服务器
描述：ECC_DEV
应用服务器：10.100.1.22
实例编号：00
系统标识：DEV
集团：210
账号：1045
密码：abcd.1234



ecc正式：
账号：1041
密码：123456
#############################################

======
ZFMM_SUB_FBL1N
==========
############################################################################################
##  使用前阅读
##  脚本功能
##  1、生成 增量更新维度表的数据
##  执行方法:
##  nohup sh generate_dimension_update.sh 参数1  参数2  >> generate_dimension_update.log 2>&1 &
##  1、参数1：新数据分区日期
##      参数1取值情况：
##              1、'xxxx-xx-xx' （手动指定待增量更新数据日期）
##  2、参数2: 历史数据分区日期
##      参数2取值情况：
##              1、有值：
##                      1-、'0000-00-00' （代表全量更新）
##                      2-、'xxxx-xx-xx' （手动指定历史分区日期）
##              2、无值：
##                      1-、'' （通过查询表，获取最近的一次历史日期）
############################################################################################

## 生成待比较分区的日期（根据传入的参数2)
if [[ $2 != '' ]]
then
    if [[ $2 == '0000-00-00' ]]
then
         old_date=$2
    else
         isValidDate $2
         if [ $? = 1 ]
 then
             echo "invalid date"
             exit 1
         else
             old_date=`date -d $2 +"%Y-%m-%d"`
         fi
    fi
else
    echo "-----------> 生成old_date作为旧数据与新数据对比"
    table_name='dwservice.dws_cd_by_supplier_month3'
    old_date=`hive -e "set hive.cli.print.header=flase
 show partitions $table_name" |sort|tail -n 2|head -1 | awk -F '=' '{print $2}'`
    echo "----------->生成old_date end"
fi

#########################################################################################

优化方案：
	1、若逻辑又修改，需要采购及时将逻辑修改的信息告知大数据。
	2、针对区分规则的优化：
		-、BG字段，需要统一确定好使用那些标识或者有新增的BG值，要告知大数据更新规则。
		-、采购员，采购每个月更新一份采购人员名单给到大数据,或者利用后台系统，给采购同事提供入口，每月更新对应BG采购员的信息，
		来保证采购方和大数据的信息一致性。

		
存在问题：
	1、根据工厂区分无线充电、注塑数据，实际情况多，区分规则不准确。（无线充电，注塑，马达BG）
	2、新增了工厂以及模具系统的数据，按原区分规则无法获取这部分数据(无线充电BG)

	3、存在采购月报未剔除内部交易数据。(无线充电BG)

优化方案：
	1、针对具体BG规则、数据变动的情况，还需要采购同事及时告知大数据，修改相应规则，保证月报数据准确。
	2、针对区分规则的优化：
		-、所有BG统一采用（小厂+库位+映射关系表）的形式区分BG。（与经管沟通）
		-、具体实施方案，经管同事内部商讨中。


数据差异原因：
1、模切的数据已更新，剔除掉无线充电BG业务提供PA数据且更新采购员计算PA后，差异缩小至5%以内（因采购员调岗导致差异）
2、磁材的数据已更新（因部分异常采购员数据-已剔除，已将6~7月PA合并对比）

						
						六、SAP抽取基础表
						step1
							1、sap报表->基础表
								1-、整理sap集团、sap江粉现抽取所有报表清单，提供给sap业务顾问“曹彪”。
								2-、与sap共同梳理报表逻辑（用于后期根据基础表生成对应报表）
							2、sap供货价格基础表抽取
							3、如何确定每条数据的唯一性。（主键或者订单+序号等）
							
余姐，sap相关的两个问题
1、供应商对账，核对冲压数据，发现缺少部分公司7月份数据，后经核实发现问题：
	1-、因eas6月底下线->上线sap，部分原在eas的工厂上线sap后，新增工厂名称，编码。
	2-、目前抽取sap报表是根据，“日期”，“工厂”来抽取数据。
	结合1，2，sap新增的工厂，未告知我们(新增工厂可能是sap业务人员维护的，未告知sap接口开发人员)，
	导致新增工厂报表数据都未抽取。【以后抽取基础表后，可解决类似这样的问题。】
2、汤加丽反馈，需要给出sap优化方案的时间表（改为抽取基础表）。
	我们要根据sap接口开发时间完毕（09-11）来排计划吗？
							
大家下午好，最新的数据差异对比已更新。
1、更新了无线充电的PA对比数据。PA近3个月差异缩小至10%以内（根据库位对比）
2、其他BG依据库位对比，差异较大（目前仍采用采购员+BG区分，库位区分方式继续核对）
3、更新了CNC等BG，CD差异较大的BG（剔除掉部分因单位异常导致，CD差异过大的情况）


				17、正式环境待完成：
					参考-->
					《memo.txt》=>uat的ambari安装注意事项
					hbase,phoenix ：
						1-、hbase添加支持二级索引   ✔
						2-、phoenix安装（服务可以不用启动，phoenix因为实际还是使用regionserver跑），  ✔
							hbase修改client的jar包解决索引分页的bug。（4.9）   ✔
						3-、phoenix创建二级索引超时解决   ✔
					hive问题：
						1-、hive多符号（hive多符号解决）  ✔
						2-、hive解决中文乱码 ✔
						（自己编译hive-exec-1.2.1000.2.5.3.0-37.jar替换运来的hive的lib下的jar 【只需修改hivemeta主机】）
						3-、jdbc:mysql://10.0.24.118/hive?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8  ✔
						
					ambari：
						1-、hdfs数据盘-> /opt    ✔
					nginx：nginx 以及hosts文件。
					zookeeper:  最大连接数。 ✔
						
							hbase修改配置：				
								-、修改了Hbase的hbase-site.xml 中的phoenix 相关的配置之后。
										phoenix.query.timeoutMs=1800000(ms)  -> 3600000  【ambari 默认为60s】
										hbase.rpc.timeout = 1200000 (ms) _>3600000   【ambari 默认为90s】
										hbase.client.scanner.caching = 200 
										hbase.client.operation.timeout=3600000
										hbase.client.scanner.timeout.period=3600000
										hbase.table.sanity.checks=false
										phoenix.query.keepAliveMs=3600000
										phoenix.schema.isNamespaceMappingEnabled=true
										phoenix.schema.mapSystemTablesToNamespace=true
								-、添加二级索引		
										hbase.regionserver.wal.codec=org.apache.hadoop.hbase.regionserver.wal.IndexedWALEditCodec
										hbase.region.server.rpc.scheduler.factory.class=org.apache.hadoop.hbase.ipc.PhoenixRpcSchedulerFactory
										hbase.rpc.controllerfactory.class=org.apache.hadoop.hbase.ipc.controller.ServerRpcControllerFactory
								-、 调大hbase--zookepper的超时时间（以前是90s）
										zookeeper.session.timeout=120000
								-、大批量查询-Unable to find cached index metadata
										phoenix.coprocessor.maxServerCacheTimeToLiveMs=180000
										phoenix.coprocessor.maxMetaDataCacheTimeToLiveMs=1800000
								-、zk连接数，hbase修改【下接zk的修改maxClientCnxns=500】
										hbase.zookeeper.property.maxClientCnxns=500
							zookeeper修改配置：		
								-、 MaxSessionTimeout=120000
									maxClientCnxns=500



大数据相关：
mysql：10.0.24.107/10.0.24.110(测试),10.0.24.200/10.0.24.203（UAT）,10.0.24.118/10.0.24.119（正式环境）
Hive:10.0.24.106:10000(测试),10.0.24.205:10000（UAT）,10.0.24.114:10000（正式环境）
Hbase:10.0.24.105（测试）,10.0.24.205（UAT）,10.0.24.114（正式环境）
HDFS:10.0.24.105:8020/10.0.24.106:8020（测试）,10.0.24.204:8020/10.0.24.205:8020（UAT）,10.0.24.113:8020/10.0.24.114:8020（正式环境）
Phoenix:10.0.24.107/10.0.24.110/10.0.24.111(测试),10.0.24.200/10.0.24.201/10.0.24.202/10.0.24.203(UAT),10.0.24.117/10.0.24.118/10.0.24.119(正式环境)
后端微服务相关：
mysql：
测试：10.0.40.113、10.0.40.114（mycat）、10.0.40.115
UAT：10.0.24.201、10.0.24.202、10.0.24.203（mycat）
前端服务相关：
测试地址：http://10.0.40.116:8060/
UAT地址：http://59.37.21.140:18060/

						

CD相关：
	BG进度：
		CNC，冲压，组装 ->  
			CD差异值进度：70% -> 35% 	
			问题进度：
				1、修改基准价规则 （已完成）
				2、系统中存在异常数据，需手动剔除。（已完成）
				3、修改基准价取数为供货价格。（进行中）
		模切 ->
			CD差异值进度：15% -> 10% 	
			问题进度：
				1、修改基准价规则 （已完成）
				2、系统中存在异常数据，需手动剔除。（已完成）
				3、修改基准价取数为供货价格。（进行中）
		结构件、磁材 -> 
			CD差异值进度：80% -> 50% 	
			问题进度：
				1、修改基准价规则 （已完成）
				2、系统中存在异常数据，需手动剔除。（已完成）
				3、sap存在冗余、丢失数据。（进行中）
		赛尔康  ->  已核对完成，CD存在差异系赛尔康数据异常，赛尔康已在修复数据，已反馈给赛尔康业务人员。
	风险项：
		按照目前进度，暂无风险项，预计下周可以核对完毕。
		
	大家，下午好，CD先关的优化，目前已关联基础表后，统计最新的差异比对如下：
	BG进度：
		CNC，冲压，组装 ->  
			CD差异值进度： 15~20% -> 10%~15%以内 
			优化逻辑进度：
				1、修改基准价规则 （已完成）
				2、修改基准价取数为供货价格。（已完成）
				3、关联基础表获取标准价（已完成）
		模切 ->
			CD差异值进度：10% -> 10%（关联基础表）
			优化逻辑进度：
				1、修改基准价规则 （已完成）
				2、修改基准价取数为供货价格。（已完成）
				3、关联基础表获取标准价（已完成）
		结构件、磁材 -> 
			CD差异值进度： 35% -> 20% （关联基础表）	
			优化逻辑进度：
				1、修改基准价规则 （已完成）
				2、sap存在冗余、丢失数据。（已完成）
				3、关联基础表获取标准价（已完成）
		赛尔康  ->  
			CD差异值进度： 1%以内
		无线充电、注塑、马达 ，5G->  
			CD差异值进度： 25% （关联基础表）	
			优化逻辑进度：
				1、修改基准价规则 （已完成）
				2、关联基础表获取标准价（已完成）
	目前比对CD，大数据平台包含所有线上数据。
		
	
	
	

具体优化方案如下：	
PA控制1%优化：
	1、模切BG等差异超过5%的BG数据，实行逐条对比(类比CNC、冲压)，对比每条数据查看具体差异原因，来优化BG区分逻辑 
		具体细节：1-、大数据优先通过程序对比平台数据与采购数据，提供差异数据（因模切每月的数据量大概在2-4w条，手动比对不现实）
				  2-、相关BG同事基于差异数据，注明原因，优化逻辑。
CD差异优化：
	分<基础表>和<报表+基础表>2个方向同时进行。（因基础表转化为SAP原始报表，业务繁杂，变现周期长）
		"<报表+基础表>"方向：即原有的方式，直接拉取SAP报表，关联基础表获取正确字段，区分BG，计算CD。
			优点：快速迭代，保证现有的CD准确。
			缺点：原始报表逻辑非大数据编写，报表业务不清晰，更新迭代缓慢，容错率低。
		"<基础表>"方向：即抽取SAP基础报表后，在大数据端生成业务报表，区分BG,计算CD。
			优点：原始报表逻辑大数据编写，报表业务清晰明朗，后期更新迭代快，容错率低。
			缺点：业务编写繁杂、周期长。
		具体实现细节：
			"<报表+基础表>"方向：
				1、通过"报表+基础表"，获取所需字段（包括缺失、错误字段等），解决因单位、汇率等导致CD异常的情况。
			"<基础表>"方向：
				1、通过基础表转化为报表，同时依据具体业务添加所需字段，解决因单位、汇率等导致CD异常的情况。
		
具体优化方案如下：	
PA控制1%优化：
	1-、大数据提供PA差异数据（程序逐条对比）
	2-、BG同事负责完善差异原因
	3-、大数据优化规则
CD差异优化：
	1-、大数据采用SAP基础表生成对应报表，解决因单位、汇率异常导致的CD差异
	2-、需要各BG都采用新规则计算直降CD。（参见《CD计算类型 REV 06.xlsx》）
		

差异原因分析：
	1、大数据统计的CD来源：（直降）
	   采购月报的CD来源（包含直降、客指、返点、线下数据等）
	采购月报的CD部分未剔除直降部分CD
	如若需要进一步缩小CD差异，需要采购月报的CD将线下、返点、客指的数据剔除后对比。


PA控制1%优化（完成40%）：
	1-、程序比对7月的模切数据，（完成80%）
CD差异优化（完成60%）：
	1-、大数据采用SAP基础表计算CD业务逻辑已修改完（已完成）
	2-、差异统计，预计下周1可以更新一版数据对比（完成90%）
供应商对账（完成80%）：：
	1-、模具系统采用SAP基础表关联生成，达成率数据。（已完成）
	2-、新增需求，需抽取SAP财务事务表，优化模具系统达成率（完成10%）

	
供应商对账相关：
	1、修改了BG总达成率、采购员达成率计算逻辑以及SAP对账金额异常的BUG。（已完成）
	2、去掉对账数量，应对数量，新增已对供应商数量，实对供应商数量。（已完成）
	3、冲压模具系统总达成率，采购员达成率逻辑修改（未开始）
	4、SAP凭证表中对应的日期字段，取值错误需重新拉取（未开始）

CD核对相关：
	1、数据差异较上周无缩小。
存在问题：
	1、SAP江粉系统需拉取供货价格基础表作为基准价参考。
	2、SAP目前是直接抽取报表作为数据支撑，容错率低。
	3、SAP数据通过接口增量获取数据，未确定数据唯一标示，不能保证数据高一致性。
解决方案:
	1、拉取方式需要改为为抽取基础表
	2、需与SAP沟通获取数据唯一标示。
	
	

		
		
SAP抽取优化：
	1、增量抽取全部字段,包含新增和修改的数据（以主键为判断）
	2、044报表换成基础表(采购订单和采购收货)和逻辑
	3、ECC报表抽取缓慢改善（可以换成基础表）
	4、048报表拉取采购订单全部字段
	
hive->phoenix 增量更新：
	1、已部署测试，测试中

区分无线充电，模组，马达，SY:
	1、核对数据中。
	
						
余姐，目前excel导出金额格式（千分位）问题，无法满足格式既是千分位同时金额类型为数值。目前只能满足以下两种情况
1、导出的excel中金额数值格式是千分位（类型实际为字符串，不能直接在excel中求和）。
2、导出的excel中金额数值格式是数字（类型为数值，可直接求和），但不是千分位（需要自己手动修改数值列的格式为“会计专用”）。
这个问题是我这直接反馈给王尹还是您反馈。

<ALL>,<所有BG排名>,<BG统计>,<厂区采购额>,<供应商的CD金额排名>,<月度采购额>,<供应商账期天数>,<物料类型采购额>,<物料降价记录>,<BG供应商对账达成率排名>,<供应商对账达成率>

所有BG,CNC,组装,冲压,模切,东莞结构件,深圳结构件,磁材,赛尔康,5G,设备自动化

	
平台优点：
1、手工月报平均需一周完成，数据平台月报需要时可直接导出。
2、手工月报更新（每周），“实时性”欠佳，从而导致数据误差，数据平台更新（每天），保证了数据“实时性”。
3、手工月报人为操作易出现数据误差，数据平台可避免此类操作误差。
4、数据平台提供多个维度来解析PA值，清晰直观。

平台缺点：
1、CD差异较大：因月报数据来源多，规则繁杂，源数据不规范导致。
			
近半年工作情况：
1、CD月报添加5G数据（报表+订单+委外）（完成100%）
2、CD月报PA，CD直降核对。（完成90%）
3、供应商对账模块（完成80%）
4、测试+UAT大数据平台运维（完成100%）
5、正式环境大数据相关服务搭建（完成30%）

工作中问题总结：
1、项目需求理解不深刻，致项目延期。
2、不同平台沟通效率低，如与SAP，模具系统，存在沟通繁琐，周期长问题。
3、不熟悉SAP和EAS业务平台流程。

如何改进：
1、需求对接落地文档，开发落地文档。
2、定期组织SAP和EAS业务培训。
			
1-、CD直降核对，当前差异原因：	
	1、依据规则取数的基准价与业务数据基准价对比，基准价有细微差异，但是对应的数量基数大，导致CD值差异大。
2-、模具系统现有的对账流程可以满足需求，已反馈给汤加丽
3-、赛尔康测试数据测试通过，正式环境测试域名异常。
			
测试：微服务+大数据
	10.0.40.112
	10.0.40.113
	10.0.40.114
	10.0.40.115
	10.0.40.116
	10.0.24.105
	10.0.24.106
	10.0.24.107
	10.0.24.110
	10.0.24.111
UAT：微服务+大数据	
	10.0.24.200
	10.0.24.201
	10.0.24.202
	10.0.24.203
	10.0.24.204
	10.0.24.205
				
杨工您好，目前有如下疑惑，烦请解答下。
1、	ICStockBill.FTranType=1
	ICStockBillEntry.FSourceTranType=71
	t_SystemProfile.FKey='CompanyName' 
	麻烦告知下对应字段及取值枚举的含义
2、维奇的委外表如何与ICStockBill,ICStockBillEntry,POOrderEntry,POOrder关联呢？
				
	-、tezbug：	
		1-、MR和tez 遇到union all 是，可能会导致MR读不全数据。
		:查阅资料后发现tez对于insert union操作会进行优化，通过并行加快速度，为防止有相同文件输出，所以对并行的输出各自生成成了一个子目录，在子目录中存放结果。如果此时全部hive客户端引擎及相关都设定为tez，则无问题。如果有客户端还在使用mr引擎，则会出现读取不到数据的情况。
			参考资料：https://blog.csdn.net/Lyx_____h/article/details/104991136
		2-、tez默认开启mapjoin，小表数据大于10M,或截取导致数据变少？
			-- 多个mapjoin 转换为1个时，限制输入的最大的数据量 影响tez，默认10m
			set hive.auto.convert.join.noconditionaltask.size =10000000

			当表的数据大于10m时，tez会把多余的那部分数据截掉，这样就会造成丢数据
				参考资料：https://www.cnblogs.com/yangxusun9/p/12675606.html
							http://www.mamicode.com/info-detail-2977426.html
  
   -、周建问题：
	  1、结构件的eas数据 -> eas 根据 成本中心='BC'
	  2、
		-、磁材， 物料类型显示  √
		-、磁材，结构件，赛尔康 ，右下角改为  入库数量排行？   √
	  3、华东注塑(eas) -> 4月份之前数据根据 ，库存组织编码=01.03.01 
	  4、sap中的cnc如何剔除？
	  5、杨丽华的数据，sap集团没有（zmm038）
	  
   -、cnc总结：
		1、内部交易中剔除“鑫炎”
		2、模具系统 + sap数据少抽了（系统确认是否开发）
			1、模具系统里无锡领益的数据对比发现你是没有抓取的（但是你刚给我看那个表里有开放数据）
			2、sap: cnc=>阳极SAP(亮彩)，下单的厂区是8820
		3、供货价格（t_sm_supplyInfo）
				: 库存组织 ，供应商，物料编码，生效日期，失效日期，单价，状态（核准），币别，是否计税单价（是否含税）
				：出现日期范围重合的数据，单价取最低值。
				：取得的单价要覆盖原单价。
		4、没有料号（杂项），取得收货记录（采购收货）：虞桦   <--  外挂平台（杂项）
		5、sap集团  zmm023  -> 杨丽红（有料号和没料号） 【部分抓取到】
		   sap结构件（8820）-> 阳极 (谢文隆)  【全部缺失】
   -、模切总结：
		1、区分规则： by分类（主材，辅材 ） ->  by供应商    √
				-：分类在eas中是那个字段。   √
				-：supplier_code --> trim(supplier_code)   √
				-: 维护模切供应商表->  dwmiddle.dwm_moqie_supplier   √
			：业务采购员必填是否提单-> 反馈给佳丽
		2、业务数据导入系统。
		3、sap集团，
			1-、amount2 -> amount1  
			2-、
				-、模组 -> 模切 数据混乱  -->  根据采购员区分，组装根据采购员 
				-、剔除内部交易时， first_level ,supplier(TLG) 修改。
		4、eas数据 -->  可以倒推根据制单人（订单）+采购员

		模切数据差异原因：			
		1、sap部分公司无法区分BG，
		2、sap金额美元未换算为人民币
		3、eas金额基本持平（具体差异原因带比对）
		   
	-、模具系统：	
		1、部分数据下线，需要提单
			-、部分表存在字段为缺失
			
	-、5G 
		：db账号已提供
	
	-、冲压问题：
		针对sap相关数据，工厂编码为2031,3013,3014的数据，以下简称"工厂数据"
			1、模切采购反馈  ->  此"工厂数据"中,模切采购下单的数据，PA算入冲压。
			2、冲压采购反馈  ->  此"工厂数据"中,冲压BG只会导出冲压采购员的数据，模切采购员下的单不算入月报汇总。
			  问题：
					1、模切采购提供的1-3月份数据中,却包含有此部分"工厂数据"，模切PA值以哪个为主？
					2、模切反馈的归于冲压的数据，冲压却没算入月报，冲压PA值以哪个为主？
		2031(SY)
		3013(冲压非保税)
		3014(冲压保税)
		
	-、反馈manager
		2020-04-27
		1-、模切采购 提供 每个模块的pa（sap，eas，模具）
		2-、sap ，SY,注塑 1-3月采购是否都是从系统
		3-、计算每个模块的条数 -> PA
	

		1、采购员为空的数据，无须添加采购员必填，即可获取到。
			-、汤加丽反馈，模切采购员为空的数据，可以根据采购订单的制单人获取（已和苏齐沟通，确认了采购订单的制单人是系统自带项必有值）。
			-、和彭莉确定，是否采购订单的制单人就是采购员。。。
		2、需要提供eas，sap，模具的PA值以对比
		3、eas,sqp导出方式
		4、内部交易剔除掉。
		
		
	1、5G维奇已拉取处理，待定时任务更新至系统（已完成）
	2、单价滞后优化已接入系统（已完成）
	3、SAP-模切数据核对（已完成80%）
		
目前模切PA差异在15%以内（1~3月），存在以下问题待解决。	
1、采购月报1-3（月报）中存在内部交易数据，这部分数据业务反馈目前无法剔除（大数据根据现有规则已剔除）。
	基于此，模切的内部交易规则是否需要修正？
		备注：内部交易规则-> 一级分类中，除了半成品，成品，其他都要剔除内部交易。
2、目前按照库存组织，BG，BU已无法进一步定位差异原因，需要统计以下内容，定位差异原因。
	1-、统计各模块的PA值。
	2-、逐条对比数据，比较差异（eas需要采购员）
	针对以上统计，目前采购提供的1-3月业务数据中，不能区分模块且数据中未包含采购员（eas系统），故需要采购业务重新导出一份1-3月原
	始数据，来辅助统计，以查找差异原因，进一步提高数据准确度。
		
		
		
	CNC，冲压，组装:
		1、模具系统缺少数据更新（已完成）
		2、sap数据缺失沟通（进行中 50%）
		3、单价滞后，根据供货价格获取单价（进行中 30%）
	赛尔康：
		1、数据核对完成
		2、新数据拉取中，预计周五完成（进行中 60%）
	模切：
		模切差异主要来自于sap：
		1、sap区分规则已反馈给技术（已完成）
		2、sap金额汇率修正（已完成）
		3、待更新sap数据后，核对PA值（待完成）
	新功能开发：
		1、"月结统计" 为空的BG,替换为"物料入库排名"显示。（进行中 50%）
		
8、	
	1-、数据删除问题以及业务制月报方式问题：
		-、目前CNC，组装，冲压 ，存在数据被删掉（1、只删除 2、删除后，新增）。
			解决：沟通eas工程师，1、数据做标记删除，而不是物理删除 2、仓库员规范操作。
		-、目前业务逐日累计制得月报。
			解决：是否可以在eas中加上订单更新的状态，到月底业务核对后，再做月报
		汇总解决：
			月底记录日期，根据日期删除数据。
	2-、单价滞后问题：
		-、解决:根据供货价格（t_sm_supplyInfo）有效期  -> 单价 （修改月报中的单价）  ☆
	3-、模切相关
		1-、eas添加采购员，预计4月14上线后，和苏齐对比数据差异
		2-、比对模切3月，4月（等待业务提供）差异。
	4-、结构件 ->	周建正在核实 "横沥板材 （8822工厂)" ,"松岗板材（EAS	系统）"
	5-、以后需要多一个维度，内部交易和非内部交易两部分数据。
9、经管销售报表
10、-、模具系统、sap集团数据少抽了
11、
导出excel功能测试：
	1、数据列和值是否一一对应
	2、数据条数是否一致（与数据库中）
	3、数据格式（小数位，百分号等）
	4、导出效率统计
	
12、5G数据库
	1、伟联：AIS20200409144028                  ☆
		1、模具类不能做外购入库单。不在开发取数范围内；
			-->  根据订单数据取数。
		2、采购提供的是制单时间（报表中显示为入库审核时间），开发取数是审核时间； 	
			-->1、业务反馈使用“入库审核时间”，故业务当前月报数据错误（需给技术反馈此问题/业务规范导出数据格式，使得业务导出的数据是按照入库审核时间来算月报）。
			-->2、当前-根据视图导出的数据没问题。
		3、维奇的杜勇还在验证；
		4、基准价格手工录入一次
	2、维奇：AIS20200410181704
		：确认维奇数据什么时候可以提供？
		
13、大数据环境配置
4台 512    32T(8*4)
2台 128    16T(8*2)

物理机内存条最小：64G  
物理机磁盘6块（4+2），2块可拆卸（2.4T*2）
物理机对应的虚拟机内存/磁盘，可自由调配。

	1、比如物理机4台，内存512，针对这4台物理机，内存是平均分配还是可自由组合？
	2、物理机的磁盘是否可拆卸的，以后是否可拆卸追加至其他物理机上？(因为有些物理机不需要8T那么多的磁盘空间)
	3、假如物理机内存128G,虚拟为3台，内存是否可自由调配，比如每台虚拟机内存依次为64G 32G 32G ？
	
2020-05-22  2020-05-29
本周任务进度：
1、供应商对账：
	1-、数据抽取(完成100%)
	2-、ETL(完成30%)
2、修复供货价格中单位问题，模切1-4月PA差异由5%左右->缩小至4% （已完成）
差异原因: 1-、待逐条对比，结合CD直降差异对比查找原因。
3、赛尔康数据差异  （完成80%）
	1、新增数据已录入数据平台，待salcomp采购业务员核对后更新至系统。
4、5G委外数据已更新至系统 （已完成）
5、物料降价迭代优化，已发布至测试服务。  （已完成）
	1-、优化波动服务
	2-、详情新增物料最近单价，降价幅度
6、测试，uat服务器迁移进度 （完成10%）
	1、测试环境迁移：
			测试服务器10.0.24.111迁移了耗时1天半，只迁移了55%，运维还在查找原因。
	2、UAT迁移（还未开始）
7、新配置服务器集群搭建进度  （未开始）
	1、本周运维因迁移事宜整合资源，配置调整，服务器暂不可开启搭建。

下周任务安排：
1、供应商对账：
	1-、ETL
	2-、与前后端沟通展示接口开发。
2、CD直降核对。
3、赛尔康数据录入系统。
4、物料降价迭代优化，发布至UAT。
5、跟进测试，UAT服务器迁移。
6、新配置服务器集群搭建同步进行。
	

2020-06-05

1、供应商对账(完成70%)
  1-、ETL(完成60%)
  2-、前端ui和接口(完成70%)
3、采购CD直降差异。（完成60%）
	1-、供货价格，对应的标准价单位未统一。待统计数据对比 (80%)
	2-、sap提供部分基准价数据不准确，需根据原有规则重新生成基准价。(40%)
4、赛尔康数据差异，
  1、赛尔康数据核对滞后（赛尔康业务人员因处理紧急业务，推迟核对）	
	
	
待分配任务：
1、5G，赛尔康BG供应商对账达成率计算。
2、hive写入phoenix代码编写。
3、kettle文件梳理。
4、dolphin定时调度梳理维护（对账达成率+自动化CD）。





-、总金额改为：PA金额
-、CD金额，PA金额，cd比例 模块展示，
	汇总：去掉厂区，供应商数量，法人公司数据 ，改为  月报：CD金额，PA金额，cd比例
	当个BG:去掉厂区，供应商数量，法人公司数据 。改为  月报：CD金额，PA金额，cd比例  且 供应商数量显示到左上角达成率。
-、注塑，核对。 
-、FATP,待开发模块 ->  6090<A15>  ->>  FATP设备数据展示（CD,PA)  ，其余模块只展示 6090 -> A18
	:也就是6090里你也暂时别管是谁下单的，那个组别的，都算成FATP的就行
	:因为目前6090里，有A18的，也有A15的

-、韩启从


-、SOP ，后台上传的接口  ，/上传包材协议回收率
-、







1、带抽取系统：
	sap集团，sap结构件，sap磁材。
2、待抽取表以及表字段
表名:
	REEG
字段以及注释：
集团	MANDT
凭证编号   BELNR
财年  GJAHR
发票项目  BUZEI
采购凭证  EBELN
项目  EBELP
物料   MATNR 
公司代码	BUKRS
工厂	WERKS
金额	WRBTR
借/贷标识	SHKZG
税码	MWSKZ
订单单位   BSTME
数量   MENGE
OPUn中的数量  BPMNG
订单价格单位  PC  ST  BPRME
总库存  LBKUM
参考凭证     LFBNR
参考凭证项目   LFPOS
基本计量单位  MEINS
发票凭证数量	RBMNG
发票数量, PO单位	BPRBM	
地区	GRIRG
供应商	LIFNR         
发票日期	BLDAT
过帐日期	BUDAT
起算日期	ZFBDT
	
2、项目（行号） --> 订单表。
3、RSEG这些表，是否包含，结构件，磁材的数据？

1、结构件，磁材是否有订单编号
2、测试下，燕工新增的icode字段是否正常（测试）


2020-06-12
1.采购CD直降差异：
   1）供货价格，对应的标准价单位未统一，待统计数据对比 。(完成进度：100%)
   2）SAP提供部分基准价数据不准确，需根据原有规则重新生成基准价(完成进度：40%)
   
2.赛尔康月报：赛尔康数据核对需滞后预计2周时间（赛尔康业务人员因处理紧急业务，推迟核对）。
3.供应商对账模块：
  1）数据抽取：
       a.赛尔康因紧急项目上线预计需推迟2周才能进行数据提取；(完成度30%)
       b.因模具系统无法与SAP和EAS共联，故模具系统供应商暂无法比对对账达成率。
	   C.sap集团，sap江磁发票数据预计2020-06-18可以接入。(完成度50%)
  2）ETL（数据逻辑处理）---完成进度：90% 
  3）前端UI和接口（已有数据已发布测试环境）---完成进度：90%
  
  
  
1、DB选择：HIVE/phoenix
2、DB账号权限控制（未完善）
3、连接并发控制（未完善）
4、查询效率测试（未完善）
5、DEMO（目前可以提供DB连接方式）

1、数据量级（1、所有表？2、基础表？）
2、查询效率（1、取数频次怎么样？）
3、需不需要给JDBC连接方式
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------	
-------------------------------------------------------------------------------------------------------------------------------------------	
-------------------------------------------------------------------------------------------------------------------------------------------	
-------------------------------------------------------------------------------------------------------------------------------------------	
			
1、CNC，冲压，组装数据差异。
	   数据取数差异:
		1、BG规则修改频繁。   成本中心 -> 采购员 
		1、根据excel提供的导出业务页面，大数据导出数据和eas对应导出的页面逻辑不一致（后查验后确认）。
		2、（对应字段为null，后查验后取到正确字段）
		3、业务差异：业务部分逻辑再加工
2、结构件差异：
	   业务逻辑沟通，提供规则滞后。
3、模切数据：
		暂未开始
5G数据比对：
1、业务提供的类型："模夹治具类"当前系统是不作为入库单的，如若需要，需新开系统，业务导入，才能从系统中导出。
	--> 业务反馈"模夹治具类"可以从订单中导出。
	--> 当前系统中没有订单信息，需要另外开系统。
	--> 大数据抽取订单表
2、业务给的入库审核时间 ，在数据库实际上是制单时间（需要业务确定入库审核时间是否取值正确） 
	--> 业务反馈，是从系统导出的数据，对应的日期就是入库审核日期。
	-->技术反馈，用户使用系统中导出的报表中有两个时间"入库审核日期"和"制单日期"，需要确认业务在做报表时，是否日期取错了，另外需要业务确认报表
	的时间周期是以哪个时间作为基准。
3、5G数据PA由，维奇和伟联构成，目前大数据只抓取了伟联的数据（维奇还没开放）  
	--> 维奇具体什么时候可以开放呢？
	--> 技术反馈：维奇的杜勇还在验证中，暂时给不了具体时间。
4、"基准价"目前技术反馈是业务手动更新数据至系统，如果未更新，则取不到基准价，是否需要改为按照eas的取基准价标准取值?
	-->	业务每年更新一次。
	-->  技术反馈： 业务手动更新，若未更新，不能从历史数据中获取某个物料的基准价，如若需要此功能，需要再提单，开发。
10、
一、数据校验进度:
1-、CNC	已完成(90%)
	1、已提供对比后的数据给业务(逐条数据对比). (100%)
		核对数据差异原因:
			1、大数据未根据事务类型导出数据.
			2、业务提供金额和大数据提供金额,计算逻辑不一致.
		核对后(单位:百万): 
			重合金额:192,303810 
			差异金额:22.922771(业务)
					 53.678490(大数据)
	2、其他数据差异原因,正在核对中  (50%)
2-、组装	已完成(100%) 
3-、磁材	已完成(100%)
4-、模切 进行中(30%)
	1、等待业务提供1月份基础数据 
	2、对比逻辑已开发完 (100%)
5-、冲压 进行中(50%) 
	1、数据对比进行中
6-、结构件  已完成(100%)
	1、已根据最新的业务规则计算数据

二、5G采购报表进度(40%):
1-、ETL(80%)
2-、前后端交互测试(未开始)


一、数据校验进度:
1-、CNC	已完成(90%)
	-、eas相关数据核对基本完成（100%）
	-、模具系统逻辑修改，数据抽取新增退货单，(30%)
	-、sap相关数据核对，待sap提供最新的过滤规则，更新sap数据。(80%)
2-、组装	已完成(100%) 
3-、磁材	已完成(100%)
4-、模切 进行中(30%)
	1、业务已提供1月份基础数据 （100%）
	3、对比结果提供业务（未开始）
5-、冲压已完成(70%) 
	-、eas相关数据核对（50%）
	-、模具系统逻辑修改，数据抽取新增退货单，(30%)
	-、sap相关数据核对，待sap提供最新的过滤规则，更新sap数据。(80%)
6-、结构件  已完成(90%)
	1、已根据最新的业务规则计算数据(100%)
	2、业务提供最新规则待更新（未开始）
二、5G采购报表进度(100%):
	1-、ETL(100%)
	2-、前后端交互测试(100%)
三、赛尔康 	已完成（40%）
	1、ETL（50%）
		-、接口调试完成，数据抽取完毕，（2019-至今数据）
		-、核对数据，逻辑开发（未开始）
	2、前后端交互测试（未开始）
	
	
	
	

余姐，今天比对的结果，cnc，组装，冲压 ，eas和sap系统数据差异在5%以内，
只有模具系统的数据差异大。和佳丽沟通后，需要新增逻辑，晚点发给你统计的最新结果。


一、采购相关:
1-、CNC（100%）
	数据核对：
	-、大数据独有（100%）
	-、业务独有(100%)
2-、组装	(100%) 
3-、磁材	(100%)
4-、模切 (20%)
	1、eas已添加采购员字段，业务已提供部分数据，核对中 （60%）
	2、其他模块数据待提供，待核对（未开始）
5-、冲压 (50%) 
	-、2-3月份数据核对中（50%）
6-、结构件  (80%)
	1、eas注塑数据已抽取（2020年4月之后的数据）。(100%)
	2、结构件2-3月数据核对（50%）
7-、5G   (90%):
	1-、等待绵阳服务修复，完善订单数据。(90%)
8、赛尔康 （90%）
	1-、业务逻辑修改更新（50%）
二、经管相关:（30%）
1、销售报表：
	1-、SAP报表-ZFI014，SAP报表-MB51数据数据已提供。【SAP报表-ZSD024等待sap开发报表接口（sap排计划中）】
		ETL（60%）
	2-、业务处理（未开始）
	3-、前后端测试（未开始）
	
	
	1.新增模块BG(BU)：经核对，无线充电模组马达、无线充电和 冲压SY数据已经抽取到数据仓库，可以通过厂区及库存地点进行筛选
  但新增抽取过来华东注塑（2091）只录入今年从4月份的数据
2.赛尔康：由于陈菁和业务部门进行数据测试，需要增加VMI和STD业务和过滤逻辑，印度那边预计这周5开发完，测试OK后，在给出新的接口
	
	
	
余姐，CD直降目前情况：
1、CD的取数规则（sap），采购单位异常等已优化完毕。CD直降目前整体差异（与采购CD对比）在55%左右。 【已完成】
2、CD直降个别数据异常（客指，返点等数据），和汤加丽沟通，这部分属于线下数据，目前大数据这边暂处理不了。 【已完成】 
3、CD直降线上数据准确度需核对（和汤加丽沟通，类似于PA逐行核对），从而剔除掉返点，客指等线下基准价数据，保证线上直降CD的准确度。【未开始】
==============================================================================  ==========================  ==========================  


删除测试数据:
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid1_new2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_new
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_rmb
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_standard_price
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_standard_price_dim
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_standard_price_dim_sup
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_standard_price_supplier
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_standard_price_supplier_new
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_final
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_final2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_final3
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_final4
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_final_rmb
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_final_rmb_cd
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_final_sup
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_new
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_company_material_cd_by_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_cd_by_month
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_cd_by_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_company_distinct_cd_by_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_company_no_standard_by_cd
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_distinct_cd_by_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_distinct_cd_by_month
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_no_standard_by_cd
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_purchaser_distinct_cd_by_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_material_supplier_distinct_cd_by_month
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwmiddle.db/dwm_eas_purchaser_material_cd_by_month2
删除历史数据表的分区：
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid1_new3/day=2019-01-01
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid1_new3/day=2020-01-16

hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_new3/day=2019-01-01
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_distinct_new3/day=2020-01-16
alter table dwmiddle.dwb_purchase_combine_mid_report_eas_distinct_new3 drop PARTITION(day='2020-02-24')

hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_new_test3/day=2019-01-01
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_new_test3/day=2020-01-16
alter table dwmiddle.dwb_purchase_combine_mid_report_eas_new_test3 drop PARTITION(day='2020-02-24')


hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_report/day=2019-01-01

hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_report_cd/day=2019-01-01
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_report_cd/day=2020-02-19

hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_report_cd2/day=2019-01-01

hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_standard_price/day=1000-01-01
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_standard_price/day=2019-01-01


hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL/day=2019-01-01
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL/day=2019-11-14
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL/day=2019-12-16
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL/day=2020-01-16
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL/day=2020-09-08
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL/day=2020-02-14


hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ods_eas_new_eas75_t_im_materialreqbillentry/day=2020-02-12

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ods_eas_new_eas75_t_mm_mftorderstock/day=2020-02-14

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ods_eas_new_eas75_t_im_materialreqbill/day=2020-02-12
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ods_eas_new_eas75_t_im_materialreqbill/day=2020-02-14

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSENTRY/day=2019-01-01
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSENTRY/day=2019-11-14
hadoop fs -rm -r  -skipTrash  /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSENTRY/day=2019-12-16
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSENTRY/day=2020-01-16
hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSENTRY/day=2020-02-14

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_ACCOUNTBALANCE/day=2020-02-24

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_VOUCHER/day=2020-02-24


hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_VOUCHERENTRY/day=2020-02-24


hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_MANUFACTURERECBILLENTRY/day=2020-09-08

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_ManufactureRecBill/day=2020-09-08


hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSBILL/day=2020-02-24

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_SM_PURORDER/day=2020-02-24


/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_ACCOUNTBALANCE
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_VOUCHER
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_VOUCHERENTRY
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_MANUFACTURERECBILLENTRY
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_ManufactureRecBill
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSBILL
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSENTRY
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_SALEISSUEBILL
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_SM_PURORDER
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_SM_PURORDERENTRY
/warehouse/eas/ods/ods_eas_new_eas75_t_im_manufacturerecbill
/warehouse/eas/ods/ods_eas_new_eas75_t_im_manufacturerecbillentry
/warehouse/eas/ods/ods_eas_new_eas75_t_im_materialreqbill
/warehouse/eas/ods/ods_eas_new_eas75_t_im_materialreqbillentry
/warehouse/eas/ods/ods_eas_new_eas75_t_im_otherissuebillentry
/warehouse/eas/ods/ods_eas_new_eas75_t_im_saleissuebill
/warehouse/eas/ods/ods_eas_new_eas75_t_im_saleissueentry
/warehouse/eas/ods/ods_eas_new_eas75_t_mm_manufactureorder
/warehouse/eas/ods/ods_eas_new_eas75_t_mm_mftorderstock



-- 删除多余数据与分区
show partitions eas.ods_eas_new_eas75_t_im_purinwarehsentry

select DISTINCT day from  eas.ods_eas_new_eas75_t_im_purinwarehsentry

alter table eas.ods_eas_new_eas75_t_im_purinwarehsentry drop partition (day<='2020-01-16')

alter table eas.ods_eas_new_eas75_t_im_purinwarehsentry drop partition (day='2020-02-22')


drop table dwservice.dws_cd_by_amount_month2

drop table dwservice.dws_cd_by_material_cut_price_month
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwservice.db/dws_cd_by_material_cut_price_month
drop table dwservice.dws_cd_by_material_cut_price_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwservice.db/dws_cd_by_material_cut_price_month2

drop table dwservice.dws_cd_by_material_type_month
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwservice.db/dws_cd_by_material_type_month
drop table dwservice.dws_cd_by_material_type_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwservice.db/dws_cd_by_material_type_month2

drop table dwservice.dws_cd_by_supplier_month
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwservice.db/dws_cd_by_supplier_month
drop table dwservice.dws_cd_by_supplier_month2
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwservice.db/dws_cd_by_supplier_month2

drop table dwservice.dws_cd_by_account_day_month3
hadoop fs -rm -r -skipTrash /apps/hive/warehouse/dwservice.db/dws_cd_by_account_day_month

drop table dwservice.dws_cd_by_area_day_month
hadoop fs -rm -r -skipTrash  /apps/hive/warehouse/dwservice.db/dws_cd_by_area_day_month
drop table dwservice.dws_cd_by_area_day_month2
hadoop fs -rm -r -skipTrash  /apps/hive/warehouse/dwservice.db/dws_cd_by_area_day_month2

drop  table dwservice.dws_cd_by_material_month2
hadoop fs -rm -r -skipTrash  /apps/hive/warehouse/dwservice.db/dws_cd_by_material_month2

drop table dwservice.dws_cd_by_purchaser_month2
hadoop fs -rm -r  -skipTrash  /apps/hive/warehouse/dwservice.db/dws_cd_by_purchaser_month2


drop table  dwservice.dws_cd_by_purchaser_month_year3
hadoop fs -rm -r  -skipTrash  /apps/hive/warehouse/dwservice.db/dws_cd_by_purchaser_month_year

drop table dwservice.dws_purchase_report_by_eas2
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwservice.db/dws_purchase_report_by_eas


-- 2020-04-07  删除历史冗余数据
hadoop fs -rm -r  -skipTrash /apps/hive/warehouse/dwmiddle.db/dwb_purchase_combine_mid_report_eas_new_test3/day=2020-02-04 
alter table dwmiddle.dwb_purchase_combine_mid_report_eas_new_test3 drop partition (day='2020-02-04')


-- 2020-04-20 删除历史冗余数据  (脚本路径  
	-- (/home/hdfs/rm_hdfs   lymaster01) ==>  MainFunction
			1、su hdfs
			2、nohup sh generate_rm_hdfs.sh ./file.txt ./date.txt eas 5 >> generate_rm_hdfs.log 2>&1 &
			3、nohup hive -f ./drop.sql >> drop.log 2>&1 &
			4、nohup sh rm_hdfs.sh ./delete_dir.txt  >> delete_dir_hdfs.log 2>&1 &
	-- (/opt/hdfs			 lymaster02)

hadoop fs -rm -r  -skipTrash /warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSBILL/day=2020-03-29
alter table eas.ods_eas_new_eas75_t_im_purinwarehsbill drop partition (day='2020-03-29')


/warehouse/eas/ods/ODS_EAS_NEW_EAS75_ALLBILL
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_PRODUCTION_ORDER
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_BD_MATERIAL
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_ACCOUNTBALANCE
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_GL_VOUCHERENTRY
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSBILL
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_IM_PURINWAREHSENTRY
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_SM_PURORDER
/warehouse/eas/ods/ODS_EAS_NEW_EAS75_T_SM_PURORDERENTRY
/warehouse/eas/ods/ods_eas_new_eas75_t_im_manufacturerecbill
/warehouse/eas/ods/ods_eas_new_eas75_t_im_manufacturerecbillentry
/warehouse/eas/ods/ods_eas_new_eas75_t_im_materialreqbill
/warehouse/eas/ods/ods_eas_new_eas75_t_im_materialreqbillentry
/warehouse/eas/ods/ods_eas_new_eas75_t_im_saleissuebill
/warehouse/eas/ods/ods_eas_new_eas75_t_im_saleissueentry
/warehouse/eas/ods/ods_eas_new_eas75_t_mm_manufactureorder
/warehouse/eas/ods/ods_eas_new_eas75_t_mm_mftorderstock


/warehouse/eas/ods/ods_eas_new_eas75_t_mm_mftorderstock/day=2020-04-12


2020-02-23
2020-02-04
2020-02-26
2020-03-01
2020-03-04
2020-03-08
2020-03-18
2020-03-22
2020-03-29
2020-04-01
2020-04-05
2020-04-08
2020-04-12
2020-04-15





.\administrator
Tlg.lingyi2019

绵阳服务账号：
数据库账号：weiqi  密码：Tlg.lingyi2020

-- 伟联 数据库信息
weilian.ip=10.48.21.10
weilian.dataname=AIS20200409144028
weilian.port=1433
weilian.username=weiqi
weilian.password=Tlg.lingyi2020
-- 维奇 数据库信息
weilian.ip=10.48.21.10
weilian.dataname=AIS20200410181704
weilian.port=1433
weilian.username=weiqi
weilian.password=Tlg.lingyi2020



123nbsp&

模切：刘青玲
CNC:罗政钧
冲压：李秋云
设备：赵齐云
组装：杨甲香
磁材:刘章卫
结构件：陈霞
显示模组：胡伶丽

:%s/dwbase.dwb_sap_cicai/dwdetail.dwd_cicai_cd_detail/g 
dwbase.dwb_sap_cicai   ------->dwdetail.dwd_cicai_cd_detail
   
sap.ods_sap_zdmmr027 --------->dwdetail.dwd_jiegoujian_cd_detail

sap.ods_sap_zfmm_044_jituan ----->dwdetail.dwd_jituan_cd_detail


UAT  2020-04-09
4	3915.929204
unknown	827249726.751303
2	97235345.713646
5	22507905.60012
3	294130916.168244
1	213830426.721272


测试  2020-04-09
5	22470113.56468
2	97239328.014531
4	3915.929204
1	213868218.756712
unknown	827249726.751303
3	289025091.520564

测试  2020-04-10    (冲压也剔除‘盛翔模房’)
4	3915.929204
2	93924204.140946
3	292503334.67435
unknown	827249726.751303
1	213079805.481414
5	22408166.66202

测试  2020-04-13    (冲压也剔除‘盛翔模房’  1-2月   ，  后面的hive脚本全部都又剔除'盛翔模房')
5	22408166.66202
3	292503334.67435
unknown	827249726.751303
1	218322798.111414
2	97275049.034531
4	3915.929204

测试  2020-04-13    (冲压也剔除‘盛翔模房’  1-2月   ， )
5	22408166.66202
3	292503334.67435
unknown	827249726.751303
1	213079805.481414
2	97239328.014531
4	3915.929204

测试  2020-04-14     3月数据对比   (冲压也剔除‘盛翔模房’  3月   ， )
5	11505712.971925				11.5057		12.4786			(100)
3	251707305.842846			251.707		350.33
unknown	534812304.322836
1	95145399.928763	  	   	    95.145   		100.476    【800~1000条】
2	63208112.924961
4	473242.032655

测试  2020-04-15     1月数据对比   (冲压也剔除‘盛翔模房’  3月 ,  + "鑫炎" )
5	22408166.66202
2	97241389.964531
4	3915.929204
1	218441979.061414
unknown	827249726.751303
3	292503334.67435



1	2020-01	218441979.061414
10	2020-01	1782746358.620617415
12	2020-01	27380.44
13	2020-01	28448901.989912415
2	2020-01	97241389.964531
3	2020-01	292503334.67435
5	2020-01	22408166.66202
6	2020-01	173057796.4512
7	2020-01	95486534.3455
9	2020-01	27881148.280387
unknown	2020-01	827249726.751303

1	2020-02	54507959.575648
10	2020-02	445806769.8795930724
12	2020-02	4478
13	2020-02	16831819.8436790724
2	2020-02	21551585.712231
3	2020-02	73358898.621694
5	2020-02	7209623.205822
6	2020-02	17312507.5677
7	2020-02	16366170.2528
9	2020-02	8488411.422952
unknown	2020-02	230175315.677067

1	2020-03	97778255.240828
10	2020-03	1288279184.2187902001
12	2020-03	7600.6
13	2020-03	35332187.8830732001
2	2020-03	68362882.616539
3	2020-03	270515647.009396
5	2020-03	11505712.971925
6	2020-03	118979906.7509
7	2020-03	127606672.1079
9	2020-03	23378014.715393
unknown	2020-03	534812304.322836



1	2020-01	218441979.061414	86617293.9647601853
10	2020-01	1782746358.620617415	116439428.3450638027
12	2020-01	27380.44	-11623.771704
13	2020-01	28448901.989912415	19058486.1256634285
2	2020-01	97241389.964531	41411559.5645828999
3	2020-01	292503334.67435	22285083.2587323394
5	2020-01	22408166.66202	458353.2260729998
6	2020-01	173057796.4512	-40544915.1859
7	2020-01	95486534.3455	-38640660.6751
9	2020-01	27881148.280387	-7718815.582707
unknown	2020-01	827249726.751303	33524667.4206629498

1	2020-02	54507959.575648	59065717.7636693891
10	2020-02	445806769.8795930724	72046563.7592213882
12	2020-02	4478	-4478
13	2020-02	16831819.8436790724	13496875.9630201972
2	2020-02	21551585.712231	20150630.3234985
3	2020-02	73358898.621694	-936708.6590601931
5	2020-02	7209623.205822	8960.262352
6	2020-02	17312507.5677	-13475856.2555
7	2020-02	16366170.2528	-14671243.5196
9	2020-02	8488411.422952	-1622352.05184
unknown	2020-02	230175315.677067	10035017.932681495

1	2020-03	97778255.240828	15039627.7101611992
10	2020-03	1288279184.2187902001	115014630.9286132598
12	2020-03	7600.6	-3818.5956
13	2020-03	35332187.8830732001	19488783.1638699394
2	2020-03	68362882.616539	10958305.6374749988
3	2020-03	270515647.009396	9484938.0532019192
5	2020-03	11505712.971925	1110.684206
6	2020-03	118979906.7509	-57746883.004
7	2020-03	127606672.1079	-105071551.7783
9	2020-03	23378014.715393	209821864.830839
unknown	2020-03	534812304.322836	13042254.2267602032


unknown	2020-01	827249726.751303
5	2020-01	22408166.66202
3	2020-01	294721698.08389434
2	2020-01	97241389.964531
1	2020-01	218441979.061414
4	2020-01	3915.929204
2	2020-02	21551585.712231
5	2020-02	7209623.205822
unknown	2020-02	230175315.677067
1	2020-02	54507959.575648
3	2020-02	73708866.872766
3	2020-03	271973432.430157
unknown	2020-03	534811921.472836
2	2020-03	68362882.616539
4	2020-03	473624.882655
1	2020-03	97778255.240828
5	2020-03	11505712.971925

-- supplier  ->tez  后
unknown	2020-01	472540824.184895
1	2020-01	218441979.061414
4	2020-01	3915.929204
5	2020-01	22408166.66202
2	2020-01	97241389.964531
3	2020-01	308127573.507228

5	2020-02	7209623.205822
unknown	2020-02	160714498.27312
2	2020-02	21551585.712231
3	2020-02	76286900.240789
1	2020-02	54507959.575648

1	2020-03	97778255.240828
2	2020-03	68362882.616539
unknown	2020-03	326163910.447649
3	2020-03	276406736.19832
4	2020-03	473558.312655
5	2020-03	11505712.971925

-- 2020-04-22  tez+MR  
3	2020-01	308378828.374489
2	2020-01	99885482.992148
4	2020-01	3915.929204
5	2020-01	22408166.66202
unknown	2020-01	472529569.317639
1	2020-01	219531541.008335
1	2020-02	54574374.619915
unknown	2020-02	160714498.27312
2	2020-02	23158625.207799
3	2020-02	76353086.966452
5	2020-02	7209623.205822
4	2020-03	473603.272655
2	2020-03	69650424.220743
unknown	2020-03	327490749.002586
5	2020-03	11556652.865605
3	2020-03	276826254.676283
1	2020-03	98131457.011274
unknown	2020-04	159552536.264877
3	2020-04	119625025.468998
4	2020-04	398292.75354
1	2020-04	107196978.244127
2	2020-04	56507494.02229
5	2020-04	4756514.613728

-- 2020-04-25 tez+MR  + sap（区分冲压 + 模切 <-根据采购员） 
unknown	2020-01	472843852.076887
1	2020-01	218441979.061414
5	2020-01	22408166.66202
2	2020-01	98266468.904946
4	2020-01	3915.929204
3	2020-01	400289757.461022
5	2020-02	7209623.205822
2	2020-02	22350542.054976
unknown	2020-02	160724144.29082
3	2020-02	94916140.906392
1	2020-02	54172418.800517
4	2020-03	473207.252655
5	2020-03	11505712.971925
3	2020-03	195493723.421209
1	2020-03	95615079.122562
unknown	2020-03	326164261.507649
2	2020-03	49294980.158407
2	2020-04	26843150.906073
3	2020-04	97342872.647299
1	2020-04	99242501.787713
5	2020-04	4055261.186147
4	2020-04	398292.75354
unknown	2020-04	154913683.142724

-- 2020-04-25 tez+MR  + sap（区分冲压 + 模切 <-根据采购员） 
5	2020-01	22408166.66202
unknown	2020-01	472843852.076887
4	2020-01	3915.929204
1	2020-01	218441979.061414
2	2020-01	98266468.904946
3	2020-01	400289757.461022

unknown	2020-02	160724144.29082
2	2020-02	23941748.054686
5	2020-02	7209623.205822
1	2020-02	54507959.575648
3	2020-02	101243055.3165

unknown	2020-03	326281361.887965
5	2020-03	11505712.971925
4	2020-03	473047.962655
2	2020-03	61035762.973005
1	2020-03	97479320.341623
3	2020-03	290416196.279486

-- 2020-04-27 tez+MR  + sap（区分冲压 + 模切) + eas(根据采购员+supplier)  + amount为null） 
5	2020-01	22408166.662021
unknown	2020-01	558175642.633078
4	2020-01	3915.929204
1	2020-01	218441979.061804
2	2020-01	102025602.586092
3	2020-01	412820420.01665
unknown	2020-02	199109833.550371
2	2020-02	23941748.054713
5	2020-02	7209623.205822
1	2020-02	54507959.569448
3	2020-02	107004019.025305
unknown	2020-03	374143502.508689
5	2020-03	11505712.971925
4	2020-03	473033.362655
2	2020-03	62064864.744311
1	2020-03	100284326.317823
3	2020-03	299170305.742939

-- 2020-04-28 tez+MR  + sap（区分冲压 + 模切) + eas(根据采购员+supplier)  + amount为null + 制单人  
5	2020-01	22408166.662021
unknown	2020-01	557894551.160558
4	2020-01	3915.929204
1	2020-01	218441979.061804
2	2020-01	102025602.586092
3	2020-01	412820420.01665
unknown	2020-02	199109833.550371
2	2020-02	23941748.054713
5	2020-02	7209623.205822
1	2020-02	54507959.569448
3	2020-02	107004019.025305
unknown	2020-03	374143475.958689
5	2020-03	11505712.971925
4	2020-03	473059.912655
2	2020-03	62064864.744311
1	2020-03	100284326.317823
3	2020-03	299170305.742939



2	2020-01	102025602.586092
5	2020-01	22408166.662021
1	2020-01	218441979.061804
3	2020-01	412820420.01665
4	2020-01	3915.929204
unknown	2020-01	557894551.160558
3	2020-02	107004019.025305
unknown	2020-02	199109833.550371
5	2020-02	7209623.205822
1	2020-02	54507959.569448
2	2020-02	23941748.054713
4	2020-03	473190.172655
5	2020-03	11505712.971925
3	2020-03	299170305.742939
unknown	2020-03	374143345.698689
2	2020-03	62064864.744311
1	2020-03	100284326.317823
4	2020-04	398292.75354
unknown	2020-04	177758864.721771
2	2020-04	62232890.117274
3	2020-04	280811450.847195
1	2020-04	127787061.528442
5	2020-04	4055261.186147


2020-06-09
1	2020-01	218975178.910716
10	2020-01	1730742252.341650415
12	2020-01	1317890.19
13	2020-01	28448901.989912415
2	2020-01	101476279.32303
3	2020-01	489111483.122592
5	2020-01	22408335.336678
6	2020-01	173804798.1387
7	2020-01	108188472.6478
9	2020-01	27881148.280387
unknown	2020-01	559129764.401835
1	2020-02	54233074.465207
10	2020-02	479770885.6246690724
12	2020-02	713904.08
13	2020-02	16831819.8436790724
2	2020-02	24071008.084123
3	2020-02	133220880.892471
5	2020-02	7209640.836441
6	2020-02	17428052.3802
7	2020-02	18225241.9243
9	2020-02	8488411.422952
unknown	2020-02	199348851.695296
1	2020-03	100494183.042228
10	2020-03	1305061091.5208122001
12	2020-03	1200337.16
13	2020-03	35332187.8830732001
2	2020-03	61860013.11184
3	2020-03	352937694.791029
5	2020-03	11649918.889323
6	2020-03	154388729.0963
7	2020-03	181490185.2763
9	2020-03	28854817.063391
unknown	2020-03	376853025.207328
1	2020-04	292367847.802726
10	2020-04	1880101383.848964
12	2020-04	1164862.81
2	2020-04	89525015.07763
3	2020-04	496868197.331677
5	2020-04	16183433.613136
6	2020-04	165429814.6825
7	2020-04	184645954.383
9	2020-04	50288152.136787
unknown	2020-04	583628106.011508
1	2020-05	194952032.929782
10	2020-05	1212535181.745007
12	2020-05	813829.37
2	2020-05	65981390.010842
3	2020-05	318341877.7503
5	2020-05	15169517.712291
6	2020-05	53809868.2154
7	2020-05	112794091.7606
9	2020-05	6674665.262109
unknown	2020-05	443997908.733683

1	2020-01	218975347.716291	8369399.6605599829	0.0382207392194831
10	2020-01	1730729886.614358415	27731212.1668009414	0.0160228423749292
12	2020-01	1317890.19	-1222311.027318	-0.9274756247468539
13	2020-01	28448901.989912415	19058486.1256634285	0.6699199193143307
2	2020-01	101476279.32303	12372164.0610996614	0.1219217352433201
3	2020-01	489074360.113748	56282736.3682388676	0.1150801206490333
5	2020-01	22408166.531103	487712.266573	0.0217649340429546
6	2020-01	173804798.1387	-40544915.1859	-0.2332784573274224
7	2020-01	108188472.6478	-38640660.6751	-0.3571606080519499
9	2020-01	27881148.280387	-7718815.582707	-0.276847119246405
unknown	2020-01	559154521.683387	19287416.155691001	0.0344938928466937
1	2020-02	54233092.164322	5815766.6186735842	0.1072364931922426
10	2020-02	479730284.7397080724	-4366291.6924842902	-0.0091015552517251
12	2020-02	713904.08	-659998.600508	-0.9244919856852478
13	2020-02	16831819.8436790724	13496875.9630201972	0.8018667077219662
2	2020-02	24071008.084123	415204.9142984001	0.0172491701572011
3	2020-02	133180280.00751	2729712.4399765286	0.0204963710830357
5	2020-02	7209623.137326	8960.262352	0.0012428197953386
6	2020-02	17428052.3802	-13475856.2555	-0.7732278949775198
7	2020-02	18225241.9243	-14671243.5196	-0.8049958173690195
9	2020-02	8488411.422952	-1622352.05184	-0.1911255205483192
unknown	2020-02	199348851.695296	3596638.5366429997	0.0180419325521897
1	2020-03	100494183.042228	-5861595.9941255019	-0.0583277142684213
10	2020-03	1304676836.0340902001	19354951.9965581369	0.0148350545223081
12	2020-03	1200337.16	-1185305.6588	-0.9874772674704164
13	2020-03	35332187.8830732001	19488783.1638699394	0.5515872164035034
2	2020-03	61860013.11184	1601912.0078027003	0.0258957592670813
3	2020-03	352553823.994573	8088976.4852949981	0.0229439476606543
5	2020-03	11649918.889323	25173.845562	0.0021608601571528
6	2020-03	154388729.0963	-71450596.804	-0.4627967159405314
7	2020-03	181490185.2763	-144496959.6383	-0.7961695527409284
9	2020-03	28854817.063391	211044816.397889	7.3140237186132812
unknown	2020-03	376852640.517062	2099748.191365001	0.0055718017219782
1	2020-04	292367847.802726	-45580909.4016856038	-0.1559026060637185
10	2020-04	1903850065.92120657	-133796108.9435008809	-0.0702765996852602
12	2020-04	1164862.81	-651196.496716	-0.5590327814792199
13	2020-04	23941766.14303257	10292415.5194641929	0.4298937454311176
2	2020-04	89526245.166133	138386420.5285618008	1.5457637061820189
3	2020-04	496673917.3271	13563226.7610082499	0.0273081115956322
5	2020-04	16183433.613136	728004.6203324771	0.0449845587614707
6	2020-04	165429814.6825	-93879189.94	-0.567486520614056
7	2020-04	184645954.383	-158252065.43	-0.8570567709365961
9	2020-04	50288152.136787	-9922566.2919376	-0.1973141956965844
unknown	2020-04	583628071.856792	11519751.1874716022	0.0197381718648692
1	2020-05	194946617.000578	-34579345.6610170973	-0.1773785367145641
10	2020-05	1215536577.077489742	1870216402.0596881029	1.5385932742198863
12	2020-05	797256.96	-613290.578907	-0.7692508308826805
13	2020-05	17662052.374204742	4097433.1111323751	0.2319907689276608
2	2020-05	65947909.693327	2003031497.731622745	30.3729338359044507
3	2020-05	302383238.764886	6505848.7623208802	0.0215152426731543
5	2020-05	15170770.028055	220534.997379	0.014536836098047
6	2020-05	53809868.2154	-43025437.98	-0.7995826677695975
7	2020-05	112794091.7606	-69145629.28	-0.6130252764192494
9	2020-05	6674665.262109	-6674665.262109	-1
unknown	2020-05	445350107.01833	10399456.2192661999	0.0233511928152252


2020-06-24
1	2020-01	218975347.716291	8369399.6605599829	0.0382207392194831
10	2020-01	1730729886.614358415	27731212.1668009414	0.0160228423749292
12	2020-01	1317890.19	-1222311.027318	-0.9274756247468539
13	2020-01	28448901.989912415	19058486.1256634285	0.6699199193143307
2	2020-01	101476279.32303	12372164.0610996614	0.1219217352433201
3	2020-01	489074360.113748	56282736.3682388676	0.1150801206490333
5	2020-01	22408166.531103	487712.266573	0.0217649340429546
6	2020-01	173804798.1387	-40544915.1859	-0.2332784573274224
7	2020-01	108188472.6478	-38640660.6751	-0.3571606080519499
9	2020-01	27881148.280387	-7718815.582707	-0.276847119246405
unknown	2020-01	559154521.683387	19287416.155691001	0.0344938928466937
1	2020-02	54233092.164322	5815766.6186735842	0.1072364931922426
10	2020-02	479730284.7397080724	-4366291.6924842902	-0.0091015552517251
12	2020-02	713904.08	-659998.600508	-0.9244919856852478
13	2020-02	16831819.8436790724	13496875.9630201972	0.8018667077219662
2	2020-02	24071008.084123	415204.9142984001	0.0172491701572011
3	2020-02	133180280.00751	2729712.4399765286	0.0204963710830357
5	2020-02	7209623.137326	8960.262352	0.0012428197953386
6	2020-02	17428052.3802	-13475856.2555	-0.7732278949775198
7	2020-02	18225241.9243	-14671243.5196	-0.8049958173690195
9	2020-02	8488411.422952	-1622352.05184	-0.1911255205483192
unknown	2020-02	199348851.695296	3596638.5366429997	0.0180419325521897
1	2020-03	100494183.042228	-5861595.9941255019	-0.0583277142684213
10	2020-03	1304676836.0340902001	19354951.9965581369	0.0148350545223081
12	2020-03	1200337.16	-1185305.6588	-0.9874772674704164
13	2020-03	35332187.8830732001	19488783.1638699394	0.5515872164035034
2	2020-03	61860013.11184	1601912.0078027003	0.0258957592670813
3	2020-03	352553823.994573	8088976.4852949981	0.0229439476606543
5	2020-03	11649918.889323	25173.845562	0.0021608601571528
6	2020-03	154388729.0963	-71450596.804	-0.4627967159405314
7	2020-03	181490185.2763	-144496959.6383	-0.7961695527409284
9	2020-03	28854817.063391	211044816.397889	7.3140237186132812
unknown	2020-03	376852640.517062	2099748.191365001	0.0055718017219782
1	2020-04	292367847.802726	-45580909.4016856038	-0.1559026060637185
10	2020-04	1903850065.92120657	-133796108.9435008809	-0.0702765996852602
12	2020-04	1164862.81	-651196.496716	-0.5590327814792199
13	2020-04	23941766.14303257	10292415.5194641929	0.4298937454311176
2	2020-04	89526245.166133	138386420.5285618008	1.5457637061820189
3	2020-04	496673917.3271	13563226.7610082499	0.0273081115956322
5	2020-04	16183433.613136	728004.6203324771	0.0449845587614707
6	2020-04	165429814.6825	-93879189.94	-0.567486520614056
7	2020-04	184645954.383	-158252065.43	-0.8570567709365961
9	2020-04	50288152.136787	-9922566.2919376	-0.1973141956965844
unknown	2020-04	583628071.856792	11519751.1874716022	0.0197381718648692
1	2020-05	194946617.000578	-34579345.6610170973	-0.1773785367145641
10	2020-05	1215536577.077489742	1870216402.0596881029	1.5385932742198863
12	2020-05	797256.96	-613290.578907	-0.7692508308826805
13	2020-05	17662052.374204742	4097433.1111323751	0.2319907689276608
2	2020-05	65947909.693327	2003031497.731622745	30.3729338359044507
3	2020-05	302383238.764886	6505848.7623208802	0.0215152426731543
5	2020-05	15170770.028055	220534.997379	0.014536836098047
6	2020-05	53809868.2154	-43025437.98	-0.7995826677695975
7	2020-05	112794091.7606	-69145629.28	-0.6130252764192494
9	2020-05	6674665.262109	-6674665.262109	-1
unknown	2020-05	445350107.01833	10399456.2192661999	0.0233511928152252


2020-06-30  模切 不加供应商（old逻辑，多个基准价取最大的）
1	2020-01	218975407.534345	19582785.275011026	0.0894291532346598
10	2020-01	1420630302.231541415	157838813.0519430339	0.1111047770866271
12	2020-01	1317890.19	-1222331.027318	-0.9274908005180614
13	2020-01	28448901.989912415	19058486.1256634285	0.6699199193143307
2	2020-01	101460128.731846	14360764.3229480611	0.1415409629619418
3	2020-01	488867052.650594	64993898.6954735169	0.1329480036404219 		【22670550.758】
--	异常数据  
(2020-01	180-XK490390-0100	490MM*390MM*100MM印刷纸箱	RF06	郑州瑞丰包装材料有限公司	4.232758	42327.58	1000	4232.758	42327580	42323347.242	sap.ods_sap_zfmm_044	)
 
5	2020-01	22406399.451457	954693.8220210003	0.0426080872158566
unknown	2020-01	559154521.683387	40110515.8381440011	0.0717342242308755
1	2020-02	54233036.336005	14082624.6578072009	0.2596687482249233
10	2020-02	435584446.5650810724	46593169.8343331164	0.1069670191434891
12	2020-02	713904.08	-660245.600508	-0.9248379705408043
13	2020-02	16831819.8436790724	13496875.9630201972	0.8018667077219662
2	2020-02	24071008.084123	737421.5203255001	0.0306352570589636
3	2020-02	133176203.388652	4938829.5954277186	0.0370849256080276
5	2020-02	7209623.137326	200680.780332	0.0278351276494642
unknown	2020-02	199348851.695296	13796982.9179284996	0.0692102452589852
1	2020-03	100493760.176743	9681078.8906678983	0.0963351244260473
10	2020-03	939627074.6939002001	68077760.383368697	0.072451893114666
12	2020-03	1200337.16	-1182984.2588	-0.9855433108477621
13	2020-03	35332187.8830732001	19488783.1638699394	0.5515872164035034
2	2020-03	61859407.478194	2386141.3466664004	0.0385736211183002
3	2020-03	352250562.719414	14137925.701399078	0.0401359918129093
5	2020-03	11648378.358349	333804.8695520001	0.0286567674300127
unknown	2020-03	376842440.918127	23233010.6700133808	0.0616517890432118
1	2020-04	292367715.899699	-27316733.0168303156	-0.0934327955217932
10	2020-04	1503185810.94983757	208676658.4965930935	0.1388229299242346
12	2020-04	1075530.95	-657944.736716	-0.6117394731560259
13	2020-04	23941766.14303257	10292415.5194641929	0.4298937454311176
2	2020-04	89525478.824063	136646404.4180135009	1.5263409502288544
3	2020-04	496464931.05924	54314964.6512866381	0.1094034266134411		【22979304】
-- 异常数据
2020-04	190-P1539000-0610	吸塑盘原材料	AT03	洛阳安图塑料制品有限公司	0	9.396	-3335000	0	-31335660	-31335660	sap.ods_sap_zfmm_044	
2020-04	190-P1539000-0610	吸塑盘原材料	AT03	洛阳安图塑料制品有限公司	0	9.396	3335000	0	31335660	31335660	sap.ods_sap_zfmm_044	
2020-04	190-P1539000-0610	吸塑盘原材料	AT03	洛阳安图塑料制品有限公司	0	9.396	3335000	0	31335660	31335660	sap.ods_sap_zfmm_044	


5	2020-04	16183433.613136	1016122.9279084774	0.0627878454102408
unknown	2020-04	583626954.460667	34381428.7334665998	0.058909939766642
1	2020-05	193433520.163849	-24258888.1472830977	-0.1254120181793438
10	2020-05	1040602159.817326742	1320155761.8805991429	1.2686459944618478
12	2020-05	797256.96	-561246.978907	-0.7039725045573763
13	2020-05	17662052.374204742	4097433.1111323751	0.2319907689276608
2	2020-05	65947704.64199	1310019065.1462812451	19.8645134392163564
3	2020-05	302269208.066781	10953633.8956592801	0.0362380077207179
5	2020-05	15170374.346639	461326.9308640002	0.0304097262416077
unknown	2020-05	445322043.263863	19444437.9228523401	0.0436637669681469


维度表更新： 
dwservice.dws_cd_by_amount_month3 where day='2020-04-22' and dim in ('12' ,'13')
dwservice.dws_cd_by_material_cut_price_month3 where day='2020-04-22' and dim in ('12' ,'13')
dwservice.dws_cd_by_material_type_month3 where day='2020-04-22' and dim in ('12' ,'13')
dwservice.dws_cd_by_area_day_month3 where day='2020-04-22' and dim in ('12' ,'13')
dwservice.dws_cd_by_supplier_month3 where day='2020-04-22' and dim in ('12' ,'13')
dwservice.dws_cd_by_account_day_pay_type_month  where day='2020-04-22' and dim in ('12' ,'13')
dwservice.dws_cd_by_material_month3 where day='2020-04-22' and dim in ('12' ,'13')
dwservice.dws_cd_by_material_quantity_rank_month   day='2020-04-22' and dim in ('12' ,'13')
详情表更新：

dwdetail.dwd_huadongzidonghua_cd_detail where day='2020-06-30'


经理，更新了差异对比文件，详情如下.
1、CNC，冲压，组装，磁材，5G,添加4月份的PA，CD以及更新了部分BG的1-3月的差异。  
2、模切，结构件，赛尔康的数据暂时未提供4月数据。
3、冲压数据差异缩小（新增加SAP冲压SY数据）

dwmiddle.dwb_purchase_report_cd   --> DW.DWS_PURCHASE_REPORT_BY_EAS2
dwbase.dwb_purchase_report_by_5g   --> DW.DWS_PURCHASE_REPORT_BY_5G
dwdetail.dwd_salcomp_cd_detail   --> DW.DWD_SALCOMP_CD_DETAIL 
dwbase.dwb_sap_cicai_by_cd    -->  DW.DWS_PURCHASE_REPORT_BY_CICAI
dwbase.dwb_sap_jiegoujian_by_cd   --> DW.DWS_PURCHASE_REPORT_BY_JIEG




UAT环境：
	磁盘(总)：1.71 TB
	内存(总)：224G

	每台主机情况：
		10.0.24.200	RAM=32G  DISK=450G
		10.0.24.201	RAM=32G  DISK=450G
		10.0.24.202	RAM=16G  DISK=450G
		10.0.24.203	RAM=16G  DISK=450G
		10.0.24.204	RAM=62G  DISK=450G
		10.0.24.205	RAM=62G  DISK=450G

测试环境：
	磁盘(总)：1.1 GB
	内存(总): 220G
	
	每台主机情况：
		10.0.24.105	RAM=62G  DISK=450G
		10.0.24.106	RAM=62G  DISK=450G
		10.0.24.107	RAM=32G  DISK=450G
		10.0.24.110	RAM=32G  DISK=450G
		10.0.24.111	RAM=32G  DISK=450G

echo "###########################################--<log begin>--###########################################"\necho "当前脚本->开始执行日期："`date "+%Y-%m-%d %H:%M:%S"`
echo "当前脚本->开始执行日期："`date "+%Y-%m-%d %H:%M:%S"`


echo "当前脚本->结束执行日期："`date "+%Y-%m-%d %H:%M:%S"`
echo "###########################################--<log   end>--###########################################"



-- 、linux 在某行 前 追加一行

  start_time=`date
  
sed -i '/start_time=`date/iecho "###########################################--<log begin>--###########################################"\necho "当前脚本->开始执行日期："`date "+%Y-%m-%d %H:%M:%S"`' test.sh

	具体实现：ls | grep sh | xargs sed -i '/start_time=`date/iecho "###########################################--<log begin>--###########################################"\necho "当前脚本->开始执行日期："`date "+%Y-%m-%d %H:%M:%S"`'


-- 、linux 在最后一行 追加一行
方案1：
echo  -e 'echo "当前脚本->结束执行日期："`date "+%Y-%m-%d %H:%M:%S"`\necho "###########################################--<log   end>--###########################################"' >> test.sh
方案2：
sed -i '$/aecho "当前脚本->结束执行日期："`date "+%Y-%m-%d %H:%M:%S"`\necho "###########################################--<log   end>--###########################################"' test.sh  


	具体实现：ls | grep sh | xargs sed -i '$aecho "当前脚本->结束执行日期："`date "+%Y-%m-%d %H:%M:%S"`\necho "###########################################--<log   end>--###########################################"' 
	
	
	
	
	/**
	
	
流程  
1、明确为什么买房子
	自住+投资
2、买房核心诉求
	品质 > 地段  > 潜力 >交通 >学区 >商业配套 >医疗
3、确定大区域
	1-、确定那个区（参考贝壳）
		①　位置
		②　性价比
		③　学区配套
			1. 学区房和学位房一定要分清，
				1-、学区房就是就近划片，可以多次使用的
				2-、学位仅仅是第一任业主可以使用的
		④　商业配套
		⑤　生态配套
		⑥　医疗配套
		⑦　交通配套
		⑧　物业园林配套
		⑨　政策红利
4、确定楼盘
	1-、参考贝壳，
		① 	货比三家，价格对比？
		②	支持按揭方式？ 
		③	期房/现房？
		④	小区绿化率？得房率？楼间距？
		⑤	广场、休闲设施是否齐全？
		⑥	附近噪音污染是否良好？
		⑦	物业口碑如何？
		⑧	车位？
	2-、朋友推荐
5、看房
	1-、找合适中介/自己去楼盘
	2-、户型怎么选
			 ①  方正度
			 ②  通透性
			 ③　使用率
			 ④　功能件实用性
			 ⑤　入户+卫生间风水
			 ⑥　阳台窗户大小
			 ⑦　层高
			 ⑧　进深
			 ⑨　各个功能见面宽
	3-、房屋朝向选择
		    第一梯队：东南北>西南北>南北
			第二梯队：东南>西南>南>
			第三梯队：东西>东>西>东北>西北>北
	4-、楼层怎么选
		    第一梯队：中间层
			第二梯队：中高层
			第三梯队：中低层
			第四梯队：中间不吉利楼层
			第五梯队：顶低层
	5-、装修怎么选？
		    l、精装：省事省力，有装修溢价，交付情况未知
			2、毛坯：性价比高，自由度高，需要自己张罗装修
	6-、买房所支付费用分类？
		    ①　贷款服务费
			②　公共维修基金
			③　契税
			④　工本费
			⑤　担保费（如果涉及公积金组合贷款）
	7-、贷款/全款？按揭多少才算合适？
		    1. 能贷款不要用全款
			2. 能分期不要用正常贷款
			3. 能用公积金贷款不要用商业贷款
			4. 能用组合贷款不要用纯公积金贷款
			5. 能用消费性贷款不要用商业性贷款
6、其他常见问题：
	Q：首付是多付一点好，还是少付一点好？
	A：1-、少首付，贷款30年，货币贬值，从这个角度来看
			当然是房贷“少交”好。【货币贬值】
	   2-、多首付，还款压力小，少花“冤枉钱”。【根据自身硬实力】
	   综上，根据自身实力，适当多付首付，少花“冤枉钱”。
	
	Q：分订金和定金有什么区别？
	A：两种金只有一字之差，天壤之别
		-、订金是可以随时退的
		-、定金不能退了。
		
	Q：买房送车位？
	A：	-、产权车位
			：签的是《购房合同》，将来有房产证，可以自由买卖。
		-、车位使用权
			：签的是《租赁协议》，等于长期租给你，无法自由买卖。
		
	Q：五证齐全 ？
		国家规定，开发商要卖房，必须五证齐全。具体包括：
			①　国有土地使用证
			②　建设用地规划许可证
			③　建设工程规划许可证
			④　建设工程施工许可证
			⑤　商品房销售（预售）许可证
			
	Q：房贷利率是几十年固定不变的吗？
	A：	贷款合同签订后，房贷利率一般每年调整一次
		，具体要看合同怎么写。对房贷来说，银行不会采用固定利率
		
	Q：买房送面积？
	A：在计算房价时，房子的阳台、入户花园、飘窗等，
	都只按一半面积计算，另一半相当于是 “送” 的。 
	只要房子每平米的单价提高一点，开发商想怎么送就怎么送
**/

dwservice.dws_cd_delete 数据保存。
2020-10-03	DW.DWS_AREA_COMPANY	23
2020-10-03	DW.DWS_CD_BY_AREA_MONTH	591
2020-10-03	DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH	93590
2020-10-03	DW.DWS_CD_BY_MATERIAL_MONTH	79465
2020-10-03	DW.DWS_CD_BY_MATERIAL_TYPE_MONTH	342
2020-10-03	DW.DWS_CD_BY_SUPPLIER_MONTH	3395
2020-10-03	DW.DWS_MATERIAL_NAME	29145
2020-10-03	DW.DWS_NO_PRICE_REDUCE_MATERIAL	13268
2020-10-03	DW.DWS_PURCHASE_REPORT_BY_EAS2	56
2020-10-31	DW.DWS_AREA_COMPANY	16
2020-10-31	DW.DWS_BUYER	23
2020-10-31	DW.DWS_CD_BY_AREA_MONTH	138
2020-10-31	DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH	245
2020-10-31	DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH	31707
2020-10-31	DW.DWS_CD_BY_MATERIAL_MONTH	11693
2020-10-31	DW.DWS_CD_BY_MATERIAL_TYPE_MONTH	9
2020-10-31	DW.DWS_CD_BY_MUJU_SUPPLIER_RECON_RATE_DETAIL_MONTH	270
2020-10-31	DW.DWS_CD_BY_SUPPLIER_MONTH	194
2020-10-31	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH	527
2020-10-31	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH	5494
2020-10-31	DW.DWS_MATERIAL_NAME	7433
2020-10-31	DW.DWS_NO_PRICE_REDUCE_MATERIAL	21772
2020-10-31	DW.DWS_PURCHASE_REPORT_BY_EAS2	23
2020-10-31_sb	DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH	20
2020-10-31_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH	87
2020-10-31_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH	1447
2020-11-18	DW.DWS_CD_BY_MUJU_SUPPLIER_RECON_RATE_DETAIL_MONTH	320
2020-11-18	DW.DWS_PURCHASE_REPORT_BY_EAS2	1281
2020-11-18_sb	DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH	42
2020-11-18_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH	473
2020-11-18_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH	1465
2020-12-27	DW.DWS_AREA	9
2020-12-27	DW.DWS_AREA_COMPANY	15
2020-12-27	DW.DWS_CD_BY_AMOUNT_MONTH	1
2020-12-27	DW.DWS_CD_BY_AREA_MONTH	109
2020-12-27	DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH	40699
2020-12-27	DW.DWS_CD_BY_MATERIAL_MONTH	12291
2020-12-27	DW.DWS_CD_BY_MATERIAL_TYPE_MONTH	37
2020-12-27	DW.DWS_CD_BY_MUJU_RECON_RATE_MONTH	1
2020-12-27	DW.DWS_CD_BY_MUJU_SUPPLIER_RECON_RATE_DETAIL_MONTH	362
2020-12-27	DW.DWS_CD_BY_SUPPLIER_MONTH	1229
2020-12-27	DW.DWS_MATERIAL_NAME	12263f
2020-12-27	DW.DWS_NO_PRICE_REDUCE_MATERIAL	30519
2020-12-27	DW.DWS_PURCHASE_REPORT_BY_EAS2	23549
2020-12-27_sb	DW.DWS_BUYER	9
2020-12-27_sb	DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH	89
2020-12-27_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH	710
2020-12-27_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH	1974
2021-01-27	DW.DWS_CD_BY_AREA_MONTH	4
2021-01-27	DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH	11903
2021-01-27	DW.DWS_CD_BY_MATERIAL_MONTH	1262
2021-01-27	DW.DWS_CD_BY_MATERIAL_TYPE_MONTH	1
2021-01-27	DW.DWS_CD_BY_MUJU_SUPPLIER_RECON_RATE_DETAIL_MONTH	15
2021-01-27	DW.DWS_CD_BY_SUPPLIER_MONTH	100
2021-01-27	DW.DWS_MATERIAL_NAME	4531
2021-01-27	DW.DWS_NO_PRICE_REDUCE_MATERIAL	23699
2021-01-27_sb	DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH	62
2021-01-27_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH	453
2021-01-27_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH	1311
2021-02-24	DW.DWD_HUADONGZIDONGHUA_CD_DETAIL	42020
2021-02-24	DW.DWS_AREA_COMPANY	4
2021-02-24	DW.DWS_CD_BY_AMOUNT_MONTH	24
2021-02-24	DW.DWS_CD_BY_AREA_MONTH	347
2021-02-24	DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH	51802
2021-02-24	DW.DWS_CD_BY_MATERIAL_MONTH	46121
2021-02-24	DW.DWS_CD_BY_MATERIAL_TYPE_MONTH	237
2021-02-24	DW.DWS_CD_BY_MUJU_SUPPLIER_RECON_RATE_DETAIL_MONTH	17
2021-02-24	DW.DWS_CD_BY_SUPPLIER_MONTH	6182
2021-02-24	DW.DWS_MATERIAL_NAME	32255
2021-02-24	DW.DWS_NO_PRICE_REDUCE_MATERIAL	19699
2021-02-24_sb	DW.DWS_BUYER	24
2021-02-24_sb	DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH	421
2021-02-24_sb	DW.DWS_CD_BY_RECON_RATE_MONTH	25
2021-02-24_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH	3576
2021-02-24_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH	5773
2021-04-21	DW.DWS_AREA_COMPANY	2
2021-04-21	DW.DWS_CD_BY_AMOUNT_MONTH	2
2021-04-21	DW.DWS_CD_BY_AREA_MONTH	60
2021-04-21	DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH	72998
2021-04-21	DW.DWS_CD_BY_MATERIAL_MONTH	67776
2021-04-21	DW.DWS_CD_BY_MATERIAL_TYPE_MONTH	141
2021-04-21	DW.DWS_CD_BY_SUPPLIER_MONTH	5904
2021-04-21	DW.DWS_MATERIAL_NAME	6945
2021-04-21	DW.DWS_NO_PRICE_REDUCE_MATERIAL	25839
2021-04_21	DW.DWS_AREA_COMPANY	2
2021-04_21	DW.DWS_CD_BY_AMOUNT_MONTH	2
2021-04_21	DW.DWS_CD_BY_AREA_MONTH	60
2021-04_21	DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH	72998
2021-04_21	DW.DWS_CD_BY_MATERIAL_MONTH	67776
2021-04_21	DW.DWS_CD_BY_MATERIAL_TYPE_MONTH	141
2021-04_21	DW.DWS_CD_BY_SUPPLIER_MONTH	5904
2021-04_21	DW.DWS_MATERIAL_NAME	6945
2021-04_21	DW.DWS_NO_PRICE_REDUCE_MATERIAL	25839
2021-04_21_sb	DW.DWS_CD_BY_BUYER_RECON_RATE_MONTH	68
2021-04_21_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_DETAIL_MONTH	459
2021-04_21_sb	DW.DWS_CD_BY_SUPPLIER_RECON_RATE_MONTH	1422


1、源数据：  
		结构化
		非结构化
    主数据（基础数据）：
		:供应商，物料，公司，
    报表数据：
		
		
	qq358971483/Nan520*****	
	411381202103160224
小乐多社保：
	1、乐多非深户、父母非深户
	2、未在深圳上学
	3、是否可以用父母社保（3个月以后）？
	4、是否可以办理少儿社保？
	5、办理需要哪些证件？

深圳非深户是否可以办理少儿社保？ 否 ，
深圳父母的社保是否能挂靠在我的名下？ 否
邓州参保登记表是否需要？
	
	
		参保登记变更申请表，户口本（身份证），监护人身份证，银行账户，出生证明
		
邓州市-社保局电话：
	人社局办公室：0377-62287606  【打通了，人家不管】
	城镇职工医保中心：0377-62168906 【没打通】
	电子政务中心：0377-62287667  【这个人社的说是社保的电话，没打通】
公众号：邓州市人力资源和社会保障局
	1、参保登记：到户口所在的社区居委会填写《市城镇居民基本医疗保险参保登记表》
	1、每月25日(含25日当天)后办理手续的，将纳入下月参保。
	2、办理要求：任何人皆可办理，对户籍无要求。（有户口即可）
	3、网上申请社保卡流程：（支付宝办理）【https://mp.weixin.qq.com/s/7O24h0nui5o76TyyeHx5nQ】
	4、现场申请：邓州市湍北新区-北区-政务服务中心2楼-人社局社保卡窗口。
			所需：	1、孩子户口本（户口本要带上原件和复印件，复印件一定要复印户口本首页和宝宝那一页。）
					2、父母身份证原件
相关信息：
1、邓州社保局官网：http://dzrs.dengzhou.gov.cn/
2、2015年异地报销政策： 【http://www.dengzhou.gov.cn/nlxrmzf/bszn/shbz/webinfo/2015/07/1438056265276600.htm】
	异地急诊备案报销程序：
			参保人员外出期间因急、重病住院的，可在当地公立定点医院住院就医，于3个工作日内由亲属持医保IC卡原件和两份复印件到市医保中心和市一院备案。
		出院后携带住院全病历复印件（需加盖医院公章）或门急诊病历、异地发病情况说明、医疗费用明细清单、财税部门印制的发票、出院或诊断证明、医疗保险卡复印件、
		身份证复印件、异地亲属关系证明等资料，在出院后的1个月内到本单位申报的定点医院医保办办理医疗费用的报销。 
3、2021-04-01后，我市城镇职工医疗保险按新政策实施。【https://baijiahao.baidu.com/s?id=1696528443655300999&wfr=spider&for=pc】




2021-07-20  mes sqlserver

数据库链接IP：192.168.3.52
db:CNCPRODT
数据库账号:cncpro
数据库密码:cncpro

数据表:ls_mes_MotorATE
【ls_mes_MotorATEView】
现有表结构如下图:


110、mes 需求； 
	1-、BadName 对应 “不良现象”
		FBadStation 对应 “不良工站”
	2-、Test cycles 测试次数，根据 FGcode=CN13BA5904281DA412P5V1560OLD
			用户反馈，测试次数，开发这边目前根据FGcode加后缀old来表示，历史测试，但是具体对应的是第几次测试，是否要 CheckTime？
			-、系统存在，上传多次，  返工的才会有old，是上传多次都需要还是只要返工的。
	3-、FBadType->逗号分隔，冒号分隔，前者为 FBadType，后者为 Fbadkey
			Fbadkey对应checkpoint的前缀
	4-、判断F1,F4规则对照表，以后可能更新。
	5-、ateview关联ate只取有的数据。
	6-、抽取的时候，增量更新。 （根据updatetime）
	
CREATE EXTERNAL TABLE `test.ods_ls_mes_motorbadbasic `(
  `data_loadtime` string COMMENT 'from deserializer', 
  `Project` string COMMENT 'from deserializer', 
  `ProcessCode` string COMMENT 'from deserializer', 
  `ProcessName` string COMMENT 'from deserializer', 
  `BadType` string COMMENT 'from deserializer', 
  `BadNum` string COMMENT 'from deserializer', 
  `BadName` string COMMENT 'from deserializer', 
  `BadReason` string COMMENT 'from deserializer', 
  `BadLocation` string COMMENT 'from deserializer', 
  `Solution` string COMMENT 'from deserializer', 
  `Accountability` string COMMENT 'from deserializer', 
  `Remark` string COMMENT 'from deserializer', 
  `Creator` string COMMENT 'from deserializer', 
  `CreateTime` string COMMENT 'from deserializer', 
  `UpdateTime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION  '/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADBASIC/'
 
alter  table  test.ods_ls_mes_motorbadbasic  drop  if  exists  partition (day='${sys_day}')  

alter  table  test.ods_ls_mes_motorbadbasic  add  partition  (day='${sys_day}')  location  '/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADBASIC/day=${sys_day}'
 


CREATE EXTERNAL TABLE `test.ods_ls_mes_motorbadkeystation`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `ID` string COMMENT 'from deserializer', 
  `FBadKey` string COMMENT 'from deserializer', 
  `FBadStation` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION  '/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADKEYSTATION /'
 
alter  table  test.ods_ls_mes_motorbadkeystation  drop  if  exists  partition (day='${sys_day}')  

alter  table  test.ods_ls_mes_motorbadkeystation  add  partition  (day='${sys_day}')  location  '/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADKEYSTATION /day=${sys_day}'
 

CREATE EXTERNAL TABLE `test.ods_ls_mes_standard`(
  `checkpoint` string COMMENT 'from deserializer', 
  `f1_spec_standard` string COMMENT 'from deserializer', 
  `f4_spec_standard` string COMMENT 'from deserializer', 
  `ong_spec_standard` string COMMENT 'from deserializer', 
  `cd_spec_standard` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
LOCATION
  'hdfs://mycluster/apps/hive/warehouse/test.db/ODS_LS_MES_STANDARD'


-- kettle 同步正式的数据至测试
hadoop distcp -skipcrccheck -update hdfs://promycluster/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADBASIC/day=2021-07-16 hdfs://10.0.24.105:8020/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADBASIC/day=2021-07-16 

hadoop distcp -skipcrccheck -update hdfs://promycluster/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADKEYSTATION/day=2021-07-16 hdfs://10.0.24.105:8020/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADKEYSTATION/day=2021-07-16 

hadoop distcp -skipcrccheck -update hdfs://promycluster/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORATE/day=2021-07-16 hdfs://10.0.24.105:8020/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORATE/day=2021-07-16 

hadoop distcp -skipcrccheck -update hdfs://promycluster/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORATEVIEW/day=2021-07-16 hdfs://10.0.24.105:8020/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORATEVIEW/day=2021-07-16 

hdfs dfs -put /root/test/spec.txt  /apps/hive/warehouse/test.db/ODS_LS_MES_STANDARD

hive -e "LOAD DATA local INPATH '/root/test/spec.txt' OVERWRITE INTO TABLE test.ods_ls_mes_standard partition(day='2021-07-16')"


CREATE EXTERNAL TABLE `test.ods_ls_mes_motorbadkeystation`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `id` string COMMENT 'from deserializer', 
  `fbadkey` string COMMENT 'from deserializer', 
  `fbadstation` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string) 
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION
  'hdfs://mycluster/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORBADKEYSTATION'
  
    
  CREATE EXTERNAL TABLE `test.ods_ls_mes_motorateview_new`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `id` string COMMENT 'from deserializer', 
  `project` string COMMENT 'from deserializer', 
  `fgcode` string COMMENT 'from deserializer', 
  `checktime` string COMMENT 'from deserializer', 
  `processcode` string COMMENT 'from deserializer', 
  `result` string COMMENT 'from deserializer', 
  `line` string COMMENT 'from deserializer', 
  `f1` string COMMENT 'from deserializer', 
  `f2` string COMMENT 'from deserializer', 
  `f3` string COMMENT 'from deserializer', 
  `f4` string COMMENT 'from deserializer', 
  `ong` string COMMENT 'from deserializer', 
  `cd` string COMMENT 'from deserializer', 
  `fupdatetime` string COMMENT 'from deserializer', 
  `fbadtype` string COMMENT 'from deserializer', 
  `groupsnbom` string COMMENT 'from deserializer', 
  `fupold` string COMMENT 'from deserializer',
   `test_cycles` string COMMENT 'from deserializer')
   PARTITIONED BY ( 
  `day` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION
  'hdfs://mycluster/apps/hive/warehouse/test.db/ODS_LS_MES_MOTORATEVIEW_NEW'



1：原文：以后各走各的，没必要再联系

古文：从此音尘各悄然，春山如黛草如烟

2：原文：从此我的世界再也没有你

古文：苦酒折柳今相离 ，无风无月也无你.

3：原文：早知如此，当初何必相识

古文：早知如此绊人心，何如当初莫相识

4：原文：以后各自天涯，爱恨不必再言

古文：此后山水不相逢，莫道彼此长和短

5：原文：物是人非，再也回不到从前

古文：笙歌不见故人散，十里长欢难再寻

6：原文：终究是一厢情愿，爱错了人

古文：醋把陈醋当成墨，写尽半生纸上酸。

7：原文：我单身，我骄傲

古文：我自飘零我自狂，犹如野鹤游四方

8：原文：穷

古文:一身清贫怎敢入繁华，两袖轻轻怎敢负人家

9：原文:我被自己帅的睡不着了

古文:玉树临风美少年，揽镜自顾夜不眠

10：原文：你站着不说话，就十分美好

古文：回头忍笑，阶前立，总无语，也依依

11：原文：我们默默相爱

古文：不得语，暗相思。两心之外无人知。

12：原文：初次见面，一见钟情

古文：最是凝眸无限意，似曾相连在前生

13：原文：在我心中，你是最美的

古文：何须浅碧深红色，自是花中第一流

14：原文：认识你，真的很幸运

古文：幸得识卿桃花面，从此阡陌多暖春

15：原文：我愿把最好的都给你

古文：我愿提笔画尽，天下许你一世繁华

16：原文：我一生只爱你

古文：既许一人以偏爱，愿尽余生之慷慨

17：原文：空有一身才能，却无处施展

古文：虚负凌云万丈才，一生襟抱未曾开

18：原文：谁又能懂得我

古文：横玉心中吹满地，好枝长恨无人寄

19：原文：一腔报国热血，只能在梦中

古文：夜阑卧听风吹雨，铁马冰河入梦来。

20：原文：婉约小雨，淡月朦胧，美好莫过于此

古文：数点雨声风约往，朦胧淡月云来去

21：原文：午夜听雨，清晨卖花，时光让人留恋

古文：小楼一夜听春雨，深巷明朝卖杏花

22：原文：有种遇见，初见惊艳，再见追忆

古文：当时明月在，曾照彩云归

23：原文：有种遇见，初见邂逅，再见已故

古文：去年今日此门中，人面桃花相映红

人面不知何处去，桃花依旧笑春风。

24：原文：人生不过三场雨，谁先听完，谁先走古文：

少年听雨歌楼上。红烛昏罗帐。壮年听雨客舟中。江阔云低、断雁叫西风。

而今听雨僧庐下。鬓已星星也。悲欢离合总无情。一任阶前、点滴到天明。

25：原文：只想永远和你在一起

古文：风有约，花不误。岁岁如此，永不相负。

26：原文：不想让你走

古文：长安陌上无穷树，唯有垂杨管别离

27：原文：嬉笑的朋友很多，但知心好友难找

古文：春风满面皆朋友，欲觅知音难上难

28：原文：闲暇疲倦之时，才能体会人生苦楚

古文：人情辗转闲中看，客路崎岖倦后知

29：原文：我不爱你了

古文：此后锦书休寄，画楼云雨无凭。

30：原文：我们终将要失去年少的自己

古文：欲买桂花同载酒，终不似，少年游。

31：原文：只有经历，才能学会长大

古文：不品人间酒，谁知其中醉，不陷世间情，谁知其中累。

32：原文：往事都已过去，余生一定要开心

古文：往日情怀酿做酒，换我余生长醉不复忧

33：原文：生活总要继续

古文：夜班浊酒慰寂寥，天明走马入红尘

34：原文：该走的人终究会走

古文：舟去人归初梦远， 风起缘断幕云深

35：原文：就算无路可走，也不要垂头丧气

古文：行到水穷处，坐看云起时

36：原文：请相信美好的事情正在发生

古文：律回岁晚冰霜少，春到人间草木知

37：原文：人生就是不断的相聚，然后再不断的分别

古文：别来沧海事，语罢暮天钟

38：原文：最悲伤的是，酒醒后发现你已离去

古文：日暮酒醒人已远，满天风雨下西楼

39：原文：想当年随便摆个Poss，就能迷倒万千少女

古文：当年年少春衫薄，骑马倚斜桥，满楼红袖招

40：原文：今天很高兴，就想大醉一场

古文：一生大笑能几回，斗酒相逢须醉倒

41：原文：大家直接拿瓶干，不能养鱼不能赖

古文：莫思身外无穷事，且尽生前有限杯

42：原文：小时候想要逃离的地方，是长大再也回不去的地方

古文：人言落日是天涯，望极天涯不见家。

43：原文：想做什么就做什么，自由自在

古文：此时情绪此时天。无事小神仙

44：原文：随心所去，所见皆是美景

古文：飞烟俱净，天山共色。 从流飘荡，任意东西

45：原文：世间万物，都不及和你相逢一笑

古文：一笑相逢蓬海路，人间风雪如尘土

46：原文：仙气飘飘，美得不可方物

古文：羽衣常带烟霞色，不惹人间桃李花。

47：原文：光阴似箭，岁月使人蹉跎

古文：青轩桃李能几何，流光欺人忽蹉跎

48：原文：年华虽逝，但炽热之心不减当年

古文：镜里流连两鬓残，寸心自许尚如丹

49：原文：时间过得飞快，最好的年华早已不在

古文：灯残瘦影孤，花落流年度，春去佳期误

50：原文：青春易逝，流年换了红颜

古文：一曲啼乌心绪乱，红颜暗与流年换

51：原文：放下执念，宠辱不惊。人生自当欢喜

古文：钟鼎山林都是梦，人间宠辱休惊，只消闲处遇平生。

52：原文：没事，我等你

古文：白茶清欢无别事，我在等风也等你

53：原文：我会默默等你，不去打扰

古文：静待一树花开，盼你叶落归来

54：原文：无论如何，我都会等你

古文:寒灯纸上，梨花雨凉，我等风雪又一年

55：原文：简直太脏了

古文：一双玉臂千人枕，半点朱唇万客尝

56：原文：你要奋力拔尖，然后惊艳所有人

古文：鹏北海，凤朝阳，又携书剑路茫茫！明年此日青云去，却笑人间举子忙！

57：原文：我的痛苦无人能懂

古文：世间无限丹青手，一片伤心画不成

58：原文：世间万物，谁能懂我？

古文：泪眼问花花不语，乱红飞过秋千去

59：原文：真的无人懂我

古文：苍天不解人情暖，冷眼看花尽是悲

60：原文：从未停止想你，想念却不能相见

古文：事关休戚已成空，万里相思一夜中
  
test.ods_t_mes_labelprintrcd -> DW.DWS_T_MES_LABELPRINTRCD 

test.ods_wms_pda_instorage_goods  ->  DW.DWS_WMS_PDA_INSTORAGE_GOODS

test.ods_wms_pda_outstorage_goods ->  DW.DWS_WMS_PDA_OUTSTORAGE_GOODS

分区：
day=2021-09-01 hour=09
day=2021-09-06 hour=10
 
 
CREATE TABLE DW.DWS_T_MES_LABELPRINTRCD (
	PKID VARCHAR NOT NULL,
	CREATE_TIME TIMESTAMP,
	UPDATE_TIME TIMESTAMP,
	PRODNO VARCHAR,
	CUSTPRODNO VARCHAR,
	PRODDESC VARCHAR,
	LOTNO VARCHAR,
	REVNO VARCHAR,
	QTY BIGINT,
	FNUMBER VARCHAR,
	BOXQTY BIGINT,
	LIMITDATE VARCHAR,
	PRINTDATE VARCHAR,
	FMANUORDER VARCHAR,
	CREATETIME VARCHAR,
	DB VARCHAR,
	"DAY" VARCHAR,
	"HOUR" VARCHAR,
	CONSTRAINT DWS_T_MES_LABELPRINTRCD_PK PRIMARY KEY (PKID)
);




CREATE TABLE DW.DWS_WMS_PDA_INSTORAGE_GOODS (
	PKID VARCHAR NOT NULL,
	CREATE_TIME TIMESTAMP,
	UPDATE_TIME TIMESTAMP,
	MATERIEID VARCHAR,
	SPEC VARCHAR,
	LOTNUMBER VARCHAR,
	STORAGETIME VARCHAR,
	VALIDTIME VARCHAR,
	FNUMBER VARCHAR,
	QTY BIGINT,
	DELIVERYNO VARCHAR,
	INSTORAGETYPE VARCHAR,
	MATERIALCODE VARCHAR,
	REPERTORYID VARCHAR,
	SCANTIME VARCHAR,
	DB VARCHAR,
	"DAY" VARCHAR,
	"HOUR" VARCHAR,
	CONSTRAINT DWS_WMS_PDA_INSTORAGE_GOODS_PK PRIMARY KEY (PKID)
);

CREATE TABLE DW.DWS_WMS_PDA_OUTSTORAGE_GOODS (
PKID VARCHAR NOT NULL,
	CREATE_TIME TIMESTAMP,
	UPDATE_TIME TIMESTAMP,
	MATERIEID VARCHAR,
	SPEC VARCHAR,
	LOTNUMBER VARCHAR,
	STORAGETIME VARCHAR,
	VALIDTIME VARCHAR,
	FNUMBER VARCHAR,
	QTY BIGINT,
	DELIVERYNO VARCHAR,
	OUTSTORAGETYPE VARCHAR,
	MATERIALCODE VARCHAR,
	REPERTORYID VARCHAR,
	SCANTIME VARCHAR,
	DB VARCHAR,
	"DAY" VARCHAR,
	"HOUR" VARCHAR,
	CONSTRAINT DWS_WMS_PDA_OUTSTORAGE_GOODS_PK PRIMARY KEY (PKID)
);




CREATE EXTERNAL TABLE `mes.ods_t_mes_labelprintrcd`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `prodno` string COMMENT 'from deserializer', 
  `custprodno` string COMMENT 'from deserializer', 
  `proddesc` string COMMENT 'from deserializer', 
  `lotno` string COMMENT 'from deserializer', 
  `revno` string COMMENT 'from deserializer', 
  `qty` bigint COMMENT 'from deserializer', 
  `fnumber` string COMMENT 'from deserializer', 
  `boxqty` bigint COMMENT 'from deserializer', 
  `limitdate` string COMMENT 'from deserializer', 
  `printdate` string COMMENT 'from deserializer', 
  `fmanuorder` string COMMENT 'from deserializer', 
  `createtime` string COMMENT 'from deserializer'
  )
PARTITIONED BY ( 
  `day` string, 
  `hour` string,
  `db` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc tblproperties('orc.compression' = 'snappy')


CREATE EXTERNAL TABLE `mes.ods_wms_pda_instorage_goods`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `materieid` string COMMENT 'from deserializer', 
  `spec` string COMMENT 'from deserializer', 
  `lotnumber` string COMMENT 'from deserializer', 
  `storagetime` string COMMENT 'from deserializer', 
  `validtime` string COMMENT 'from deserializer', 
  `fnumber` string COMMENT 'from deserializer', 
  `qty` bigint COMMENT 'from deserializer', 
  `deliveryno` string COMMENT 'from deserializer', 
  `instoragetype` string COMMENT 'from deserializer', 
  `materialcode` string COMMENT 'from deserializer', 
  `repertoryid` string COMMENT 'from deserializer', 
  `scantime` string COMMENT 'from deserializer'
PARTITIONED BY ( 
  `day` string, 
  `hour` string,
  `db` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc tblproperties('orc.compression' = 'snappy')


CREATE EXTERNAL TABLE `mes.ods_wms_pda_outstorage_goods`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `materieid` string COMMENT 'from deserializer', 
  `spec` string COMMENT 'from deserializer', 
  `lotnumber` string COMMENT 'from deserializer', 
  `storagetime` string COMMENT 'from deserializer', 
  `validtime` string COMMENT 'from deserializer', 
  `fnumber` string COMMENT 'from deserializer', 
  `qty` bigint COMMENT 'from deserializer', 
  `deliveryno` string COMMENT 'from deserializer', 
  `outstoragetype` string COMMENT 'from deserializer', 
  `materialcode` string COMMENT 'from deserializer', 
  `repertoryid` string COMMENT 'from deserializer', 
  `scantime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `hour` string,
  `db` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc tblproperties('orc.compression' = 'snappy')


-- test测试orc
/*
begin_time	2021-09-01 10:00:00
db_name	CNCPROMQ
end_time	2021-09-06 10:59:59
fixed_curtime	2021-09-05 23:00:00
sys_day_hour	2021-09-06_10
*/

CREATE EXTERNAL TABLE if not exists`test.ODS_WMS_PDA_OUTSTORAGE_GOODS_TEST_ORC`(
	`data_loadtime` string COMMENT 'from deserializer', 
	`MaterieId` string COMMENT 'from deserializer', 
	`Spec` string COMMENT 'from deserializer',
	`LotNumber` string COMMENT 'from deserializer', 
	`StorageTime` string COMMENT 'from deserializer', 
	`ValidTime` string COMMENT 'from deserializer',
	`Fnumber` string COMMENT 'from deserializer',
	`Qty` BIGINT COMMENT 'from deserializer',
	`DeliveryNo` string COMMENT 'from deserializer',
	`OutStorageType` string COMMENT 'from deserializer',
	`MaterialCode` string COMMENT 'from deserializer',
	`RepertoryId` string COMMENT 'from deserializer',
	`ScanTime` string COMMENT 'from deserializer'
  )
PARTITIONED BY ( 
  `day` string,
 `db` string)
ROW FORMAT DELIMITED 	
  FIELDS TERMINATED BY '\t' 
stored AS orc 
LOCATION  '/apps/hive/warehouse/test.db/ODS_WMS_PDA_OUTSTORAGE_GOODS_TEST_ORC/'
tblproperties('orc.compression' = 'snappy'); 
alter  table  mes.ODS_WMS_PDA_OUTSTORAGE_GOODS_TEST_ORC  drop  if  exists  partition (day='${sys_day_hour}',db='${db_name}')  ;
alter  table  mes.ODS_WMS_PDA_OUTSTORAGE_GOODS_TEST_ORC  add  partition  (day='${sys_day_hour}',db='${db_name}')  location  '/apps/hive/warehouse/test.db/ODS_WMS_PDA_OUTSTORAGE_GOODS_TEST_ORC/day=${sys_day_hour}/db=${db_name}'; 


-- 创建 txt文本的数据测试

CREATE EXTERNAL TABLE `test11.ods_t_mes_labelprintrcd`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `prodno` string COMMENT 'from deserializer', 
  `custprodno` string COMMENT 'from deserializer', 
  `proddesc` string COMMENT 'from deserializer', 
  `lotno` string COMMENT 'from deserializer', 
  `revno` string COMMENT 'from deserializer', 
  `qty` bigint COMMENT 'from deserializer', 
  `fnumber` string COMMENT 'from deserializer', 
  `boxqty` bigint COMMENT 'from deserializer', 
  `limitdate` string COMMENT 'from deserializer', 
  `printdate` string COMMENT 'from deserializer', 
  `fmanuorder` string COMMENT 'from deserializer', 
  `createtime` string COMMENT 'from deserializer',
  `db` string COMMENT 'from deserializer'
  )
PARTITIONED BY ( 
  `day` string, 
  `hour` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc 
tblproperties('orc.compression' = 'snappy'); 




CREATE EXTERNAL TABLE `test11.ods_wms_pda_instorage_goods`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `materieid` string COMMENT 'from deserializer', 
  `spec` string COMMENT 'from deserializer', 
  `lotnumber` string COMMENT 'from deserializer', 
  `storagetime` string COMMENT 'from deserializer', 
  `validtime` string COMMENT 'from deserializer', 
  `fnumber` string COMMENT 'from deserializer', 
  `qty` bigint COMMENT 'from deserializer', 
  `deliveryno` string COMMENT 'from deserializer', 
  `instoragetype` string COMMENT 'from deserializer', 
  `materialcode` string COMMENT 'from deserializer', 
  `repertoryid` string COMMENT 'from deserializer', 
  `scantime` string COMMENT 'from deserializer',
   `db` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `hour` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc 
tblproperties('orc.compression' = 'snappy'); 

CREATE EXTERNAL TABLE `test.ods_wms_pda_outstorage_goods`(
  `data_loadtime` string COMMENT 'from deserializer', 
  `materieid` string COMMENT 'from deserializer', 
  `spec` string COMMENT 'from deserializer', 
  `lotnumber` string COMMENT 'from deserializer', 
  `storagetime` string COMMENT 'from deserializer', 
  `validtime` string COMMENT 'from deserializer', 
  `fnumber` string COMMENT 'from deserializer', 
  `qty` bigint COMMENT 'from deserializer', 
  `deliveryno` string COMMENT 'from deserializer', 
  `outstoragetype` string COMMENT 'from deserializer', 
  `materialcode` string COMMENT 'from deserializer', 
  `repertoryid` string COMMENT 'from deserializer', 
  `scantime` string COMMENT 'from deserializer',
   `db` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `hour` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc 
tblproperties('orc.compression' = 'snappy');



/**
最终kettle文件 建表语句

参数：
/*
fixed_curtime	2021-09-10 13:23:12
begin_time	2021-09-06 11:00:00
end_time	2021-09-10 13:59:59
db_name	CNCPROMQ
sys_day	2021-09-10
sys_hour	13

*/
-- ,'${db_name}' db

去掉select db
/db=${db_name}
数据重新format


CREATE EXTERNAL TABLE if not exists`test.ODS_T_MES_LABELPRINTRCD`(
	`data_loadtime` string COMMENT 'from deserializer', 
	`ProdNo` string COMMENT 'from deserializer', 
	`CustProdNo` string COMMENT 'from deserializer',
	`ProdDesc` string COMMENT 'from deserializer', 
	`LotNo` string COMMENT 'from deserializer', 
	`RevNo` string COMMENT 'from deserializer',
	`Qty` BIGINT COMMENT 'from deserializer',
	`Fnumber` string COMMENT 'from deserializer',
	`BoxQty` BIGINT COMMENT 'from deserializer',
	`LimitDate` string COMMENT 'from deserializer',
	`PrintDate` string COMMENT 'from deserializer',
	`FManuOrder` string COMMENT 'from deserializer',
	`CreateTime` string COMMENT 'from deserializer'
  )
PARTITIONED BY ( 
  `day` string,
  `hour` string,
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION  '/apps/hive/warehouse/test.db/ODS_T_MES_LABELPRINTRCD/'; 
alter  table  test.ODS_T_MES_LABELPRINTRCD  drop  if  exists  partition (day='${sys_day}',hour='${sys_hour}',db='${db_name}')  ;
alter  table  test.ODS_T_MES_LABELPRINTRCD  add  partition  (day='${sys_day}',hour='${sys_hour}',db='${db_name}')  location  '/apps/hive/warehouse/test.db/ODS_T_MES_LABELPRINTRCD/day=${sys_day}/hour=${sys_hour}/db=${db_name}'; 

INSERT overwrite table mes.ods_t_mes_labelprintrcd partition(day='${sys_day}',hour='${sys_hour}',db='${db_name}') 
SELECT data_loadtime, prodno, custprodno, proddesc, lotno, revno, qty, fnumber, boxqty,
limitdate, printdate, fmanuorder, createtime
FROM test.ods_t_mes_labelprintrcd
where day = '${sys_day}' and hour = '${sys_hour}' and db='${db_name}';



CREATE EXTERNAL TABLE if not exists`test.ODS_WMS_PDA_INSTORAGE_GOODS`(
	`data_loadtime` string COMMENT 'from deserializer', 
	`MaterieId` string COMMENT 'from deserializer', 
	`Spec` string COMMENT 'from deserializer',
	`LotNumber` string COMMENT 'from deserializer', 
	`StorageTime` string COMMENT 'from deserializer', 
	`ValidTime` string COMMENT 'from deserializer',
	`Fnumber` string COMMENT 'from deserializer',
	`Qty` BIGINT COMMENT 'from deserializer',
	`DeliveryNo` string COMMENT 'from deserializer',
	`InStorageType` string COMMENT 'from deserializer',
	`MaterialCode` string COMMENT 'from deserializer',
	`RepertoryId` string COMMENT 'from deserializer',
	`ScanTime` string COMMENT 'from deserializer'
  )
PARTITIONED BY ( 
  `day` string,
  `hour` string,
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION  '/apps/hive/warehouse/test.db/ODS_WMS_PDA_INSTORAGE_GOODS/'; 
alter  table  test.ODS_WMS_PDA_INSTORAGE_GOODS  drop  if  exists  partition (day='${sys_day}',hour='${sys_hour}',db='${db_name}')  ;
alter  table  test.ODS_WMS_PDA_INSTORAGE_GOODS  add  partition  (day='${sys_day}',hour='${sys_hour}',db='${db_name}')  location  '/apps/hive/warehouse/test.db/ODS_WMS_PDA_INSTORAGE_GOODS/day=${sys_day}/hour=${sys_hour}/db=${db_name}'; 

INSERT overwrite table mes.ods_wms_pda_instorage_goods partition(day='${sys_day}',hour='${sys_hour}',db='${db_name}')
SELECT data_loadtime, materieid, spec, lotnumber, storagetime, validtime, fnumber, qty, deliveryno,
instoragetype, materialcode, repertoryid, scantime
FROM test.ods_wms_pda_instorage_goods
where day = '${sys_day}' and hour = '${sys_hour}' and db='${db_name}';



CREATE EXTERNAL TABLE if not exists`test.ODS_WMS_PDA_OUTSTORAGE_GOODS`(
	`data_loadtime` string COMMENT 'from deserializer', 
	`MaterieId` string COMMENT 'from deserializer', 
	`Spec` string COMMENT 'from deserializer',
	`LotNumber` string COMMENT 'from deserializer', 
	`StorageTime` string COMMENT 'from deserializer', 
	`ValidTime` string COMMENT 'from deserializer',
	`Fnumber` string COMMENT 'from deserializer',
	`Qty` BIGINT COMMENT 'from deserializer',
	`DeliveryNo` string COMMENT 'from deserializer',
	`OutStorageType` string COMMENT 'from deserializer',
	`MaterialCode` string COMMENT 'from deserializer',
	`RepertoryId` string COMMENT 'from deserializer',
	`ScanTime` string COMMENT 'from deserializer'
  )
PARTITIONED BY ( 
  `day` string,
  `hour` string,
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION  '/apps/hive/warehouse/test.db/ODS_WMS_PDA_OUTSTORAGE_GOODS/'; 
alter  table  test.ODS_WMS_PDA_OUTSTORAGE_GOODS  drop  if  exists  partition (day='${sys_day}',hour='${sys_hour}',db='${db_name}')  ;
alter  table  test.ODS_WMS_PDA_OUTSTORAGE_GOODS  add  partition  (day='${sys_day}',hour='${sys_hour}',db='${db_name}')  location  '/apps/hive/warehouse/test.db/ODS_WMS_PDA_OUTSTORAGE_GOODS/day=${sys_day}/hour=${sys_hour}/db=${db_name}'; 

INSERT overwrite table mes.ods_wms_pda_outstorage_goods partition(day='${sys_day}',hour='${sys_hour}',db='${db_name}')
SELECT data_loadtime, materieid, spec, lotnumber, storagetime, validtime, fnumber, qty, deliveryno, 
outstoragetype, materialcode, repertoryid, scantime
FROM test.ods_wms_pda_outstorage_goods
where day = '${sys_day}' and hour = '${sys_hour}' and db='${db_name}';
**/


-- 库存表
CREATE EXTERNAL TABLE `mes.ods_profession_materialstock`(
  `Id` int COMMENT 'from deserializer', 
  `MaterieId` string COMMENT 'from deserializer', 
  `Spec` string COMMENT 'from deserializer', 
  `LotNumber` string COMMENT 'from deserializer', 
  `StorageTime` string COMMENT 'from deserializer', 
  `ValidTime` string COMMENT 'from deserializer', 
  `Fnumber` string COMMENT 'from deserializer', 
  `Qty` decimal(18,4) COMMENT 'from deserializer', 
  `StorageNo` string COMMENT 'from deserializer', 
  `MaterialCode` string COMMENT 'from deserializer', 
  `RepertoryId` string COMMENT 'from deserializer', 
  `RepertoryGuid` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION 'hdfs://mycluster/apps/hive/warehouse/mes.db/ODS_PROFESSION_MATERIALSTOCK'

alter  table  mes.ODS_PROFESSION_MATERIALSTOCK  drop  if  exists  partition (day='${sys_day}',db='${db_name}')  ;
alter  table  mes.ODS_PROFESSION_MATERIALSTOCK  add  partition  (day='${sys_day}',db='${db_name}')  location  '/apps/hive/warehouse/mes.db/ODS_PROFESSION_MATERIALSTOCK/day=${sys_day}/db=${db_name}'; 


-- 华南出货

CREATE EXTERNAL TABLE  if not exists `tms.ods_tms_bss_launch`(
  `Id` int COMMENT 'from deserializer', 
  `GuidNo` string COMMENT 'from deserializer',
  `LaunchNo` string COMMENT 'from deserializer',
  `TransportMode` string COMMENT 'from deserializer',
  `FactoryNo` string COMMENT 'from deserializer',
  `FactoryName` string COMMENT 'from deserializer',
  `MainAddressId` string COMMENT 'from deserializer',
  `MainAddress` string COMMENT 'from deserializer',
  `Address` string COMMENT 'from deserializer',
  `CustomerNo` string COMMENT 'from deserializer',
  `CustomerName` string COMMENT 'from deserializer',
  `StaffName` string COMMENT 'from deserializer',
  `StaffNo` string COMMENT 'from deserializer',
  `Phone` string COMMENT 'from deserializer',
  `SaleLegalNo` string COMMENT 'from deserializer',
  `GoodsLegalNo` string COMMENT 'from deserializer',
  `FactorySubNo` string COMMENT 'from deserializer',
  `OverseasCompany` string COMMENT 'from deserializer',
  `SupplierNo` string COMMENT 'from deserializer',
  `SupplierName` string COMMENT 'from deserializer',
  `WarehouseNo` string COMMENT 'from deserializer',
  `WarehouseName` string COMMENT 'from deserializer',
  `BillNo` string COMMENT 'from deserializer',
  `Email` string COMMENT 'from deserializer',
  `Creator` string COMMENT 'from deserializer',
  `CreateName` string COMMENT 'from deserializer',
  `CreateTime` string COMMENT 'from deserializer',
  `Updator` string COMMENT 'from deserializer',
  `UpdateName` string COMMENT 'from deserializer',
  `UpdateTime` string COMMENT 'from deserializer',
  `IsDelete` string COMMENT 'from deserializer',
  `AuditStatus` string COMMENT 'from deserializer',
  `OALaunchNO` string COMMENT 'from deserializer',
  `OALaunchId` string COMMENT 'from deserializer',
  `data_loadtime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_LAUNCH';

alter  table  tms.ods_tms_bss_launch  drop  if  exists  partition (day='${sys_day}',db='${db_name}')  ;
alter  table  tms.ods_tms_bss_launch  add  partition  (day='${sys_day}',db='${db_name}')  location  '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_LAUNCH/day=${sys_day}/db=${db_name}'; 



CREATE EXTERNAL TABLE  if not exists `tms.ods_tms_bss_launchsub`(
  `Id` int COMMENT 'from deserializer', 
  `GuidNo` string COMMENT 'from deserializer',
  `LaunchNo` string COMMENT 'from deserializer',
  `WarehouseNo` string COMMENT 'from deserializer',
  `WarehouseName` string COMMENT 'from deserializer',
  `MainAddressId` string COMMENT 'from deserializer',
  `MainAddress` string COMMENT 'from deserializer',
  `Address` string COMMENT 'from deserializer',
  `CustomerNo` string COMMENT 'from deserializer',
  `CustomerName` string COMMENT 'from deserializer',
  `StaffName` string COMMENT 'from deserializer',
  `Phone` string COMMENT 'from deserializer',
  `DeliveryTime` string COMMENT 'from deserializer',
  `ArrivalTime` string COMMENT 'from deserializer',
  `Requirenment` string COMMENT 'from deserializer',
  `FactoryNo` string COMMENT 'from deserializer',
  `FactoryName` string COMMENT 'from deserializer',
  `ClearDate` string COMMENT 'from deserializer',
  `GoodType` string COMMENT 'from deserializer',
  `Port` string COMMENT 'from deserializer',
  `Creator` string COMMENT 'from deserializer',
  `CreateName` string COMMENT 'from deserializer',
  `CreateTime` string COMMENT 'from deserializer',
  `Updator` string COMMENT 'from deserializer',
  `UpdateName` string COMMENT 'from deserializer',
  `UpdateTime` string COMMENT 'from deserializer',
  `IsDelete` string COMMENT 'from deserializer',
  `CancelStatus` string COMMENT 'from deserializer',
  `CancelReason` string COMMENT 'from deserializer',
  `TransitAddress` string COMMENT 'from deserializer',
  `TransitTime` string COMMENT 'from deserializer',
  `data_loadtime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_LAUNCHSUB';

alter  table  tms.ods_tms_bss_launchsub  drop  if  exists  partition (day='${sys_day}',db='${db_name}')  ;
alter  table  tms.ods_tms_bss_launchsub  add  partition  (day='${sys_day}',db='${db_name}')  location  '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_LAUNCHSUB/day=${sys_day}/db=${db_name}'; 



CREATE EXTERNAL TABLE  if not exists `tms.ods_tms_bss_launchdetail`(
  `Id` int COMMENT 'from deserializer', 
  `GuidNo` string COMMENT 'from deserializer',
  `LaunchSubNo` string COMMENT 'from deserializer',
  `LaunchNo` string COMMENT 'from deserializer',
  `GoodsName` string COMMENT 'from deserializer',
  `NumberOfPCS` int COMMENT 'from deserializer',
  `NumberOfPlates` int COMMENT 'from deserializer',
  `Weight`  decimal(18,2) COMMENT 'from deserializer',
  `Volume`  decimal(18,2) COMMENT 'from deserializer',
  `VolumeMeasurement` string COMMENT 'from deserializer',
  `DeliveryNo` string COMMENT 'from deserializer',
  `NumberOfDoc` int COMMENT 'from deserializer',
  `EmsMaterialNo` string COMMENT 'from deserializer',
  `InMaterialNo` string COMMENT 'from deserializer',
  `OderNo` string COMMENT 'from deserializer',
  `LineNo` int COMMENT 'from deserializer',
  `EInvoiceNo` string COMMENT 'from deserializer',
  `GInvoiceNo` string COMMENT 'from deserializer',
  `DeclareType` string COMMENT 'from deserializer',
  `DeclareNo` string COMMENT 'from deserializer',
  `CostCenter` string COMMENT 'from deserializer',
  `CostArea` string COMMENT 'from deserializer',
  `SNumberOfPCS` int COMMENT 'from deserializer',
  `PlatesNo` string COMMENT 'from deserializer',
  `PlatesWeight` string COMMENT 'from deserializer',
  `Qty` int COMMENT 'from deserializer',
  `TotalPrice` decimal(18,2) COMMENT 'from deserializer',
  `Currency` string COMMENT 'from deserializer',
  `Keeper` string COMMENT 'from deserializer',
  `StaffNo` string COMMENT 'from deserializer',
  `Phone` string COMMENT 'from deserializer',
  `Brand` string COMMENT 'from deserializer',
  `ColorType` string COMMENT 'from deserializer',
  `GoodsNature` string COMMENT 'from deserializer',
  `Country` string COMMENT 'from deserializer',
  `TradeType` string COMMENT 'from deserializer',
  `InvoiceNumber` string COMMENT 'from deserializer',
  `ContainerNo` string COMMENT 'from deserializer',
  `PlateType` string COMMENT 'from deserializer',
  `WeightUnit` string COMMENT 'from deserializer',
  `ProductLength` decimal(10,2)COMMENT 'from deserializer',
  `ProductWidth` decimal(10,2)COMMENT 'from deserializer',
  `ProductHeight` decimal(10,2)COMMENT 'from deserializer',
  `PackgeLength` decimal(10,2)COMMENT 'from deserializer',
  `PackegeWidth` decimal(10,2)COMMENT 'from deserializer',
  `PackegeHeight` decimal(10,2)COMMENT 'from deserializer',
  `BasicUnit` string COMMENT 'from deserializer',
  `BillOfNo` string COMMENT 'from deserializer',
  `Creator` string COMMENT 'from deserializer',
  `CreateName` string COMMENT 'from deserializer',
  `CreateTime` string COMMENT 'from deserializer',
  `Updator` string COMMENT 'from deserializer',
  `UpdateName` string COMMENT 'from deserializer',
  `UpdateTime` string COMMENT 'from deserializer',
  `IsDelete` string COMMENT 'from deserializer',
  `ClearFileDate` string COMMENT 'from deserializer',
  `data_loadtime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_LAUNCHDETAIL';

alter  table  tms.ods_tms_bss_launchdetail  drop  if  exists  partition (day='${sys_day}',db='${db_name}')  ;
alter  table  tms.ods_tms_bss_launchdetail  add  partition  (day='${sys_day}',db='${db_name}')  location  '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_LAUNCHDETAIL/day=${sys_day}/db=${db_name}'; 



CREATE EXTERNAL TABLE  if not exists `tms.ods_tms_bss_dispatchlaunch`(
  `Id` int COMMENT 'from deserializer', 
  `GuidNo` string COMMENT 'from deserializer',
  `DispatchNo` string COMMENT 'from deserializer',
  `LaunchSubNo` string COMMENT 'from deserializer',
  `GroupId` string COMMENT 'from deserializer',
  `Creator` string COMMENT 'from deserializer',
  `CreateName` string COMMENT 'from deserializer',
  `CreateTime` string COMMENT 'from deserializer',
  `Updator` string COMMENT 'from deserializer',
  `UpdateName` string COMMENT 'from deserializer',
  `UpdateTime` string COMMENT 'from deserializer',
  `IsDelete` string COMMENT 'from deserializer',
  `data_loadtime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_DISPATCHLAUNCH';

alter  table  tms.ods_tms_bss_dispatchlaunch  drop  if  exists  partition (day='${sys_day}',db='${db_name}')  ;
alter  table  tms.ods_tms_bss_dispatchlaunch  add  partition  (day='${sys_day}',db='${db_name}')  location  '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_DISPATCHLAUNCH/day=${sys_day}/db=${db_name}'; 




CREATE EXTERNAL TABLE  if not exists `tms.ods_tms_bss_dispatch`(
  `Id` int COMMENT 'from deserializer',
  `GuidNo` string COMMENT 'from deserializer',
  `DispatchNo` string COMMENT 'from deserializer',
  `DispatchType` string COMMENT 'from deserializer',
  `OriginalPlace` string COMMENT 'from deserializer',
  `StartAddress` string COMMENT 'from deserializer',
  `OriginalPlaceId` string COMMENT 'from deserializer',
  `Destination` string COMMENT 'from deserializer',
  `EndAddress` string COMMENT 'from deserializer',
  `DestinationId` string COMMENT 'from deserializer',
  `VehicleNo` string COMMENT 'from deserializer',
  `DriverName` string COMMENT 'from deserializer',
  `DriverNo` string COMMENT 'from deserializer',
  `Mobile` string COMMENT 'from deserializer',
  `StarTime` string COMMENT 'from deserializer',
  `EndTime` string COMMENT 'from deserializer',
  `Reason` string COMMENT 'from deserializer',
  `Remark` string COMMENT 'from deserializer',
  `Cause` string COMMENT 'from deserializer',
  `SupplierNo` string COMMENT 'from deserializer',
  `SupplierName` string COMMENT 'from deserializer',
  `VehicleType` string COMMENT 'from deserializer',
  `VehicleMode` string COMMENT 'from deserializer',
  `Fee` decimal(18,2)  COMMENT 'from deserializer',
  `TransportType` string COMMENT 'from deserializer',
  `TrackNo` string COMMENT 'from deserializer',
  `StaffName` string COMMENT 'from deserializer',
  `StaffNo` string COMMENT 'from deserializer',
  `Phone` string COMMENT 'from deserializer',
  `LoadingScanningState` int COMMENT 'from deserializer',
  `UnloadingScanningState` int COMMENT 'from deserializer',
  `HamalName` string COMMENT 'from deserializer',
  `Creator` string COMMENT 'from deserializer',
  `CreateName` string  COMMENT 'from deserializer',
  `CreateTime` string COMMENT 'from deserializer',
  `Updator` string COMMENT 'from deserializer',
  `UpdateName` string COMMENT 'from deserializer',
  `UpdateTime` string COMMENT 'from deserializer',
  `IsDelete` string COMMENT 'from deserializer',
  `PackingMethodCode` string COMMENT 'from deserializer',
  `SigningRequirementsCode` string COMMENT 'from deserializer',
  `DeliveryModeCode` string COMMENT 'from deserializer',
  `PaymentMethodCode` string COMMENT 'from deserializer',
  `ServiceTypeNo` string COMMENT 'from deserializer',
  `DeleteReason` string COMMENT 'from deserializer',
  `ContainerNumber` string COMMENT 'from deserializer',
  `TrackNoSub` string COMMENT 'from deserializer',
  `PortOfDeparture` string COMMENT 'from deserializer',
  `ESailDepartDate` string COMMENT 'from deserializer',
  `EArrivalDate` string COMMENT 'from deserializer',
  `PortOfDestination` string COMMENT 'from deserializer',
  `ASailDepartDate` string COMMENT 'from deserializer',
  `AArrivalDate` string COMMENT 'from deserializer',
  `DeliveryDate` string COMMENT 'from deserializer',
  `ExceptionDescription` string COMMENT 'from deserializer',
  `EstimatedLogisticsCost` decimal(18,2)  COMMENT 'from deserializer',
  `ElcCurrency` string COMMENT 'from deserializer',
  `ReconciliationLogisticsCost` decimal(18,2)  COMMENT 'from deserializer',
  `RlcCurrency` string COMMENT 'from deserializer',
  `TossStatus` string COMMENT 'from deserializer',
  `TossContent` string COMMENT 'from deserializer',
  `CustomerCode` string COMMENT 'from deserializer',
  `TrackBackNo` string COMMENT 'from deserializer',
  `data_loadtime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_DISPATCH';

alter  table  tms.ods_tms_bss_dispatch  drop  if  exists  partition (day='${sys_day}',db='${db_name}')  ;
alter  table  tms.ods_tms_bss_dispatch  add  partition  (day='${sys_day}',db='${db_name}')  location  '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_DISPATCH/day=${sys_day}/db=${db_name}'; 




CREATE EXTERNAL TABLE  if not exists `tms.ods_tms_bss_mileage`(
  `Id` int COMMENT 'from deserializer',
  `GuidNo` string COMMENT 'from deserializer',
  `DispatchNo` string COMMENT 'from deserializer',
  `GoMileage` int COMMENT 'from deserializer',
  `GoTime` string COMMENT 'from deserializer',
  `GoRemark` string COMMENT 'from deserializer',
  `GoStaffName` string COMMENT 'from deserializer',
  `GoStaffNo` string COMMENT 'from deserializer',
  `GoEntryTime` string COMMENT 'from deserializer',
  `RtMileage` int COMMENT 'from deserializer',
  `RtTime` string COMMENT 'from deserializer',
  `RtRemark` string COMMENT 'from deserializer',
  `RtStaffName` string COMMENT 'from deserializer',
  `RtStaffNo` string COMMENT 'from deserializer',
  `RtEntryTime` string COMMENT 'from deserializer',
  `data_loadtime` string COMMENT 'from deserializer')
PARTITIONED BY ( 
  `day` string, 
  `db` string)
row  format  serde  'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'  with  serdeproperties  ('field.delim'='^#')
LOCATION '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_MILEAGE';

alter  table  tms.ods_tms_bss_mileage  drop  if  exists  partition (day='${sys_day}',db='${db_name}')  ;
alter  table  tms.ods_tms_bss_mileage  add  partition  (day='${sys_day}',db='${db_name}')  location  '/apps/hive/warehouse/tms.db/ODS_TMS_BSS_MILEAGE/day=${sys_day}/db=${db_name}'; 


-- 华南出货 hive表，phoenix映射

CREATE EXTERNAL TABLE `dwservice.dws_tms_out_stock_statis`(
  `weight` decimal(18,2) COMMENT '重量总数', 
  `NumberOfPlates` decimal(18,2) COMMENT '板数总数', 
  `SNumberOfPCS` decimal(18,2) COMMENT '箱数总数', 
  `Volume`  decimal(18,2) COMMENT '体积总数', 
  `DispatchNo`  decimal(18,2) COMMENT '出车次数', 
  `CustomerNum` bigint COMMENT '客户总数', 
  `RtMileage` string COMMENT '里程总数'
  )
PARTITIONED BY ( 
  `day` string)
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '\t' 
stored AS orc 
tblproperties('orc.compression' = 'snappy'); 

CREATE TABLE DW.DWS_TMS_OUT_STOCK_STATIS(
	PKID VARCHAR NOT NULL,
	CREATE_TIME TIMESTAMP,
	UPDATE_TIME TIMESTAMP,
	weight DECIMAL(18,2),
	NumberOfPlates DECIMAL(18,2),
	SNumberOfPCS DECIMAL(18,2),
	Volume DECIMAL(18,2),
	DispatchNo DECIMAL(18,2),
	CustomerNum DECIMAL(18,2),
	RtMileage DECIMAL(18,2),
	"DAY" VARCHAR,
	CONSTRAINT DWS_TMS_OUT_STOCK_STATIS_PK PRIMARY KEY (PKID)
);




面试问题：
1、集群搭建以及组件原理
	Hadoop：
		-、MR的Shuffle过程
		-、Yarn的工作机制，以及MR Job提交运行过程
		-、HDFS写入过程
		-、namenode的HA实现
		-、HDFS写入过程客户端奔溃怎么处理？
	ZK：
		-、Zookeeper的leader选举过程
		-、简述paxos算法
		-、Zookeeper如何保证数据的一致性？
		-、Zookeeper在yarn框架中如何实现避免脑裂的?
	HIVE:
		-、Hive分区过多有何坏处以及分区时的注意事项
		-、hive分桶？
		-、Hive中复杂数据类型的使用好处与坏处
		-、Hive元数据库是用来做什么的，存储哪些信息？
		-、Hive什么情况下可以避免进行mapreduce？
		-、Hive MapJoin?	
		-、Hive的sort by, order by, distribute by, cluster by区别？
		-、Hive优化常用手段
		-、数据倾斜改怎么优化？
		-、Hive，行专列怎么实现？开窗函数有了解吗?
		-、UDF如何实现？UDAF？
	SPARK：
		-、Spark的运行模式
		-、Spark和MapReduce的区别
		-、RDD是如何容错的？
		-、Spark的Stage是怎么划分的？如何优化？
		-、Spark执行任务流程（standalone、yarn）
			
	Kettle：
		-、怎么实现任务有序进行？
		-、数据抽取失败怎么恢复？
	Flume:
		-、Flume怎么实时监听文件夹
		
2、数据建模
	-、数据仓库和数据库有什么区别？
		(事务性数据库和决策支持数据库的区别，当然包括目标、用途、设计等等)
		（1）数据是面向事务处的，数据是由日常的业务产生的，常更新；数据仓库是面向主题的,数据来源于数据库或文件，经过一定的规则转换得到，用来分析的。
		（2）数据库一般是用来存储当前交易数据；数据仓库存储一般存储的是历史数据。
		（3）数据库的设计一般是符合三范式的，有最大的精确度和最小的冗余度，有利于数据的插入；数据仓库的设计一般是星型的，有利于查询。

	-、 有哪几种模型设计方法？特点分别是什么？
		-、范式建模法（Third Normal Form，3NF）
			-、每个属性值唯一，不具有多义性 ;
			-、每个非主属性必须完全依赖于整个主键，而非主键的一部分 ;
			-、每个非主属性不能依赖于其他关系中的属性，因为这样的话，这种属性应该归到其他关系中去。
		-、维度建模法
			-、按照事实表，维表来构建数据仓库，数据集市。这种方法的最被人广泛知晓的名字就是星型模式（Star-schema）。
	-、模型设计的思路？业务需求驱动？数据驱动？
			构造数据仓库有两种方式：一是自上而下，一是自下而上。
			 -、Bill Inmon先生推崇“自上而下”的方式，即一个企业建立唯一的数据中心，就像一个数据的仓库，其中数据是经过整合、经过清洗、去掉脏数据的、标准的，能够提供统一的视图。要建立这样的数据仓库，并不从它需要支持哪些应用入手，而是要从整个企业的环境入手，分析其中的概念，应该有什么样的数据，达成概念完成整；（会考虑到很全面的设计）
			 -、 Ralph Kimball先生推崇“自下而上”的方式，他认为建设数据仓库应该按照实际的应用需求，加载需要的数据，不需要的数据不要加载到数据仓库中。这种方式建设周期较短，客户能够很快看到结果。（针对客户的需求，需求要什么就做什么）
			二者都要达到同一个目标：企业级数据仓库。实际上在建设数据仓库的时候，一般都参照这两种方式结合使用没有硬性规定
	-、模型设计的步骤？
			一、 确定主题
			即确定数据分析或前端展现的主题(例:某年某月某地区的啤酒销售情况)。主题要体现出某一方面的各分析角度(维度)和统计数值型数据(量度)之间的关系,确定主题时要综合考虑.
			二、 确定量度
			确定主题后，需要考虑分析的技术指标(例:年销售额等等)。它们一般为数据值型数据，其中有些度量值不可以汇总；些可以汇总起来，以便为分析者提供有用的信息。量度是要统计的指标，必须事先选择恰当，基于不同的量度可以进行复杂关键性指标(KPI)的设计和计算。
			三、 确定事实数据粒度
			确定量度之后，需要考虑该量度的汇总情况和不同维度下量度的聚合情况.例如在业务系统中数据最小记录到秒，而在将来分析需求中，时间只要精确到天就可以了，在ETL处理过程中，按天来汇总数据,些时数据仓库中量度的粒度就是”天”。如果不能确认将来的分析需求中是否要精确的秒，那么，我们要遵循”最小粒度原则”,在数据仓库中的事实表中保留每一秒的数据，从而在后续建立多维分析模型(CUBE)的时候,会对数据提前进行汇总，保障产生分析结果的效率。
			四、 确定维度
			维度是分析的各个角度.例:我们希望按照时间，或者按照地区，或者按照产品进行分析。那么这里的时间，地区，产品就是相应的维度。基于不同的维度，可以看到各个量度汇总的情况，也可以基于所有的维度进行交叉分析。
			维度的层次(Hierarchy)和级别(Level)。例:在时间维度上，按照”度-季度-月”形成了一个层次，其中”年” ,”季度” ,”月”成为了这个层次的3个级别。我们可以将“产品大类-产品子类-产品”划为一个层次，其中包含“产品大类”、“产品子类”、“产品”三个级别。
			我们可以将3个级别设置成一张数据表中的3个字段,比如时间维度；我们也可以使用三张表，分别保存产品大类，产品子类，产品三部分数据,比如产品维度。
			建立维度表时要充分使用代理键.代理键是数据值型的ID号码(每张表的第一个字段)，它唯一标识了第一维度成员。在聚合时，数值型字段的匹配和比较，join效率高。同时代理键在缓慢变化维中，起到了对新数据与历史数据的标识作用。
			五、 创建事实表
			在确定好事实数据和维度后，将考虑加载事实表。业务系统的的一笔笔生产，交易记录就是将要建立的事实表的原始数据.
			我们的做法是将原始表与维度表进行关联，生成事实表。关联时有为空的数据时(数据源脏)，需要使用外连接，连接后将各维度的代理键取出放于事实表中，事实表除了各维度代理键外，还有各度量数据，不应该存在描述性信息。
			事实表中的记录条数据都比较多，要为其设置复合主键各蛇引，以实现数据的完整性和基于数据仓库的查询性能优化。
			
3、算法
	-、二叉排序树的删除操作	
		-、叶子节点；(直接删除即可)
		-、仅有左或右子树的节点；（上移子树即可）
		-、左右子树都有的节点。( 用删除节点的直接前驱或者直接后继来替换当前节点，调整直接前驱或者直接后继的位置)
	-、排序算法比较
		-、快排：
			（1）算法思想
				选择一个基准元素，将比基准元素小的元素放在其前面，比基准元素大的元素放在其后面，然后在将小于基准值元素的子数列和大于基准元素的子数列按原来的方法排序，直到整个序列有序;
			（2）优缺点
				优点：极快数据移动少；
				缺点：不稳定；
			（3）效率分析
				此排序算法的效率在序列越乱的时候，效率越高。在数据有序时，会退化成冒泡排序；
			（4）对于基准的选择

4、元数据、数据治理
5、开发语言JAVA
	-、JVM内存布局原理、JVM垃圾回收机制、JVM垃圾回收算法
	-、GC排查
	-、
	
	
	1、维度建模：
		1、 powerdesgier
		2、按业务模块， 不同的人，不同的建模。
		3、sqoop /kettle，ods —> 
			调度工具:	
			运维:  日志->  	90% , 10% 找其他人处理.
				平台自己维护,欠缺
					1、磁盘和io很大， 怎么看的？  -- > 设置的
					2、性能调优 ，yarn，cpu,内存。
					3、GC，代码写的有问题。
					5、8台，6台dn，2NN,128G。
			Hive性能调优：
				1、数据倾斜：
						null，打散掉。
						数据量大，单独拿出来
						sql，（compl）。
						mapjoin 参数。(不一定会走，)
				2、hive ，
						分区，时间，db.
			数据量级：
				1、mes，OA，
				2、按天抽取。
				3、存储，
						
集群搭建以及运维：
	1、可独立搭建集群（仅应用于测试环境）
	2、可处理简单日常运维（简单问题可处理，复杂棘手问题处理有难度）
	3、数据存量敏感度低（对数据存储优化理解不深刻）
开发：
	1、技术栈欠缺 （侧重kettle，Hive sql开发，Hbase，spark等组件使用较少）
	2、可开发常见的HQL语句 
	3、代码调优能力欠缺 
	4、复杂场景处理能力欠缺
	
整体评价：
	1、日常开发满足
	2、运维能力欠缺
	3、棘手复杂问题处理能力欠缺
	
	
奶粉如何选？
1、营养优先？
2、口感优先？
3、补卡 or  补铁？
4、看配料表 
	1、看配料表中有没有不好的成分，比如白砂糖，香精，香兰素等
	2、看营养成分表中的“可选择成分列”，越多越好，但是也会越贵，根据自己宝贝的需求选择即好～
-、宝宝聪明，那就看看有没有含有DHA/AA ，胆碱，牛磺酸
-、孩子抵抗力强，那就看看有没有乳铁蛋白，核苷酸等元素
-、吸收好，看看是不是opo配方，或者是不是蛋白经过了部分水解等等

-->	预防宝宝便秘与腹泻 
		品牌:飞鹤星飞帆奶粉 
		成分：含有 OPO结构脂与水解肠子清蛋白，易于宝宝吸收，促进宝宝肠蠕动
-->	提高抵抗力
		品牌:皇家美素佳儿较大婴儿配方奶粉(6~12月 2段) 
		成分：乳铁蛋白含量高，辅助对抗病原体，调节免疫技能有重要价值，且可以让奶粉的营养成分更接近母乳
--> 益生菌多
		品牌：畅益组合较大婴儿配方奶粉(6~12月 2段) > 阳光奥佳较大婴儿配方奶粉(6~12月 2段) > 光明牧场较大婴儿配方奶粉(6~12月 2段)
		> 君乐宝乐畅，乐臻 > 旗帜益佳 
		成分： 奶粉中添加的益生菌主要是【双歧杆菌】。（抑制潜在的病原菌、增强肠道屏障功能、抑制炎症及调节免疫反应）
	

	
Aptamil 澳洲爱他美白金版婴儿奶粉2段：
	奶源地：新西兰
	强化配方：DHA、ARA、牛磺酸、核苷酸、胆碱、益生元组合、天然乳脂、益生菌、叶黄素
	参考价格（国际妈咪APP）：278/900g
	优点：
		1、奶源优质
		2、DHA含量高
		3、叶黄素和益生菌
		4、添加了防止便秘的天然乳脂，吸收和消化主打
	缺点：
		1、价格贵（添加乳铁蛋白）
		
皇家美素佳儿较大婴儿配方奶粉(6~12月 2段)
	奶源地：荷兰
	强化配方：DHA、ARA、牛磺酸、核苷酸、胆碱、益生元、天然乳脂、乳铁蛋白
	参考价格（国际妈咪APP）：383/800g
	
		优点：
			1、奶源优质
			2、DHA添加量比较足
			3、添加防止便秘的天然乳脂	
			4、乳铁蛋白，提高抵抗力
		缺点：
			1、价格贵（添加乳铁蛋白）

Aptamil 德国爱他美白金版双重HMO婴儿奶粉2段
	奶源地：德国
	强化配方：DHA、ARA、牛磺酸、核苷酸、胆碱、益生元组合、天然乳脂、母乳低聚糖
	参考价格（国际妈咪APP）：279/800g
	
		优点：
			1、奶源优质
			2、DHA添加量比较足
			3、添加防止便秘的天然乳脂
			4、间接调控抵抗力的HMO母乳低聚糖
		缺点：
			1、无乳铁蛋白
			2、价格便宜（相对美素佳儿）
			
飞鹤智纯臻稚有机较大婴儿奶粉2段：
	奶源地：黑龙江
	强化配方：DHA、ARA、益生元
	参考价格（国际妈咪APP）：320/700g

	优点：
			1、有机奶粉
			2、DHA添加量比较足
		缺点：
			1、唯一亮点，有机，但是不便宜



作者：一脸问号的小圆
链接：https://www.zhihu.com/question/407701601/answer/1977921479
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

打个比方，如果四个朋友同时向你借钱朋友A说：今天你借我1000元，2年后我一分不差还你1000你借不借？——这是PUA这里就涉及第一个概念：TVM，全拼Time Value of Money（货币时间价值）。什么意思呢？其实大家很熟悉：比如我今天有1000元，我存银行，银行利率为r，那么2年后这笔钱就变成了1000 x (1+r)2。比如假设利率r为3%，那么2年后这笔钱就变成了1000 x (1+3%)2 = 1061。所以，TVM是说货币经过一定时间的投资和再投资（即把利息加到下一轮的本金中）后，价值会有所增加。这也就意味着，两笔金额相等的资金，如果在不同的时期给你，它们的实际价值其实并不相等。换句话说，在上面的例子中，等式应该这样写：今天的1000元 = 2年后的1061元。也就是说，小A其实PUA了你61元。。。正在你觉得朋友A不靠谱时，朋友B和C表示都有话说：“我不像小A，我靠谱，我愿意付利息，选我，选我”朋友B说：今天你借我1000元，2年后我还你1200朋友C说：今天你借我1000元，3年后我还你1400这是来借钱的正确姿势吗？不是，这是来给你出题的，就是要你算：2年后的1200，和3年后的1400，哪个更值钱？但是我们不怕，因为我们懂PV。PV，即Present Value（现值），它管的是，2年后的1200，和3年后的1400，如果把它们都还原到“今天”这个同样的时间点，它们“现在值多少钱”。你可以把它理解为，如果这笔钱今天之内就还了，B和C分别承诺的是还多少，看哪个高。计算过程：PVB x (1+r)2 = 1200PVC x (1+r)3 = 1400假设r还和上面的例子一样，是3%，那么计算后我们知道 PVB=1131， PVC= 1281，比PVB大，所以我们应该借给小C（虽然为这一百多块的差距计算这么多也很心累。。。）但是，朋友D也跑来凑热闹了（hmmmm，又来一个。。。）D说：我不像他们，动不动就成千地借，还一借就借好几年，我只找你借400元，1年后就还，还你750元。你一算（假设利率还一样是3%），PVD x (1+r) = 750，算出来PVD = 728，远远低于PVC (1281)，看起来还是借给PV更高的小C划算？未必，别忘了，C找你借1000元，D只借400元，也就是说，你对他俩的初始投资是不一样的。当几笔投资的初始投入相同时，我们可以用PV来比较哪笔投资更划算，但当初始投入不同时，我们就要引入一个新的概念——NPV，Net Present Value（净现值）。NPV是PV减去你最初投入的钱。它衡量的是未来的现金流折算到今天（也就是PV），超过初始投资的收益。所以，越高越好。NPVC=1281-1000=281NPVD=728-400=328，更高所以应该借给D朋友只是个比方，其实是说你投资理财，可能有几个不同的投资机会，能给你带来的潜在收益不等，如何选择？朋友ABCD，对应的就是投资项目ABCD。。。比如朋友B就是项目B，今天你投1000，预计2年后收益1200，以此类推。有人要问了，那我对朋友B感情最深，所以借给他时，利率不用3%，2%我就愿意。还有的要问了，D借的时间最短，照理说利率应该低一点，为何他要答应和ABC一样的利率？是的，上面用一样的利率只是为了计算方便，举例而已。现实中，比如像D的情况，大概率利率是比ABC低的。那么这就涉及到一个重要问题：各种投资项目中，利率r是如何确定的。这涉及你对机会成本，以及每个项目不同风险程度（比如流动性不同，又比如违约风险不同）的判断。这个问题很重要，但和PV以及NPV概念本身无关（仅仅是数学上决定它们的值而已），因此这里不赘述了