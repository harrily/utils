-------------------------  测试 Phoenox 运行速度慢          ------------2-------2

select count(1) from DW.DWS_CD_BY_AMOUNT_MONTH  ;
select count(1) from DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH;
select count(1) FROM DW.DWS_CD_BY_MATERIAL_TYPE_MONTH;
select count(1) FROM DW.DWS_CD_BY_PURCHASER_MONTH;

SELECT * FROM DW.DWS_AREA_COMPANY WHERE dim = '4' AND area = '华南'
SELECT * FROM DW.DWS_AREA_COMPANY WHERE dim = '8'
SELECT * FROM  DW.DWS_CD_BY_AREA_MONTH WHERE dim = '1'  AND area = '华东'

select count(1) from DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE dim = '1'; 
SELECT DISTINCT(MATERIAL_TYPE) FROM DW.DWS_CD_BY_MATERIAL_TYPE_MONTH ;


-- 1、物料名称 物料降价优化

	-- 1.1测试物料降价   
	-- 深圳结构件的数据，price貌似是null,所以导致前端数据展示问题。
	SELECT  PKID,MATERIAL_8CODE, MATERIAL_NAME, PRICE, DIM, "YEAR", "MONTH", "DATE"
	FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE  "DATE" BETWEEN '2020-01' AND '2020-12' AND
	  dim='6' AND
	 MATERIAL_NAME 
	IN ('标语  60cmX80cm kt板','PRIMARC UV灯管','洗洁精900ml（深特）','电池盖CNC件 AL2350 白绿色')
	 -- in ('(喷砂+高光+阳极)一次金色','(银色1)PVD后外观全检','(阳极+导电位) 粉色','(阳极+导电位)金色');
	 
	 SELECT  PKID,MATERIAL_8CODE, MATERIAL_NAME, PRICE, DIM, "YEAR", "MONTH", "DATE"
	FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE  "DATE" BETWEEN '2019-01' AND '2019-12' AND
	  dim='10' AND
	 MATERIAL_NAME 
	--IN ('元器件')
	 --  in ('(Double Tape(A)(口字型膠))','PSA 1|CABLE|TWEETER A|NY','HHH项目，SPAN包装成品，B159-SPAN-ASSY 203.73*4.68*2.45MM（白胶）','GRAPHITE|MIDPLATE| Jaguar');
	 in ('(Double Tape(A)(口字型膠))','CONTACT SHIM','Double Tape(H)/Tesa 4972','ADHESIVE|STIFFENER|X480');
	  SELECT  PKID,MATERIAL_8CODE, MATERIAL_NAME, PRICE, DIM, "YEAR", "MONTH", "DATE"
	FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE  "DATE" BETWEEN '2020-01' AND '2020-02' AND
	  dim='3' AND
	 MATERIAL_NAME 
	 LIKE '%电池缓冲泡棉%'
	IN ('电池缓冲泡棉 FA029')
	IN ('电池缓冲泡棉 FA029')
	IN ('TAPE KAPTON 60FRB+PSA|BLACK  29.33x6 t=0.03mm 右')
	 -- in (' 0.025 白色25u白色PE离型膜4-9g ',' CAMERA_ HEAT_SPREADER',' Lutensol TO-10 （巴斯夫）',' Lutensol TO-7 （巴斯夫）');
     in('(Double Tape(A)(口字型膠))','ABSORBER|LED FLEX|BTM|MG')
	SELECT MATERIAL_NAME FROM DW.DWS_MATERIAL_NAME WHERE dim='1' LIMIT 4 ;


	-- SELECT
	-- /*+INDEX(DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH INDEX_2_MATERIAL_CUT_PRICE)*/ 
	-- distinct(A.MATERIAL_NAME) FROM  (
	SELECT MATERIAL_NAME 
		FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH 
		 WHERE dim='1'
		GROUP BY MATERIAL_NAME,diff_num,count_num
	ORDER BY diff_num,count_num
	--) A ;

	-- 1.2、维护物料名称表 （按照 物料降价幅度，数量倒序 ）
		SELECT A.MATERIAL_NAME,A.dim FROM (
		SELECT MATERIAL_NAME,dim
			FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH 
		 GROUP BY MATERIAL_NAME,dim,diff_num,count_num
		ORDER BY diff_num,count_num
		 ) A WHERE A.dim = '10';
		
		-- 测试
		SELECT * FROM DW.DWS_MATERIAL_NAME WHERE MATERIAL_NAME like '%，' -- AND dim  ='10'
		
		
		SELECT MATERIAL_NAME FROM DW.DWS_MATERIAL_NAME  WHERE dim = '10' ;
		SELECT MATERIAL_NAME FROM DW.DWS_MATERIAL_NAME  WHERE dim = '2' ;
		SELECT MATERIAL_NAME FROM DW.DWS_MATERIAL_NAME  WHERE dim = '3' LIMIT 10;
		SELECT count(1) FROM DW.DWS_MATERIAL_NAME ;

	
	select bg,material_8code,material_name,price,dim,"YEAR", "MONTH", "DATE" from DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE "DATE" 
	BETWEEN '2019-01' AND '2019-12' AND dim = '3' AND material_name 
	IN ('TAPE KAPTON 60FRB PSA|BLACK 29.33x6 t=0.03mm 左')
	--IN ( 'TAPE KAPTON 60FRB+PSA|BLACK  29.33x6 t=0.03mm 右',
	--'0.06T 黑色双面胶带' ,'HHH项目，SPAN包装成品，B159-SPAN-ASSY 203.73*4.68*2.45MM（白胶）','TAPE KAPTON 60FRB+PSA|BLACK  29.33x6 t=0.03mm 左') 
	ORDER BY "DATE" ASC , price DESC 
	
	  "DATE" 
	  dim='3' AND
	 MATERIAL_NAME 
	IN ('0.06T 黑色双面胶带')
		
		/**
		 * 
		CREATE TABLE DW.DWS_MATERIAL_NAME2 (
			PKID decimal(28,0) NOT NULL,
			MATERIAL_NAME VARCHAR,
			DIM VARCHAR(128),
			CONSTRAINT DWS_MATERIAL_NAME PRIMARY KEY (PKID)
			);
		
		 */
			-- 创建自增序列
		
		/*
		CREATE SEQUENCE book_sequence START WITH 42191209170033 INCREMENT BY 5 CACHE 1000;
		UPSERT INTO DW.DWS_MATERIAL_NAME
		SELECT NEXT VALUE FOR book_sequence, MATERIAL_NAME,dim
			FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH 
			GROUP BY MATERIAL_NAME,dim,diff_num,count_num
		ORDER BY diff_num,count_num;
		*/
	DELETE from DW.DWS_MATERIAL_NAME
	
		-- select count(1) from DW.DWS_MATERIAL_NAME  -- 194933  187225  269193  277529
   -->>
		-- 重新按照当前时间 '2019-01' ~ '2019-12' ,dim ,material_name 计算排行
		-- ！！！！！！！ 要在shell执行，db工具执行指挥插入200行
		UPSERT INTO DW.DWS_MATERIAL_NAME
		SELECT NEXT VALUE FOR book_sequence,D.material_name,D.dim FROM 
		(SELECT B.material_name,B.dim,
		CASE WHEN A.diff_num IS NULL THEN 0 ELSE A.diff_num END AS diff_num,
		CASE WHEN A.count_num IS NULL THEN 0 ELSE A.count_num END AS count_num  FROM
		(select material_name,dim,count(1) as diff_num,sum(num) as count_num from 
		(select material_name,count(1) as num ,dim,price from DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH 
		WHERE date BETWEEN '2019-01' AND  '2019-12'
		group by material_name,price,dim) C group by material_name,dim) A RIGHT  JOIN 
		(SELECT material_name,dim FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH group by material_name,dim) B 
		ON A.material_name = B.material_name AND A.dim = B.dim) D
		ORDER BY D.diff_num DESC ,D.count_num DESC ;
	
	-- 2020 数据展示
			UPSERT INTO DW.DWS_MATERIAL_NAME
		SELECT NEXT VALUE FOR book_sequence,D.material_name,D.dim FROM 
		(SELECT B.material_name,B.dim,
		CASE WHEN A.diff_num IS NULL THEN 0 ELSE A.diff_num END AS diff_num,
		CASE WHEN A.count_num IS NULL THEN 0 ELSE A.count_num END AS count_num  FROM
		(select material_name,dim,count(1) as diff_num,sum(num) as count_num from 
		(select material_name,count(1) as num ,dim,price from DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH 
		WHERE date BETWEEN '2020-01' AND  '2020-12'
		group by material_name,price,dim) C group by material_name,dim) A RIGHT  JOIN 
		(SELECT material_name,dim FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH group by material_name,dim) B 
		ON A.material_name = B.material_name AND A.dim = B.dim) D
		ORDER BY D.diff_num DESC ,D.count_num DESC ;

	UPSERT INTO DW.DWS_MATERIAL_NAME SELECT NEXT VALUE FOR book_sequence,D.material_name,D.dim FROM (SELECT B.material_name,B.dim,CASE WHEN A.diff_num IS NULL THEN 0 ELSE A.diff_num END AS diff_num,CASE WHEN A.count_num IS NULL THEN 0 ELSE A.count_num END AS count_num  FROM(select material_name,dim,count(1) as diff_num,sum(num) as count_num from (select material_name,count(1) as num ,dim,price from DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE date BETWEEN '2020-01' AND  '2020-12'group by material_name,price,dim) C group by material_name,dim) A RIGHT  JOIN (SELECT material_name,dim FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH group by material_name,dim) B ON A.material_name = B.material_name AND A.dim = B.dim) D ORDER BY D.diff_num DESC ,D.count_num DESC ;
	
	SELECT count(1) FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE dim = '1'
	
	  -- DROP TABLE 	DW.DWS_MATERIAL_NAME
	--SELECT distinct(dim) FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH
	--SELECT distinct(dim) FROM DW.DWS_MATERIAL_NAME;
 	--SELECT count(1) FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH;
-- 3、厂区,公司（组织） 名称 表维护
	
	/**
	 * 
	CREATE TABLE DW.DWS_AREA_COMPANY (
		PKID decimal(28,0) NOT NULL,
		AREA VARCHAR,
		COMPANY_NAME VARCHAR,
		DIM VARCHAR(128),
		CONSTRAINT DWS_AREA_COMPANY PRIMARY KEY (PKID)
		);
	
	 */
  -- 	DROP TABLE 	DW.DWS_AREA_COMPANY
	-- 3.1
		-- old逻辑
		-- SELECT * FROM (
		UPSERT INTO DW.DWS_AREA_COMPANY
		SELECT NEXT VALUE FOR book_sequence, A.AREA,A.COMPANY_NAME,A.dim  
		FROM (SELECT AREA,COMPANY_NAME,dim,count(1) AS num FROM DW.DWS_CD_BY_AREA_MONTH
		WHERE date BETWEEN '2019-01' AND  '2019-12'
		GROUP BY AREA,COMPANY_NAME,dim) A ORDER BY num DESC 
		-- ) S WHERE S.dim ='8' LIMIT 4;
   
		--  SELECT count(1) FROM DW.DWS_AREA_COMPANY
	-->>
		-- new 逻辑
		-- case name when '小明' then '明明啊' when '小红' then '红红啊' else name end
		-- DELETE FROM  DW.DWS_AREA_COMPANY
		
		UPSERT INTO DW.DWS_AREA_COMPANY
		SELECT NEXT VALUE FOR book_sequence,N.AREA,N.COMPANY_NAME,N.DIM FROM (
		SELECT M.AREA,M.COMPANY_NAME,M.DIM,
		CASE WHEN W.num IS NULL THEN 0 ELSE W.num END AS num2 FROM (
		SELECT  A.AREA,A.COMPANY_NAME,A.num,A.dim  
		FROM (SELECT AREA,COMPANY_NAME,dim,count(1) AS num FROM DW.DWS_CD_BY_AREA_MONTH
		WHERE date BETWEEN '2020-01' AND  '2020-12'
		GROUP BY AREA,COMPANY_NAME,dim) A ORDER BY num DESC ) W RIGHT JOIN 
		(SELECT AREA,COMPANY_NAME,DIM FROM DW.DWS_CD_BY_AREA_MONTH GROUP BY AREA,COMPANY_NAME,dim ) 
		M ON W.AREA = M.AREA AND W.COMPANY_NAME = M.COMPANY_NAME 
		AND W.DIM = M.DIM
		)N WHERE N.area IS NOT NULL 
		ORDER BY NUM2 DESC;


-- SELECT AREA,count(1) FROM (SELECT * FROM  DW.DWS_AREA_COMPANY WHERE dim = '1' ORDER BY pkid  ) A GROUP BY  AREA

 SELECT AREA FROM  DW.DWS_AREA_COMPANY WHERE dim = '4' GROUP BY AREA
 SELECT DISTINCT(DIM) FROM  DW.DWS_AREA_COMPANY WHERE dim = '3' 

    -- 3.2 生成 area表
    /**
 	CREATE TABLE DW.DWS_AREA (
		PKID decimal(28,0) NOT NULL,
		AREA VARCHAR,
		DIM VARCHAR(128),
		CONSTRAINT DWS_AREA_COMPANY PRIMARY KEY (PKID)
		);
		*/
 --	drop TABLE 	DW.DWS_AREA
 -- select count(1) from DW.DWS_AREA
 	-- DELETE FROM  DW.DWS_AREA
 -->>   
  
		UPSERT INTO DW.DWS_AREA
		SELECT NEXT VALUE FOR book_sequence,N.AREA,N.DIM FROM (
		SELECT M.AREA,M.DIM,
		CASE WHEN W.num IS NULL THEN 0 ELSE W.num END AS num2 FROM (
		SELECT A.AREA,A.num,A.dim 
		FROM (SELECT AREA,dim,count(1) AS num FROM DW.DWS_CD_BY_AREA_MONTH
		WHERE date BETWEEN '2020-01' AND  '2020-12'
		GROUP BY AREA,dim) A  ORDER BY num DESC  ) W RIGHT JOIN 
		(SELECT AREA,DIM FROM DW.DWS_CD_BY_AREA_MONTH GROUP BY AREA,dim ) 
		M ON W.AREA = M.AREA AND W.DIM = M.DIM 
		)N WHERE N.area IS NOT NULL 
		 ORDER BY NUM2 DESC;
 



SELECT * FROM  DW.DWS_AREA_COMPANY WHERE dim = '2'  AND COMPANY_NAME = '苏州领裕电子科技有限公司'
SELECT * FROM  DW.DWS_AREA_COMPANY WHERE area ='HK';
SELECT * FROM DW.DWS_CD_BY_AREA_MONTH  WHERE dim = '2'  AND COMPANY_NAME = '苏州领裕电子科技有限公司';


-- 4、优化employ表

SELECT count(1) FROM DW.DWB_EMPLOYEE

SELECT
	emp.fnumber,
	emp.fname,
	emp.fgrouporg,
	emp.dept_id,
	emp.fstatus,
	emp.fadnumber,
	emp.tel,
	emp.ftitle,
	emp.origin,
	emp.reserved1,
	emp.reserved2,
	emp.CRETIME
FROM
	DW.dwb_employee emp 
WHERE
	emp.fadnumber = 'yue.peng.cheng'
	
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------

 select account_day from DW.DWS_CD_BY_ACCOUNT_DAY_MONTH WHERE account_day IS NOT NULL  
 AND "DATE" BETWEEN '2019-01' AND '2019-12'  AND dim='1'  GROUP BY account_day ;

select bg,account_day,cd_amount,cd_proportion,total_amount,dim,"YEAR", "MONTH", "DATE"
from DW.DWS_CD_BY_ACCOUNT_DAY_MONTH WHERE account_day IS NOT NULL 
AND "DATE" BETWEEN '2019-01' AND '2019-12'  AND dim='1' 
AND account_day IN ( '月结120天' ,  '月结30天' , '月结45天'  ,  '月结60天'  ,  '月结90天'  ) ORDER BY "DATE" ASC 

 
SELECT * FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE dim ='1' 
ORDER BY diff_num DESC,count_num DESC;

SELECT * FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE MATERIAL_NAME = '(预氧+喷砂+高光+阳极)一次银色'


SELECT * FROM DW.DWS_CD_BY_AREA_MONTH WHERE dim = '3' 
AND  "DATE" BETWEEN '2019-01-01' AND '2019-12-06'
AND area= '华西' AND COMPANY_NAME = '成都领益科技有限公司';

SELECT *  FROM DW.DWS_CD_BY_AREA_MONTH WHERE COMPANY_NAME LIKE '%江粉%';


select MATERIAL_NAME from DW.DWS_MATERIAL_NAME  WHERE dim = '1' AND MATERIAL_NAME LIKE '%阳%';

select MATERIAL_NAME from DW.DWS_MATERIAL_NAME  WHERE dim = '1' LIMIT 10;

SELECT count(1)  from DW.DWS_MATERIAL_NAME ;
--  
SELECT count(1) FROM DW.DWS_CD_BY_SUPPLIER_MONTH ;
SELECT count(1) FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH;
SELECT count(1) FROM DW.DWS_CD_BY_AREA_MONTH;
SELECT count(1) FROM  DW.DWS_MATERIAL_NAME;
SELECT count(1) FROM  DW.DWS_AREA_COMPANY;
SELECT count(1) FROM  DW.DWS_CD_BY_AREA_MONTH;	
SELECT count(1) FROM  DW.DWS_CD_BY_SUPPLIER_MONTH;
-- 5、采购员 查询优化
 SELECT PURCHASER,TOTAL_AMOUNT,CD_AMOUNT,CD_PROPORTION
 FROM DW.DWS_CD_BY_PURCHASER_MONTH_YEAR 
 WHERE purchaser IS NOT NULL 
 AND "DATE" BETWEEN '2019-01-01' AND '2019-12-06' AND dim = '3' 
 GROUP BY PURCHASER,TOTAL_AMOUNT,CD_AMOUNT,CD_PROPORTION 
 ORDER BY TOTAL_AMOUNT DESC ;
 
 SELECT DISTINCT(PURCHASER),TOTAL_AMOUNT,CD_AMOUNT,CD_PROPORTION
 FROM DW.DWS_CD_BY_PURCHASER_MONTH_YEAR 
 WHERE "DATE" BETWEEN '2019-01-01' AND '2019-12-06' AND dim = '3' 
 AND purchaser IS NOT NULL 
 GROUP BY PURCHASER,TOTAL_AMOUNT,CD_AMOUNT,CD_PROPORTION 
 ORDER BY TOTAL_AMOUNT DESC;
 

SELECT  count(1) FROM  DW.DWS_CD_BY_PURCHASER_MONTH_YEAR; 
SELECT * FROM  DW.DWS_CD_BY_PURCHASER_MONTH_YEAR WHERE dim = '9'; 
SELECT * FROM  DW.DWS_CD_BY_PURCHASER_MONTH_YEAR WHERE dim = '6'; 
SELECT * FROM  DW.DWS_CD_BY_PURCHASER_MONTH_YEAR WHERE dim = '7'; 

SELECT * FROM DW.DWS_CD_BY_SUPPLIER_MONTH WHERE dim = '7'; 

SELECT * FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH  WHERE dim = '6'; 
	
SELECT * FROM DW.DWS_MATERIAL_NAME  WHERE dim = '7'; 

SELECT MATERIAL_8CODE, MATERIAL_NAME, PRICE, DIM, "YEAR", "MONTH", "DATE"
FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE  "0:DATE" = '2018-06' AND "0:DIM"='10'  AND "0:MATERIAL_NAME" = '黑色PI原膜' ;

SELECT * FROM DW.INDEX_1_DWS_CD_BY_PURCHASER_MONTH_YEAR WHERE "0:DIM" = '4';
SELECT * FROM DW.INDEX_1_DWS_CD_BY_SUPPLIER_MONTH WHERE "0:DIM" = '4';

-- 删除MATERIAL_NAME = '/' 的数据
/**
42191211416798	/	10
42191211420033	/	10
42191211421763	/	3
42191211657088	/	unknown
42191212388988	/	2
 * 
 */ 
SELECT  * FROM DW.DWS_MATERIAL_NAME WHERE MATERIAL_NAME = '/';
SELECT  count(1) FROM DW.DWS_MATERIAL_NAME; -- 194938
delete from DW.DWS_MATERIAL_NAME where  PKID = 42191212388988

/***
 * 
 *  2019-12-16
 *    汇总 ：每个BG的CD金额排行. （根据时间段）
 * 
 */
SELECT SUM(CD_AMOUNT) AS  CD_AMOUNT_ALL , SUM(CD_AMOUNT)/sum(TOTAL_AMOUNT) AS CD_PROPORTION_ALL,
sum(TOTAL_AMOUNT) AS  TOTAL_AMOUNT_ALL ,dim,BG
FROM DW.DWS_CD_BY_AMOUNT_MONTH WHERE "DATE" BETWEEN '2019-01' AND '2019-12' AND  dim NOT IN  ('unknown' ,'10')
GROUP BY DIM,BG ORDER BY SUM(CD_AMOUNT) DESC;


/**
 * 
 * 供应商的CD金额排名，（根据时间段）
 * 
 */

SELECT supplier_name,SUM(CD_AMOUNT) AS  CD_AMOUNT_ALL , SUM(CD_AMOUNT)/sum(TOTAL_AMOUNT) AS CD_PROPORTION_ALL,
    sum(TOTAL_AMOUNT) AS  TOTAL_AMOUNT_ALL
       FROM DW.DWS_CD_BY_SUPPLIER_MONTH WHERE
      "DATE"  BETWEEN '2019-01'  AND '2019-12'
      AND dim='1'
      AND CD_AMOUNT IS NOT NULL
      AND CD_AMOUNT !=0
      AND TOTAL_AMOUNT IS NOT NULL
      AND TOTAL_AMOUNT !=0
      GROUP BY SUPPLIER_NAME
      ORDER BY SUM(CD_AMOUNT) DESC LIMIT 10 ;
     
     
     
SELECT supplier_name,SUM(CD_AMOUNT) AS  CD_AMOUNT_ALL , SUM(CD_AMOUNT)/sum(TOTAL_AMOUNT) AS CD_PROPORTION_ALL,
sum(TOTAL_AMOUNT) AS  TOTAL_AMOUNT_ALL
     FROM DW.DWS_CD_BY_SUPPLIER_MONTH WHERE
    "DATE"  BETWEEN '2019-01'  AND '2019-12'
    AND dim='1'
    GROUP BY SUPPLIER_NAME
    ORDER BY SUM(CD_AMOUNT) DESC LIMIT 10;

/**
 *   
 select * from DW.DWS_CD_BY_MATERIAL_TYPE_MONTH where dim = '10' and 
  "DATE" BETWEEN '2019-01-01' AND '2019-12-06' 
 * 
 */
-- SELECT * FROM  DW.MATERIAL_CUT_PRICE_INDEX WHERE "0:DATE" = '2018-06' AND "0:DIM"='10'  AND "0:MATERIAL_NAME" = '黑色PI原膜';
-- SELECT * FROM  DW.MATERIAL_CUT_PRICE_INDEX WHERE "0:DATE" = '2018-06' AND "0:DIM"='10'  AND "0:MATERIAL_NAME" 
-- in ('黑色PI原膜','PI 胶带','双面胶带');

SELECT * FROM  DW.MATERIAL_CUT_PRICE_INDEX WHERE "0:DATE" = '2018-06' AND "0:DIM"='10'  
AND "0:MATERIAL_NAME" in ('黑色PI原膜','PI 胶带','双面胶带')
ORDER BY "0:DATE" ASC , "0:PRICE" DESC;

SELECT  * FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH

 !tables;

select MATERIAL_NAME  from DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE
dim='1' GROUP BY MATERIAL_NAME
-->>   创建索引

-- 1)、创建 物料降价 索引
CREATE INDEX INDEX_1_MATERIAL_CUT_PRICE ON DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH("DATE",DIM,MATERIAL_NAME,PRICE,"YEAR", "MONTH" )
INCLUDE(MATERIAL_8CODE,BG);

	-- CREATE INDEX INDEX_2_MATERIAL_CUT_PRICE ON DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH(DIM,MATERIAL_NAME,diff_num desc,count_num desc );
-- 2)、创建supplier index
CREATE INDEX INDEX_1_DWS_CD_BY_SUPPLIER_MONTH ON DW.DWS_CD_BY_SUPPLIER_MONTH("DATE",DIM) 
INCLUDE(bg,supplier_code,supplier_name,account_day,cd_amount,cd_proportion,total_amount, "YEAR", "MONTH");

-- 3)、 创建employ表优化索引
CREATE INDEX INDEX_1_DWB_EMPLOYEE ON DW.DWB_EMPLOYEE(FADNUMBER)
INCLUDE(FNUMBER,FNAME,FGROUPORG,DEPT_ID,FSTATUS,TEL,FTITLE,ORIGIN,RESERVED1,RESERVED2,CRETIME);

-- 4)、 创建  采购员金额索引
CREATE INDEX INDEX_1_DWS_CD_BY_PURCHASER_MONTH_YEAR 
ON DW.DWS_CD_BY_PURCHASER_MONTH_YEAR("DATE",DIM,PURCHASER,TOTAL_AMOUNT,CD_AMOUNT,CD_PROPORTION);
-- 5)、 创建  物料名称表索引  
  -- CREATE INDEX INDEX_1_DWS_MATERIAL_NAME ON DW.DWS_MATERIAL_NAME(DIM,MATERIAL_NAME);

--6) 导出 报表建立索引

CREATE INDEX INDEX_1_DWS_PURCHASE_REPORT_BY_EAS 
ON DW.DWS_PURCHASE_REPORT_BY_EAS("DATE" DESC,DIM)INCLUDE
(area ,factory_code ,factory_area ,stock_org_number,stock_org_name,
stock_in_audit_time ,first_level ,secondary_level,third_level ,po_number , supplier_code ,
supplier_name ,supplier_simple_name,material_code ,material_8code , material_name ,material_model 
,quantity ,unit,currency ,currency_name ,tax_price , tax_rate ,exchange_rate , price ,tax_amount ,
amount ,material_type , buyer ,docu_pic ,remarks ,company_code ,company_name ,bechmark_price 
,bechmark_amount , cd_amount ,cd_proportion ,
account_day ,account_amount );

--6) 物料类型 的物料详情 建立索引 

CREATE INDEX INDEX_1_DWS_CD_BY_MATERIAL_MONTH
ON DW.DWS_CD_BY_MATERIAL_MONTH ("DATE",DIM,material_type,material_name) INCLUDE
(bg,cd_amount,cd_proportion,total_amount,"YEAR", "MONTH");

--7） 报表导出，构建索引
CREATE INDEX INDEX_1_DWS_PURCHASE_REPORT_BY_EAS2
ON DW.DWS_PURCHASE_REPORT_BY_EAS2 ("DATE",DIM,company_name)INCLUDE
( area ,factory_code ,factory_area ,stock_org_number,stock_org_name ,
stock_in_audit_time ,first_level ,secondary_level,third_level ,po_number ,
supplier_code ,supplier_name ,supplier_simple_name,material_code ,material_8code ,
material_name ,material_model ,quantity ,unit,currency ,currency_name ,tax_price ,
tax_rate ,exchange_rate , price ,tax_amount ,amount ,material_type  ,
buyer ,docu_pic ,remarks ,company_code ,bechmark_price ,bechmark_amount ,
cd_amount ,cd_proportion ,account_day ,account_amount,pay_type,
OUT_SUPP_MATERIAL_CODE, PURCHASE_GROUP_NAME, BRANCH_OF_FACOTY, PROJECT_ID, CUR_AMOUNT, 
CHECK_BECHMARK_PRICE, CHECK_BECHMARK_AMOUNT, CHECK_CD_AMOUNT, SUPP_PO_CODE, APPOINT, ORI_PROXY,
PERIOD, ORDER_DATE, SUPPLIER_PO_NUMBER, ORIGIN_FIRM, CLASSIFY, PAY_CONDITION, PAY_DAY, ACREAGE, 
LINE, LINE_PIC, TYPE_PIC, PROJECT_PIC, BIG_CLASSIFY, REDUCE_PRICE_ORIG, AVG_PAY_DAY, REBATE_RATIO, 
UPDATE_STATEMENT_PRICE, DIFF_AMOUNT, UPDATE_BECHMARK_PRICE, RPL_CD_AMOUNT, ALL_CD, BG );


--8)  经管索引构建


-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
SELECT * FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE MATERIAL_NAME = '/'

-- 删除索引
drop index INDEX_2_MATERIAL_CUT_PRICE ON DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH;
DROP INDEX INDEX_1_DWS_MATERIAL_NAME  ON DW.DWS_MATERIAL_NAME;
DROP INDEX INDEX_1_DWS_PURCHASE_REPORT_BY_EAS ON DW.DWS_PURCHASE_REPORT_BY_EAS;
DROP INDEX INDEX_1_DWS_PURCHASE_REPORT_BY_EAS2 ON DW.DWS_PURCHASE_REPORT_BY_EAS2 ;
DROP INDEX INDEX_1_DWS_CD_BY_MATERIAL_MONTH ON DW.DWS_CD_BY_MATERIAL_MONTH
/***  test  */
-- 208477
SELECT "DATE" FROM DW.DWS_PURCHASE_REPORT_BY_EAS WHERE DATE BETWEEN '201901' AND '201912'
AND dim = '1' ORDER BY "DATE" LIMIT 200000 offset 0

-- 测试 report表分页
SELECT count(1) FROM DW.INDEX_1_DWS_PURCHASE_REPORT_BY_EAS;
--     dim='1'  208477
   SELECT AREA,dim FROM DW.DWS_PURCHASE_REPORT_BY_EAS WHERE DATE BETWEEN '201901' AND '201912'
AND dim ='1' ORDER BY "DATE" LIMIT 200000 offset 200002
--  dim in ('1','2')   394957
	   SELECT CD_AMOUNT FROM DW.DWS_PURCHASE_REPORT_BY_EAS WHERE DATE BETWEEN '201901' AND '201912'
	AND dim in ('1','2') ORDER BY "DATE" LIMIT 100000 offset 300001

-- 56455 
	  SELECT PKID FROM DW.DWS_PURCHASE_REPORT_BY_EAS WHERE DATE BETWEEN '201901' AND '201912'
	AND dim in ('1','2')  LIMIT 100000 offset 300000
-- 1012297    --25710[两个in]
 SELECT CD_AMOUNT FROM DW.DWS_PURCHASE_REPORT_BY_EAS WHERE DATE BETWEEN '201901' AND '201912'
AND dim in ('1','2','3') AND COMPANY_CODE IN ('01.02.05','01.01.13') LIMIT 10000 offset 20001;

-- DATE BETWEEN '201901' AND '201912'  --39175 ORDER BY AREA 
 SELECT CD_AMOUNT FROM DW.DWS_PURCHASE_REPORT_BY_EAS2 WHERE 
 dim in ('1','2') LIMIT 100000 offset 30001;

-- 测试 不加索引的表
-- 256 
 SELECT CD_AMOUNT FROM DW.DWS_CD_BY_AREA_MONTH WHERE DATE BETWEEN '2019-01' AND '2019-12'
AND dim in ('1','2') ORDER BY PKID LIMIT 6 offset 256;


SELECT area ,factory_code ,factory_area ,stock_org_number,stock_org_name ,date ,
        stock_in_audit_time ,first_level ,secondary_level,third_level ,po_number ,
        supplier_code ,supplier_name ,supplier_simple_name,material_code ,material_8code ,
        material_name ,material_model ,quantity ,unit,currency ,currency_name ,tax_price ,
        tax_rate ,exchange_rate , price ,tax_amount ,amount ,material_type  ,
        buyer ,docu_pic ,remarks ,company_code ,company_name ,bechmark_price ,bechmark_amount ,
        cd_amount ,cd_proportion ,account_day ,account_amount,DAY
       --  SELECT * 
        FROM DW.DWS_PURCHASE_REPORT_BY_EAS WHERE DATE BETWEEN '201901' AND '201912'
AND dim = '1' ORDER BY "DATE" LIMIT 200000 offset 200002

-- 测试 物料类型的详情 查询速度。
-- SELECT count(1) FROM  DW.DWS_CD_BY_MATERIAL_MONTH ; -- 1055793
select bg,material_type,material_name,cd_amount,cd_proportion,total_amount,dim,"YEAR", "MONTH", "DATE" 
from DW.DWS_CD_BY_MATERIAL_MONTH 
WHERE "DATE" BETWEEN '2019-01' AND  '2019-12' and dim='1' AND  material_type IS NOT NULL  LIMIT 15

SELECT count(1)
from DW.DWS_CD_BY_MATERIAL_MONTH 
WHERE "DATE" BETWEEN '2019-01' AND  '2019-12' and dim='1' AND  material_type IS NOT NULL;


SELECT count(area) FROM DW.DWS_PURCHASE_REPORT_BY_EAS2 
WHERE "DATE" BETWEEN '2019-01' AND  '2019-01' and dim IN ('1','2') AND AREA =''

SELECT BG, dim,count(1) FROM DW.DWS_CD_BY_AMOUNT_MONTH GROUP BY dim,BG;

SELECT *  FROM DW.DWS_CD_BY_AMOUNT_MONTH WHERE dim = '6';	

SELECT *  FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH WHERE dim = '6';
SELECT *  FROM DW.DWS_CD_BY_ACCOUNT_DAY_MONTH WHERE dim = '7';

SELECT count(1) FROM DW.DWS_PURCHASE_REPORT_BY_CICAI

SELECT * FROM  DW.DWS_PURCHASE_REPORT_BY_JIEG WHERE FACTORY = '8800' AND IN_DATE LIKE '%2019%';

--  SELECT SUBSTR(IN_DATE,0,4) || '-' || SUBSTR(IN_DATE,6,2) FROM DW.DWS_PURCHASE_REPORT_BY_JIEG;
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_BU_MONTH
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_BU_WEEK
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_FACTORY_MONTH;
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_FACTORY_WEEK;
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_MONTH
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_ORGANIZATION_MONTH
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_ORGANIZATION_WEEK
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_PROCESS_DIM_MONTH
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_PROCESS_DIM_WEEK
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_PROJECT_MONTH
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_PROJECT_WEEK
DROP TABLE DW.DWS_MANAGEMENT_OUTPUTVALUE_BY_WEEK

DELETE from SYSTEM."CATALOG" WHERE TABLE_name = 'DWS_MANAGEMENT_OUTPUTVALUE_BY_BU_MONTH'

SELECT * FROM  DW.DWS_CD_BY_MATERIAL_MONTH;


delete TABLE DW.DWS_CD_BY_MATERIAL_MONTH;
DROP TABLE DW.DWS_CD_BY_MATERIAL_MONTH;

SELECT count(1) FROM DW.DWS_CD_BY_MATERIAL_MONTH;

SELECT * FROM DW.INDEX_1_DWS_CD_BY_MATERIAL_MONTH ; 
SELECT * FROM DW.INDEX_1_DWB_EMPLOYEE


-- 结构件 date
-- 磁材   in_date
SELECT "DATE",IN_DATE  FROM DW.DWS_PURCHASE_REPORT_BY_JIEG  WHERE IN_DATE='2019-08' LIMIT 10


 SELECT SUBSTR("DATE",0,4) || '-' || SUBSTR("DATE",5,2) FROM DW.DWS_PURCHASE_REPORT_BY_EAS2
 where "DATE" IS NOT  NULL;

-- 3580199
 SELECT count(1) FROM DW.DWS_PURCHASE_REPORT_BY_EAS2 WHERE "DATE" = '2020-02' AND dim ='2'
 where "DATE" IS NOT  NULL;

SELECT count(1) FROM DW.DWS_PURCHASE_REPORT_BY_CICAI WHERE in_date = '2020-02'
SELECT count(1) FROM DW.DWS_PURCHASE_REPORT_BY_JIEG WHERE  "DATE" = '2020-02'
SELECT count(1) FROM DW.DWB_YIFEI_DISPLAY_MODULE WHERE  "DATE" = '2020-02'

UPSERT INTO DW.DWS_PURCHASE_REPORT_BY_EAS2
SELECT PKID, CREATE_TIME, UPDATE_TIME, AREA, FACTORY_CODE, FACTORY_AREA, STOCK_ORG_NUMBER, 
STOCK_ORG_NAME, SUBSTR("DATE",0,4) || '-' || SUBSTR("DATE",5,2) , STOCK_IN_AUDIT_TIME, FIRST_LEVEL, SECONDARY_LEVEL, THIRD_LEVEL, PO_NUMBER, 
SUPPLIER_CODE, SUPPLIER_NAME, SUPPLIER_SIMPLE_NAME, MATERIAL_CODE, MATERIAL_8CODE, MATERIAL_NAME,
MATERIAL_MODEL, QUANTITY, UNIT, CURRENCY, CURRENCY_NAME, TAX_PRICE, TAX_RATE, EXCHANGE_RATE, PRICE,
TAX_AMOUNT, AMOUNT, BECHMARK_PRICE, BECHMARK_AMOUNT, CD_AMOUNT, CD_PROPORTION, ACCOUNT_DAY, 
ACCOUNT_AMOUNT, MATERIAL_TYPE, BUYER_ID, BUYER, DOCU_PIC, REMARKS, COMPANY_CODE, COMPANY_NAME, 
PAY_TYPE, DIM, "DAY", OUT_SUPP_MATERIAL_CODE, PURCHASE_GROUP_NAME, BRANCH_OF_FACOTY, PROJECT_ID,
CUR_AMOUNT, CHECK_BECHMARK_PRICE, CHECK_BECHMARK_AMOUNT, CHECK_CD_AMOUNT, SUPP_PO_CODE, APPOINT,
ORI_PROXY, PERIOD, ORDER_DATE, SUPPLIER_PO_NUMBER, ORIGIN_FIRM, CLASSIFY, PAY_CONDITION, PAY_DAY,
ACREAGE, LINE, LINE_PIC, TYPE_PIC, PROJECT_PIC, BIG_CLASSIFY, REDUCE_PRICE_ORIG, AVG_PAY_DAY, 
REBATE_RATIO, UPDATE_STATEMENT_PRICE, DIFF_AMOUNT, UPDATE_BECHMARK_PRICE, RPL_CD_AMOUNT, ALL_CD, 
BG FROM DW.DWS_PURCHASE_REPORT_BY_EAS2;


CREATE INDEX INDEX_1_DWS_MANAGEMENT_OUTPUTVALUE_DETAIL
ON DW.DWS_MANAGEMENT_OUTPUTVALUE_DETAIL (VOUCHERDATE,DIM) INCLUDE
(BG,ZBG,WEEK,OUTPUT_VALUE,"YEAR","MONTH","DATE");
    

SELECT BG,count(1) FROM DW.DWS_CD_BY_MATERIAL_CUT_PRICE_MONTH GROUP BY BG;
SELECT BG,count(1) FROM DW.DWS_CD_BY_MATERIAL_TYPE_MONTH GROUP BY BG;
SELECT BG,sum(TOTAL_AMOUNT) FROM DW.DWS_CD_BY_SUPPLIER_MONTH GROUP BY BG;
SELECT BG,sum(TOTAL_AMOUNT) FROM DW.DWS_CD_BY_ACCOUNT_DAY_MONTH GROUP BY BG;
SELECT BG,sum(TOTAL_AMOUNT) FROM DW.DWS_CD_BY_AREA_MONTH GROUP BY BG;
SELECT BG,sum(TOTAL_AMOUNT) FROM DW.DWS_CD_BY_MATERIAL_MONTH GROUP BY BG;
SELECT BG,sum(TOTAL_AMOUNT) FROM DW.DWS_CD_BY_AMOUNT_MONTH WHERE "DATE" = '2020-01'  GROUP BY BG ;

SELECT dim, count(1) FROM DW.DWS_CD_BY_AMOUNT_MONTH  GROUP BY dim -- 486

SELECT area,COMPANY_NAME,TOTAL_AMOUNT, "DATE" FROM  DW.DWS_CD_BY_AREA_MONTH 
WHERE dim = '3' 
AND "DATE" = '2020-01'
AND AREA IS NULL OR AREA= '' 
;

SELECT distinct(day) FROM  DW.DWS_CD_BY_AREA_MONTH
